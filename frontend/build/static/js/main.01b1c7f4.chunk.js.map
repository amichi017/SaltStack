{"version":3,"sources":["actions/types.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/reducersDate.js","reducers/saltReturns.js","reducers/saveMinion.js","reducers/listMinions.js","reducers/graphDate.js","reducers/saltReturnsGraph.js","reducers/CurrentMonth.js","reducers/CurrentYear.js","reducers/LastThreeMonths.js","reducers/fab.js","reducers/index.js","actions/errorActions.js","actions/authActions.js","store.js","actions/date.js","Component/Title.js","Component/Graph.js","Component/SearchTime.js","Component/Table.js","Component/MinionCard.js","Component/auth/Logout.js","Component/SaltStack.js","Component/SearchTimeGraph.js","Component/CurrentMonth.js","Component/CurrentYear.js","Component/LastThreeMonths.js","Component/FormOfTeam.js","Component/TeamCard.js","Component/Team.js","Dashboard.js","serviceWorker.js","Component/auth/ForgotPasswordForm.js","Component/auth/ChangePasswordForm.js","Component/auth/LoginForm.js","Component/routers/Routes.js","App.js","index.js"],"names":["FAB","initialState","msg","status","id","token","isAuthenticated","isLoading","user","start","Date","end","graphDate","saltReturns","saveMinion","listMinions","saltReturnsGraph","CurrentMonth","CurrentYear","dataInitOne","dataInitTow","dataInitThree","fab","details","first_name","last_name","Role","Email","appReducer","combineReducers","state","action","type","payload","date","auth","localStorage","setItem","access_token","removeItem","error","LastThreeMonths","returnErrors","loadUser","dispatch","getState","axios","get","tokenConfig","then","res","data","catch","err","response","register","email","password","body","JSON","stringify","post","headers","console","log","login","message","logout","config","middleWare","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","str","toDateString","MonthStart","String","parseInt","getMonth","yearStart","getFullYear","DayStart","getDate","Start","MonthEnd","yearEnd","DayEnd","End","minions","year","dayEnd","satrtCurrentMonth","yearTemp","satrtMonth","endtLastThreeMonths","url","concat","Title","props","Typography","component","variant","color","gutterBottom","children","createData","time","Success","Fail","amount","demoOnClick","e","parseNumber","hower","slice","Chart","dataInit","bind","flag","graphIsPrepared","tempArray","forEach","item","Array","isArray","return","dataTemp","Object","entries","map","values","result","jid","setState","forceUpdate","nextProps","this","Fragment","style","paddingLeft","toLocaleDateString","onClick","margin","top","right","bottom","left","dataKey","stroke","className","classes","root","CircularProgress","React","PureComponent","connect","withStyles","theme","display","marginLeft","spacing","marginTop","Deposits","handleDateChangeStart","handleDateChangeEnd","dateIsChanged","booleanStart","booleanEnd","utils","DateFnsUtils","Grid","container","justify","label","format","value","onChange","KeyboardButtonProps","flex","paddingTop","Button","endIcon","Component","ownProps","minet","month","day","tableIcons","Add","forwardRef","ref","AddBox","Check","Clear","Delete","Edit","DetailPanel","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ArrowDownward","ThirdStateCheck","Remove","ViewColumn","dataColumns","title","field","cellStyle","x","dataTable","Orders","selestMinion","handleClickOpen","handleClose","Returns","dialogOpen","minion","setTimeout","getTime","setHours","saltTemp","index","arr","length","name","_id","event","rowData","filter","temp","nextState","columns","icons","onRowClick","evt","selectedRow","options","exportButton","filtering","actions","icon","tooltip","Dialog","open","onClose","aria-describedby","maxWidth","scroll","aria-labelledby","DialogTitle","fontSize","undefined","DialogContent","dividers","minWidth","TreeView","defaultCollapseIcon","defaultExpandIcon","TreeItem","nodeId","keys","TreeItemText","text","comment","changes","_id_","CardActions","DialogActions","autoFocus","height","flexGrow","MinionCard","commentg","defer","click","listOpen","onClickMinion","handleClickButton","prepared","prevState","bullet","Card","CardContent","Parameter","Tree_Res","res_of_cmd","disableSpacing","IconButton","aria-label","DialogContentText","Width","nested","transform","overflow","pos","marginBottom","button","width","flexWrap","wordWrap","Logout","border","SaltStack","reason","warninginput","warningNoMinionSelected","clickOpen","sentCommand","ClickCSend","getMinionsFromServer","i","push","alert","menu","clickSave","history","input","parms","countSaveMinion","err_from_server_run_cmd","err_cmd","err_cmd_flag","minions_send_to_server","cmd_no_run_bacuse","tokenTemp","row","command","list_card_from_store","split","parms_send","id_of_commnd","unshift","func","tgt","salt_cmd","buildRes","flexDirection","Paper","iconButton","InputBase","autoComplete","target","placeholder","inputProps","Divider","divider","orientation","size","Comments","light","paperParms","inputparms","ButtonGroup","flexFlow","MaterialTable","Alert","severity","selection","Snackbar","autoHideDuration","padding","alignItems","minionStyle","iconButtonParms","dividerParms","SearchTimeGraph","handleDateChange","initWithoutInformation","initFirstTime","mnonthDay","time_1","BreakException","time_2","place","startIcon","strokeDasharray","verticalAlign","wrapperStyle","lineHeight","y","fill","getDataFromServer","nameOne","nameTow","nameThree","one","tow","three","monthDayOne","monthDayTow","monthDayThree","timer_1","timer_2","dayEndTow","satrtMonthTow","startTow","endTow","dayEndThree","satrtMonthTrhee","startTrhee","endTrhee","listMonth","tempMonth","FormOfTeam","signIn","handleInputChange","handleClickShowPassword","handleMouseDownPassword","handleClickShowPasswordReturn","handleMouseDownPasswordReturn","Team","expanded","Password","ReturnPassword","showPasswordReturn","showPassword","errPassword","saveCard","preventDefault","strongRegex","RegExp","emailRegex","test","err_Password","err_first_name","err_last_name","err_Role","toUpperCase","err_Email","upDate","role","mail","no_add_card","UnsecuredPassword","form","onSubmit","TextField","required","fullWidth","InputProps","startAdornment","InputAdornment","position","endAdornment","onMouseDown","justifyContent","paragraph","outline","outlineOffset","TeamCard","deleteIcon","edit","UpperCase","isDelete","delete","CardHeader","avatar","Avatar","subheader","media","expand","transition","transitions","create","duration","shortest","expandOpen","backgroundColor","red","handleExpandClick","ClickFab","initTeam","counter","lastName","Fab","Dashboard","handleDrawerOpen","handleDrawerClose","SelectMenu","fixedHeightPaper","clsx","paper","fixedHeight","fixedHeightPaperFirst","fixedHeightFirst","fixedHeightPaperTow","fixedHeightTow","CssBaseline","AppBar","appBar","appBarShift","Toolbar","toolbar","edge","menuButton","menuButtonHidden","noWrap","Drawer","drawerPaper","drawerPaperClose","toolbarIcon","List","ListItem","ListItemIcon","ListItemText","primary","ListSubheader","inset","content","appBarSpacer","Container","xs","md","lg","Graph","SearchTime","Table","table","paddingRight","mixins","zIndex","drawer","easing","sharp","leavingScreen","enteringScreen","marginRight","whiteSpace","overflowX","breakpoints","up","paddingBottom","AccountCircleIcon","NotificationsIcon","Boolean","location","hostname","match","ForgotPassword","resetPass","helperText","emailInput","focus","submit","Link","handler","palette","secondary","main","ChangePasswordForm","updatePass","old_password1","old_password2","new_password","prevProps","inputRef","passwordInput","LoginForm","screen","ForgotPasswordForm","FormControlLabel","control","Checkbox","clearErrors","Routes","exact","path","authed","PrivateRoute","rest","render","authActions","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.01b1c7f4.chunk.js","sourcesContent":["export const USER_LOADING = \"USER_LOADING\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\nexport const DATE_SELECT = \"DATE_SELECT\";\r\nexport const SALT_RETURNS = \"SALT_RETURNS\";\r\nexport const SAVE_MINION = \"SAVE_MINION\";\r\nexport const LIST_MINIONS = \"LIST_MINIONS\";\r\nexport const TEAM_LIST = \"TEAM_LIST\";\r\nexport const GRAPH_DATE_SELECT = \"GRAPH_DATE_SELECT\";\r\nexport const SALT_RETURNS_GRAPH = \"SALT_RETURNS_GRAPH\";\r\nexport const CURRENT_MONTH = \"CURRENT_MONTH\";\r\nexport const CURRENT_YEAR = \"CURRENT_YEAR\";\r\nexport const LAST_THREE_MONTHS_ONE = \"LAST_THREE_MONTHS_ONE\";\r\nexport const LAST_THREE_MONTHS_TOW = \"LAST_THREE_MONTHS_TOW\";\r\nexport const LAST_THREE_MONTHS_THREE = \"LAST_THREE_MONTHS_THREE\";\r\nexport const FAB = \"FAB\";\r\nexport const FAB_WITH_DATA = \"FAB_WITH_DATA\";","import {GET_ERRORS, CLEAR_ERRORS} from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    msg: {},\r\n    status: null,\r\n    id: null\r\n}\r\n\r\n\r\nexport default function(state=initialState, action) {\r\n\r\n    switch(action.type){\r\n        case GET_ERRORS:\r\n            return {\r\n                msg: action.payload.msg,\r\n                status: action.payload.status,\r\n                id: action.payload.id\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                msg: {},\r\n                status: null,\r\n                id: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    isAuthenticated: null,\r\n    isLoading: false,\r\n    user: null,\r\n\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: action.payload\r\n            };\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', action.payload.access_token);\r\n            return {\r\n                token: action.payload.access_token,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n            };\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n        case REGISTER_FAIL:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                isLoading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"," import {DATE_SELECT} from '../actions/types';\r\n\r\n\r\n const initialState = {\r\n\r\n     start: new Date(),\r\n     end: new Date(),\r\n     graphDate: new Date(),\r\n\r\n\r\n};\r\n\r\n export default function(state=initialState, action) {\r\n//console.log(\"state\",state);\r\n  switch(action.type){\r\n      case DATE_SELECT:\r\n        return {\r\n                start:action.payload.start,\r\n                end:action.payload.end,\r\n\r\n              };\r\n\r\n\r\n        default:\r\n               return state;\r\n  }\r\n\r\n }\r\n\r\n\r\n","\r\n import {SALT_RETURNS} from '../actions/types';\r\n\r\n\r\n const initialState = {\r\n    saltReturns:null,\r\n};\r\n\r\nexport default function(state=initialState, action) { \r\n//console.log(\"SALT_RETURNS\",action.payload);\r\nswitch(action.type){\r\n    case SALT_RETURNS:\r\n    return {\r\n        saltReturns:action.payload,\r\n    };\r\n    default:\r\n        return state;\r\n }\r\n}","\r\nimport {SAVE_MINION} from '../actions/types';\r\n\r\n\r\n const initialState = {\r\n    saveMinion:[],\r\n};\r\n\r\nexport default function(state=initialState, action) { \r\n //console.log(\"SALT_RETURNS\",action.payload);\r\nswitch(action.type){\r\n    case SAVE_MINION:\r\n    return {\r\n        saveMinion:action.payload,\r\n    };\r\n    default:\r\n        return state;\r\n }\r\n}","\r\nimport {LIST_MINIONS} from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n   listMinions:[],\r\n};\r\n\r\nexport default function(state=initialState, action) { \r\n    //console.log(action.payload,'action.payload')\r\nswitch(action.type){\r\n   case LIST_MINIONS:\r\n    return {\r\n        listMinions:action.payload,\r\n    };\r\n   default:\r\n       return state;\r\n}\r\n}","import {GRAPH_DATE_SELECT} from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n\r\n    graphDate: new Date(),\r\n\r\n\r\n};\r\n\r\nexport default function(state=initialState, action) {\r\n//console.log(\"state\",state);\r\n switch(action.type){\r\n     case GRAPH_DATE_SELECT:\r\n       return {\r\n                graphDate:action.payload.graphDate,\r\n              \r\n             };\r\n\r\n\r\n       default:\r\n              return state;\r\n }\r\n\r\n}\r\n\r\n\r\n"," import {SALT_RETURNS_GRAPH} from '../actions/types';\r\n\r\n\r\n const initialState = {\r\n    saltReturnsGraph:null,\r\n};\r\n\r\nexport default function(state=initialState, action) { \r\n\r\nswitch(action.type){\r\n    case SALT_RETURNS_GRAPH:\r\n    return {\r\n        saltReturnsGraph:action.payload,\r\n    };\r\n    default:\r\n        return state;\r\n }\r\n}","\r\nimport {CURRENT_MONTH} from '../actions/types';\r\n\r\n// let temp=new Date();\r\n// let dataInit=[];\r\n// let mnonthDay =new Date(temp.getFullYear(), temp.getMonth()-1, 0).getDate();\r\n// for (let i=1;i<=mnonthDay;i++){\r\n//     dataInit.push( { name: String(i), Fail:0, Success:0 });\r\n// }\r\nconst initialState = {\r\n    CurrentMonth:[],\r\n};\r\n\r\nexport default function(state=initialState, action) { \r\n   // console.log(\"CURRENT_MONTH\",action.payload);\r\nswitch(action.type){\r\n   case CURRENT_MONTH:\r\n   return {\r\n    CurrentMonth:action.payload,\r\n   };\r\n   default:\r\n       return state;\r\n}\r\n}","\r\nimport {CURRENT_YEAR} from '../actions/types'; \r\n\r\n// let dataInit=[];\r\n//     // let temp=new Date(2019,10);\r\n// dataInit.push( { name: String('January'), Fail:0, Success:0 });\r\n// dataInit.push( { name: String('February'), Fail:0, Success:0 });\r\n// dataInit.push( { name: String('March'), Fail:0, Success:0 });\r\n// dataInit.push( { name: String('April'), Fail:0, Success:0 });\r\n// dataInit.push( { name: String('May '), Fail:0, Success:0 });\r\n// dataInit.push( { name: String('June  '), Fail:0, Success:0 });\r\n// dataInit.push( { name: String('July  '), Fail:0, Success:0 });\r\n// dataInit.push( { name: String('August '), Fail:0, Success:0 });\r\n// dataInit.push( { name: String('September '),Fail:0, Success:0 });\r\n// dataInit.push( { name: String('October '), Fail:0, Success:0 });\r\n// dataInit.push( { name: String('November  '),Fail:0, Success:0 });\r\n// dataInit.push( { name: String('December '), Fail:0, Success:0 });\r\nconst initialState = {\r\n    CurrentYear:[],\r\n};\r\n\r\nexport default function(state=initialState, action) { \r\n   // console.log(\"CURRENT_YEAR\",action.payload);\r\nswitch(action.type){\r\n   case CURRENT_YEAR:\r\n   return {\r\n    CurrentYear:action.payload,\r\n   };\r\n   default:\r\n       return state;\r\n}\r\n}","\r\nimport {LAST_THREE_MONTHS_ONE,\r\n       LAST_THREE_MONTHS_TOW,\r\n       LAST_THREE_MONTHS_THREE\r\n      } from '../actions/types';\r\n\r\n\r\n\r\n\r\n// let dataInitOne=[];\r\n\r\n\r\n\r\n// let temp=new Date();\r\n// // let temp=new Date(2019,10);\r\n\r\n// let monthDayOne =new Date(temp.getFullYear(), temp.getMonth()-2, 0).getDate();\r\n//   for (let i=1;i<=monthDayOne;i++){\r\n//     dataInitOne.push( { name: String(i), Fail:0, Success:0 });\r\n// }\r\n// ////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n// let dataInitTow=[];\r\n\r\n// let monthDayTow =new Date(temp.getFullYear(), temp.getMonth()-1, 0).getDate();\r\n//   for (let i=1;i<=monthDayTow;i++){\r\n//     dataInitTow.push( { name: String(i), Fail:0, Success:0 });\r\n// }\r\n\r\n// ///////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n// let dataInitThree=[];\r\n\r\n\r\n// let monthDayThree =new Date(temp.getFullYear(), temp.getMonth(), 0).getDate();\r\n//   for (let i=1;i<=monthDayThree;i++){\r\n//     dataInitThree.push( { name: String(i), Fail:0, Success:0 });\r\n// }\r\n\r\nconst initialState = {\r\n    dataInitOne:[],\r\n    dataInitTow:[],\r\n    dataInitThree:[],\r\n};\r\n\r\nexport default function(state=initialState, action) { \r\n//console.log(\"LAST_THREE_MONTHS\",action.payload);\r\nswitch(action.type){\r\n   case LAST_THREE_MONTHS_ONE:\r\n   return {\r\n    ...state,\r\n    dataInitOne:action.payload,\r\n   };\r\n   case LAST_THREE_MONTHS_TOW:\r\n    return {\r\n      ...state,\r\n      dataInitTow:action.payload,\r\n  };\r\n  case LAST_THREE_MONTHS_THREE:\r\n    return {\r\n      ...state,\r\n      dataInitThree:action.payload,\r\n  };\r\n   default:\r\n       return state;\r\n}\r\n}","\r\nimport {FAB,FAB_WITH_DATA} from '../actions/types';\r\n\r\nconst initialState = {\r\n   fab:false,\r\n   details:{\r\n    first_name:\"\",\r\n    last_name:\"\",\r\n    Role:\"\",\r\n    Email:\"\",\r\n    //upDate=true,\r\n   }\r\n};\r\n\r\nexport default function(state=initialState, action) { \r\n    //console.log(action.payload,'action.payload')\r\nswitch(action.type){\r\n   case FAB:\r\n    return {\r\n        ...state,\r\n        fab:action.payload,\r\n    };\r\n    case FAB_WITH_DATA:\r\n    return {\r\n        fab:true,\r\n        details:action.payload,\r\n    };\r\n   default:\r\n       return state;\r\n}\r\n}","import {combineReducers} from 'redux';\r\nimport errorReducer from './errorReducer';\r\nimport authReducer from './authReducer';\r\nimport reducerDate from './reducersDate';\r\nimport saltReturns  from './saltReturns';\r\nimport saveMinion  from './saveMinion';\r\nimport listMinions  from './listMinions';\r\nimport graphDate  from './graphDate';\r\nimport saltReturnsGraph  from './saltReturnsGraph';\r\nimport CurrentMonth  from './CurrentMonth';\r\nimport CurrentYear  from './CurrentYear';\r\nimport LastThreeMonths  from './LastThreeMonths';\r\nimport fab  from './fab';\r\nconst appReducer = combineReducers({\r\n  saltReturns:saltReturns,\r\n  saltReturnsGraph:saltReturnsGraph,\r\n  date: reducerDate,\r\n  graphDate:graphDate,\r\n  auth: authReducer,\r\n  error: errorReducer,\r\n  saveMinion:saveMinion,\r\n  listMinions:listMinions,\r\n  CurrentMonth:CurrentMonth,\r\n  CurrentYear:CurrentYear,\r\n  LastThreeMonths:LastThreeMonths,\r\n  fab:fab,\r\n  \r\n\r\n});\r\n\r\nexport default appReducer;\r\n","import { GET_ERRORS, CLEAR_ERRORS} from './types';\r\n\r\n// Return errors\r\nexport const returnErrors = (msg, status, id = null) => {\r\n    // console.log(msg,status)\r\n    return {\r\n        type: GET_ERRORS,\r\n        payload: { msg, status, id}\r\n    };\r\n};\r\n\r\n// Clear errors\r\nexport const clearErrors = () => {\r\n    return {\r\n        type: CLEAR_ERRORS\r\n    };\r\n};","import axios from 'axios';\r\nimport { returnErrors } from './errorActions';\r\n\r\nimport {\r\nAUTH_ERROR,\r\nLOGIN_SUCCESS,\r\nLOGIN_FAIL,\r\nLOGOUT_SUCCESS,\r\nREGISTER_SUCCESS,\r\nREGISTER_FAIL,\r\nUSER_LOADING,\r\nUSER_LOADED\r\n} from './types';\r\n\r\n\r\n\r\n// Check token & load user\r\nexport const loadUser = () => (dispatch, getState) => {\r\n    // User loading\r\n    dispatch({ type: USER_LOADING });\r\n    axios\r\n      .get('/auth/user', tokenConfig(getState))\r\n      .then(res =>\r\n        dispatch({\r\n          type: USER_LOADED,\r\n          payload: res.data\r\n        })\r\n      )\r\n      .catch(err => {\r\n        if(err.response){\r\n            dispatch(returnErrors(err.response.data, err.response.status));\r\n            dispatch({\r\n                type: AUTH_ERROR\r\n              });\r\n        }\r\n      });\r\n  };\r\n\r\n\r\nexport const register = ({ first_name, last_name, email, password }) => dispatch => {\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    // Request body\r\n    const body = JSON.stringify({first_name, last_name, email, password });\r\n     \r\n    axios.post('/register', body, config)\r\n    .then(res => dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data\r\n    }))\r\n    .catch(err => {\r\n        console.log(err)\r\n        dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        })\r\n    })\r\n}\r\n\r\nexport const login = ({ email, password }) => dispatch => {\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    // Request body\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    axios.post('/auth', body, config)\r\n    .then(res => dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n            \r\n    }))\r\n    .catch(err => {\r\n        dispatch(returnErrors(err.response.data.message, err.response.status, 'LOGIN_FAIL'));\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    })\r\n}\r\n\r\n\r\n// Logout User\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT_SUCCESS\r\n    })\r\n  };\r\n\r\n  \r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n       // Get token from localstorage\r\n       const token = getState().auth.token;\r\n  \r\n       // Headers\r\n       const config = {\r\n           headers: {\r\n               \"Content-type\": \"application/json\"\r\n           }\r\n       }\r\n   \r\n       // If token, add to headers\r\n       if(token) {\r\n          config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n       }\r\n\r\n    return config;\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nimport authReducer from './reducers/authReducer';\r\nimport { loadUser } from './actions/authActions';\r\n\r\nconst initialState = {};\r\n\r\nconst middleWare = [thunk];\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeEnhancers(applyMiddleware(...middleWare))\r\n);\r\n\r\n// store.dispatch(loadUser());\r\nexport default store;","import axios from 'axios';\r\nimport store from '../store'\r\n import { \r\n     DATE_SELECT,\r\n     SALT_RETURNS,\r\n     LIST_MINIONS,\r\n     TEAM_LIST,\r\n     GRAPH_DATE_SELECT,\r\n     SALT_RETURNS_GRAPH,\r\n     CURRENT_MONTH,\r\n     //CURRENT_YEAR,\r\n     LAST_THREE_MONTHS_ONE,\r\n     LAST_THREE_MONTHS_TOW,\r\n     LAST_THREE_MONTHS_THREE\r\n    } from './types';\r\n import data from '../Component/test.json';\r\n // Date is select\r\n export const dateSelect = (start , end) => {\r\n\r\n     return  {\r\n                 type: DATE_SELECT,\r\n                 payload:{start,end}\r\n              };\r\n     // console.log(\"start \",start);\r\n     // console.log(\"end \",end);\r\n\r\n }\r\n export const grapgDateSelect = (graphDate) => {\r\n\r\n    return  {\r\n                type: GRAPH_DATE_SELECT,\r\n                payload:{graphDate}\r\n             };\r\n    // console.log(\"start \",start);\r\n    // console.log(\"end \",end);\r\n\r\n}\r\n export const listMinions =  () => (dispatch, getState) => {\r\n\r\n    axios.get('/get_connected_minions',tokenConfig(getState))\r\n    .then((res) => {\r\n            let minions=[];\r\n            for(let i=0;i<res.data.result.length;i++){\r\n               let minion={name:res.data.result[i]};\r\n               minions.push(minion);\r\n            }\r\n            //console.log(minions,\"minions\");   \r\n            store.dispatch({\r\n                type: TEAM_LIST,\r\n                payload: minions\r\n            });\r\n    })\r\n    .catch(err => {\r\n        console.log(err,\"err get_connected_minions\");\r\n\r\n       });\r\n    // console.log(\"start \",start);\r\n    // console.log(\"end \",end);\r\n\r\n}\r\nexport const teamList =  () => (dispatch, getState) => {\r\n\r\n    axios.get('/get_users',tokenConfig(getState))\r\n    .then((res) => { \r\n            store.dispatch({\r\n                type: TEAM_LIST,\r\n                payload: res.data\r\n            });\r\n    })\r\n    .catch(err => {\r\n        console.log(err);\r\n\r\n       });\r\n    // console.log(\"start \",start);\r\n    // console.log(\"end \",end);\r\n\r\n}\r\n\r\n export const saltReturns =  (str) => (dispatch, getState) => {\r\n     //console.log(\"----------------------storeeeee--------------\\n\",store)\r\n     const time =new Date().toDateString();\r\n        let MonthStart= String(parseInt(store.getState().date.start.getMonth()+1));\r\n        MonthStart=parseInt(MonthStart)<10?\"0\"+MonthStart:MonthStart;\r\n        let yearStart=String(store.getState().date.start.getFullYear());\r\n        let DayStart=store.getState().date.start.getDate();\r\n        DayStart=parseInt(DayStart)<10?\"0\"+DayStart:DayStart;\r\n        let Start=yearStart+String(MonthStart)+String(DayStart)+\"000000000000\"\r\n\r\n        let MonthEnd= String(parseInt(store.getState().date.end.getMonth())+1);\r\n        MonthEnd=parseInt(MonthEnd)<10?\"0\"+MonthEnd:MonthEnd;\r\n        let yearEnd=String(store.getState().date.end.getFullYear());\r\n        let DayEnd=store.getState().date.end.getDate()\r\n        DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n        //let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"000000000000\"\r\n        let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"235959595959\"\r\n        //  let startYear=new Date(year,Month,store.getState().date.start.getDate());\r\n        //  let endYear=store.getState().date.end;\r\n        //  let index = startYear;\r\n // if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\r\n        let minions=[];\r\n// for (let index = startYear; index <= endYear; index.setFullYear(index.getFullYear() + 1)) {\r\n   \r\n     if(str === \"CurrentYear\"){\r\n        \r\n       \r\n        let year=String(new Date().getFullYear());\r\n        let dayEnd=String(new Date(year, 12, 0).getDate());\r\n        DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n        Start= year+\"0101\"+\"000000000000\";\r\n        End= year+\"12\"+dayEnd+\"235959595959\";\r\n     }\r\n     else if(str === \"CurrentMonth\"){\r\n        \r\n       \r\n        let year=String(new Date().getFullYear());\r\n        let dayEnd=String(new Date(year, new Date().getMonth()+1, 0).getDate());\r\n        DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n        let satrtCurrentMonth=(new Date().getMonth()+1);\r\n        satrtCurrentMonth=parseInt( satrtCurrentMonth)<10?\"0\"+ satrtCurrentMonth: satrtCurrentMonth;\r\n        Start= year+satrtCurrentMonth+\"01\"+\"000000000000\";\r\n        End= year+satrtCurrentMonth+dayEnd+\"235959595959\";\r\n     }\r\n     else if(str === \"LastThreeMonths\"){\r\n        \r\n       \r\n        let yearTemp=String(new Date().getFullYear());\r\n        let year =String(new Date(yearTemp, new Date().getMonth()-2, 1).getFullYear());\r\n        let dayEnd=String(new Date(year, new Date().getMonth(), 0).getDate());\r\n        DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n        let satrtMonth=new Date(2020, new Date().getMonth()-2, 1).getMonth();\r\n        satrtMonth=parseInt(satrtMonth)<10?\"0\"+satrtMonth:satrtMonth;\r\n        let endtLastThreeMonths=String(new Date().getMonth());\r\n        endtLastThreeMonths=parseInt( endtLastThreeMonths)<10?\"0\"+ endtLastThreeMonths: endtLastThreeMonths;\r\n        Start= year+satrtMonth+\"01\"+\"000000000000\";\r\n        End= year+endtLastThreeMonths+dayEnd+\"235959595959\";\r\n     }\r\n   \r\n     let url='/api/saltReturns/apply/'+Start+\"/\"+End;\r\n     //console.log(\"url\" ,url);\r\n     axios.get(url, tokenConfig(getState))\r\n    .then((res) => {\r\n        //console.log(\"pppppppppppppppppppppppppppppppppppppp\")\r\n        minions=minions.concat(res.data);\r\n       // console.log(minions);\r\n       /// if(index === endYear){console.log(res,\"res \");}\r\n        store.dispatch({\r\n            type: SALT_RETURNS,\r\n            payload: minions\r\n        })\r\n        // console.log(res,\"res\");\r\n    })\r\n    .catch(err => {\r\n        console.log(err,\"error in data\");\r\n\r\n       });\r\n   // }\r\n\r\n\r\n       //console.log(store.getState(),\"the store \");\r\n       //console.log(minions,\"minions \");\r\n};\r\n\r\n\r\nexport const saltReturnsForgraph =  (str) => (dispatch, getState) => {\r\n    //console.log(\"----------------------storeeeee--------------\\n\",store)\r\n    const time =new Date().toDateString();\r\n       let MonthStart= String(parseInt(store.getState().graphDate.graphDate.getMonth()+1));\r\n       MonthStart=parseInt(MonthStart)<10?\"0\"+MonthStart:MonthStart;\r\n       let yearStart=String(store.getState().graphDate.graphDate.getFullYear());\r\n       let DayStart=store.getState().graphDate.graphDate.getDate();\r\n       DayStart=parseInt(DayStart)<10?\"0\"+DayStart:DayStart;\r\n       let Start=yearStart+String(MonthStart)+String(DayStart)+\"000000000000\"\r\n\r\n       let MonthEnd= String(parseInt(store.getState().graphDate.graphDate.getMonth())+1);\r\n       MonthEnd=parseInt(MonthEnd)<10?\"0\"+MonthEnd:MonthEnd;\r\n       let yearEnd=String(store.getState().graphDate.graphDate.getFullYear());\r\n       let DayEnd=store.getState().graphDate.graphDate.getDate()\r\n       DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n       //let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"000000000000\"\r\n       let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"235959595959\"\r\n       //  let startYear=new Date(year,Month,store.getState().date.start.getDate());\r\n       //  let endYear=store.getState().date.end;\r\n       //  let index = startYear;\r\n// if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\r\n       let minions=[];\r\n// for (let index = startYear; index <= endYear; index.setFullYear(index.getFullYear() + 1)) {\r\n  \r\n   \r\n    //console.log(Start,\"Start\")\r\n    //console.log(End,\"End\")\r\n    let url='/api/saltReturns/apply/'+Start+\"/\"+End;\r\n    //console.log(\"url\" ,url);\r\n    axios.get(url, tokenConfig(getState))\r\n   .then((res) => {\r\n\r\n       minions=minions.concat(res.data);\r\n      // console.log(minions);\r\n     // console.log(minions,\"minions\")\r\n      /// if(index === endYear){console.log(res,\"res \");}\r\n       store.dispatch({\r\n           type: SALT_RETURNS_GRAPH,\r\n           payload: minions\r\n       })\r\n       // console.log(res,\"res\");\r\n   })\r\n   .catch(err => {\r\n       console.log(err,\"error in data\");\r\n\r\n      });\r\n  // }\r\n\r\n\r\n      //console.log(store.getState(),\"the store \");\r\n      //console.log(minions,\"minions \");\r\n};\r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n   // console.log(\"getstatteeeeeslatl\",getState())\r\n    // Get token from localstorage\r\n    const token = getState().auth.token;\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"multipart/form-data\"\r\n        }\r\n    }\r\n\r\n    // If token, add to headers\r\n    if(token) {\r\n       config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n    }\r\n\r\n return config;\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};","import React from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {dateSelect} from '../actions/date';\r\nimport { LineChart,\r\n         Line,\r\n         XAxis,\r\n         YAxis,\r\n         Label,\r\n         ResponsiveContainer,\r\n         Tooltip,\r\n         Legend,\r\n         CartesianGrid  \r\n} from 'recharts';\r\nimport store from '../store';\r\nimport Title from './Title';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { saltReturnsForgraph } from '../actions/date';\r\nimport { Store } from '@material-ui/icons';\r\nimport axios from 'axios';\r\n\r\n\r\nconst time =(str)=>{\r\n  const year =str.slice(0,4);\r\n  const month =String(parseInt(str.slice(4,6)));\r\n  const day =str.slice(6,8);\r\n  const hower= str.slice(8,10);\r\n\r\n  const minet=str.slice(10,12);\r\n  return String(hower)+\":\"+String(minet);\r\n\r\n}\r\nfunction createData(time,Success,Fail, amount) {\r\n  return { time,Success,Fail, amount };\r\n}\r\nconst demoOnClick= (e)=>{\r\n  // if(e){if(e.activeLabel){console.log(e.activeLabel);}}\r\n};\r\nconst INIT_DATA = [\r\n  createData('00:00',0,0, 0),\r\n  createData('03:00',0,0, 0),\r\n  createData('06:00',0,0, 0),\r\n  createData('09:00',0,0, 0),\r\n  createData('12:00',0,0, 0),\r\n  createData('15:00',0,0, 0),\r\n  createData('18:00',0,0, 0),\r\n  createData('21:00',0,0, 0),\r\n  createData('24:00',0,0, 0),\r\n];\r\n\r\nconst parseNumber= (str)=>{\r\n  let hower= parseInt(str.slice(8,10));\r\n  if(hower<=3){return \"03:00\"};\r\n  if(hower<=6){return \"06:00\"};\r\n  if(hower<=9){return \"09:00\"};\r\n  if(hower<=12){return \"12:00\"};\r\n  if(hower<=15){return \"15:00\"};\r\n  if(hower<=18){return \"18:00\"};\r\n  if(hower<=21){return \"21:00\"};\r\n  if(hower<=24){return \"24:00\"};\r\n  return \"00:00\";\r\n \r\n};\r\n const tokenConfig = getState => {\r\n  // console.log(\"getstatteeeeeslatl\",getState())\r\n   // Get token from localstorage\r\n   const token = store.getState().auth.token;\r\n\r\n   // Headers\r\n   const config = {\r\n       headers: {\r\n           \"Content-type\": \"multipart/form-data\"\r\n       }\r\n   }\r\n\r\n   // If token, add to headers\r\n   if(token) {\r\n      config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n   }\r\n\r\nreturn config;\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    marginLeft: theme.spacing(50),\r\n    marginTop:theme.spacing(11),\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n});\r\n\r\n class Chart extends React.PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.dataInit = this.dataInit.bind(this);\r\n    this.state = {\r\n      graphDate: new Date(),\r\n      flag:true,\r\n      minions:null,\r\n      graphIsPrepared:true,\r\n      data:  [{ time:\"00:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"03:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"06:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"09:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"12:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"15:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"18:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"21:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"24:00\",Success:0,Fail:0, amount:0 },]\r\n  };\r\n  this.dataInit();\r\n}\r\ndataInit(){\r\n  \r\n  let MonthStart= String(parseInt(store.getState().graphDate.graphDate.getMonth()+1));\r\n  MonthStart=parseInt(MonthStart)<10?\"0\"+MonthStart:MonthStart;\r\n  let yearStart=String(store.getState().graphDate.graphDate.getFullYear());\r\n  let DayStart=store.getState().graphDate.graphDate.getDate();\r\n  DayStart=parseInt(DayStart)<10?\"0\"+DayStart:DayStart;\r\n  let Start=yearStart+String(MonthStart)+String(DayStart)+\"000000000000\"\r\n\r\n  let MonthEnd= String(parseInt(store.getState().graphDate.graphDate.getMonth())+1);\r\n  MonthEnd=parseInt(MonthEnd)<10?\"0\"+MonthEnd:MonthEnd;\r\n  let yearEnd=String(store.getState().graphDate.graphDate.getFullYear());\r\n  let DayEnd=store.getState().graphDate.graphDate.getDate()\r\n  DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n  //let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"000000000000\"\r\n  let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"235959595959\"\r\n  //  let startYear=new Date(year,Month,store.getState().date.start.getDate());\r\n  //  let endYear=store.getState().date.end;\r\n  //  let index = startYear;\r\n// if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\r\n  let minions=[];\r\n// for (let index = startYear; index <= endYear; index.setFullYear(index.getFullYear() + 1)) {\r\n\r\n\r\n//console.log(Start,\"Start\")\r\n//console.log(End,\"End\")\r\nlet url='/api/saltReturns/apply/'+Start+\"/\"+End;\r\n//console.log(\"url\" ,url);\r\naxios.get(url, tokenConfig(store.getState()))\r\n.then((res) => {\r\n  let tempArray=[\r\n    { time:\"00:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"03:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"06:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"09:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"12:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"15:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"18:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"21:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"24:00\",Success:0,Fail:0, amount:0 },\r\n  ];\r\n  minions=minions.concat(res.data);\r\n //console.log(minions,\"minions\");\r\n// console.log(minions,\"minions\")\r\n /// if(index === endYear){console.log(res,\"res \");}\r\n  this.state.minions=minions;\r\n  //console.log( this.state.minions,\" this.state.minions\");\r\n  if(this.state.minions!==null)\r\n  {\r\n        // let MonthEnd= String(parseInt(store.getState().date.end.getMonth())+1);\r\n        // MonthEnd=parseInt(MonthEnd)<10?\"0\"+MonthEnd:MonthEnd;\r\n        // let yearEnd=String(store.getState().date.end.getFullYear());\r\n        // let DayEnd=store.getState().date.end.getDate()\r\n        // DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n        // let EndStart=parseInt(yearEnd+String(MonthEnd)+String(DayEnd)+\"000000000000\");\r\n\r\n        // let End=parseInt(yearEnd+String(MonthEnd)+String(DayEnd)+\"235959595959\")\r\n  \r\n      this.state.minions\r\n    \r\n      //  .filter((item)=>{\r\n    \r\n      //     if(parseInt(item.jid)>=EndStart && parseInt(item.jid)<=End){return item}\r\n      //   })\r\n        .forEach(item => {\r\n          let res=true;\r\n        // if(item.full_ret.success === false){res=false}\r\n        // let temp =Object.entries(item.return);\r\n      //  console.log(item,\"itemitemitemitemitemitemitemitem\")\r\n          if(Array.isArray(item.return)){ res=true}\r\n          else{\r\n            // console.log(item,'item');\r\n              let dataTemp=Object.entries(item.return).map((e) => ( { [e[0]]: e[1] } ));\r\n              let flag=false;\r\n              dataTemp.forEach(item =>{\r\n                  //console.log(Object.values(item),'Object.values(item)');\r\n                  if((Object.values(item)[0].result===true)&& (flag===false)){res=true}\r\n                  else{res=false;flag=true;}\r\n              } )\r\n          }\r\n        if(parseNumber(item.jid)===\"03:00\")\r\n        { res === true ?(tempArray[1].Success++):(tempArray[1].Fail++)};\r\n        if(parseNumber(item.jid)===\"06:00\")\r\n        { res === true ?(tempArray[2].Success++):(tempArray[2].Fail++)};\r\n        if(parseNumber(item.jid)===\"09:00\")\r\n        { res === true ?(tempArray[3].Success++):(tempArray[3].Fail++)};\r\n        if(parseNumber(item.jid)===\"12:00\")\r\n        { res === true ?(tempArray[4].Success++):(tempArray[4].Fail++)};\r\n        if(parseNumber(item.jid)===\"15:00\")\r\n        { res === true ?(tempArray[5].Success++):(tempArray[5].Fail++)};\r\n        if(parseNumber(item.jid)===\"18:00\")\r\n        { res === true ?(tempArray[6].Success++):(tempArray[6].Fail++)};\r\n        if(parseNumber(item.jid)===\"21:00\")\r\n        { res === true ?(tempArray[7].Success++):(tempArray[7].Fail++);};\r\n        if(parseNumber(item.jid)===\"24:00\")\r\n        { res === true ?(tempArray[8].Success++):(tempArray[8].Fail++)};\r\n      \r\n        \r\n        });\r\n    }\r\n    //console.log(tempArray,\"tempArray\")\r\n    this.state.data=tempArray;\r\n    this.setState({data:tempArray,graphIsPrepared:true})\r\n   // console.log(this.state.data,\"this.state.data\")\r\n   this.forceUpdate();\r\n}\r\n)\r\n.catch(err => {\r\n  console.log(err,\"error in data\");\r\n\r\n });\r\n// }\r\n}\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.dataInit();\r\n    \r\n}\r\n  \r\n\r\n\r\n\r\n \r\n  render(){\r\n   // console.log(\"render\");\r\n    //console.log(this.state,\"this.state\");\r\n   // console.log(this.state.graphIsPrepared,\"pppppppppppppppp\")\r\n    if(this.state.graphIsPrepared===true){\r\n      return(\r\n        <React.Fragment>\r\n        {/*<Title style={{paddingLeft:5}}>{(this.state.start.toLocaleDateString() === this.state.end.toLocaleDateString())?this.state.start.toLocaleDateString():this.state.start.toLocaleDateString() + ' - '+ this.state.end.toLocaleDateString()}</Title>*/}\r\n         {<Title style={{paddingLeft:5}}> {store.getState().graphDate.graphDate.toLocaleDateString()}</Title>}\r\n        <ResponsiveContainer>\r\n            <LineChart\r\n              onClick={demoOnClick}\r\n              data={ this.state.data}\r\n              margin={{top: 16,right: 16,bottom: 0,left: 24,}}>\r\n            <XAxis dataKey=\"time\" /><YAxis >{/* <Label angle={270} position=\"left\" style={{ textAnchor: 'middle' }}>(A/T)</Label>*/ }   \r\n            </YAxis>\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"Success\" stroke=\"#82ca9d\" onClick={demoOnClick}/>\r\n            <Line type=\"monotone\" dataKey=\"Fail\" stroke=\"#ff6666\" onClick={demoOnClick} />\r\n           \r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </React.Fragment>\r\n      )\r\n    }\r\n else{\r\n   return(\r\n        <div className={this.props.classes.root}>\r\n        <CircularProgress />\r\n        </div>\r\n   )\r\n }\r\n   \r\n    \r\n }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    saltReturnsGraph: state.saltReturnsGraph,\r\n    graphDate: state.graphDate \r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Chart));","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport {DATE_SELECT} from \"../actions/types\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {Typography,Button,Grid} from '@material-ui/core';\r\nimport Title from './Title';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {KeyboardDatePicker,MuiPickersUtilsProvider,DatePicker} from \"@material-ui/pickers\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\n//import DateTime from 'react-datetime';\r\nimport {dateSelect} from '../actions/date.js';\r\nimport store from '../store';\r\nimport { saltReturns } from '../actions/date';\r\n// <DatePicker\r\n// disableFuture\r\n// openTo=\"year\"\r\n// id=\"date-picker-dialog\"\r\n// margin=\"normal\"\r\n// format=\"dd/MM/yyyy\"\r\n// label=\"Start\"\r\n// views={[\"year\", \"month\", \"date\"]}\r\n// KeyboardButtonProps={{\r\n//   'aria-label': 'change date',\r\n// }}\r\n\r\n// />\r\n\r\n\r\n\r\n\r\n\r\n class Deposits extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDateChangeStart = this.handleDateChangeStart.bind(this);\r\n    this.handleDateChangeEnd = this.handleDateChangeEnd.bind(this);\r\n    this.dateIsChanged = this.dateIsChanged.bind(this);\r\n  \r\n    this.state={start:this.props.date.start , end:this.props.date.end ,date:null};\r\n  \r\n  }\r\n//   shouldComponentUpdate(nextProps, nextState) {\r\n//   return this.state.value != nextState.value;\r\n// }\r\n  handleDateChangeStart(date){\r\n    this.setState({booleanStart:true,start:date});\r\n  }\r\n    \r\n  \r\n  handleDateChangeEnd (date){\r\n   this.setState({booleanEnd:true,end:date});\r\n  }\r\n \r\n  dateIsChanged(){\r\n      let start=this.state.start;\r\n      let end=this.state.end;\r\n     \r\n      store.dispatch({\r\n        type: DATE_SELECT,\r\n        payload: {start:start,end:end}\r\n       } );\r\n       store.dispatch(saltReturns());\r\n\r\n\r\n      // console.log(\"store\",store.getState());\r\n  }\r\n \r\n  //onChange = date => this.setState({ date })\r\n \r\n  render () {\r\n    return (\r\n      <React.Fragment style={{marginTop:-5}}>\r\n        <Typography  variant=\"h4\" >\r\n\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n            <Grid container justify=\"space-around\">\r\n            <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Table Start Date\"\r\n            format=\"dd/MM/yyyy\"\r\n            value={this.state.start}\r\n            onChange={(date)=>{this.handleDateChangeStart(date)}}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n\r\n          <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"Table End Date\"\r\n          format=\"dd/MM/yyyy\"\r\n          value={this.state.end}\r\n          onChange={(date)=>{this.handleDateChangeEnd(date)}}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n      \r\n      <Typography style={{flex: 1,paddingTop:12}}>\r\n      \r\n       \r\n       \r\n        <Button\r\n        variant=\"outlined\" color=\"primary\"\r\n        onClick={this.dateIsChanged}\r\n        endIcon={ <SearchIcon>Search</SearchIcon>}\r\n      >\r\n      Search\r\n      </Button>\r\n      </Typography>\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n\r\n        </Typography>\r\n       \r\n      </React.Fragment>\r\n    );\r\n  }\r\n    \r\n}\r\n\r\n const mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    date: state.date\r\n  }\r\n}\r\nfunction matchDispatchToProps(dispatch){\r\n  return bindActionCreators({dateSelect: dateSelect}, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps)(Deposits);","import axios from 'axios';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport React, { Component } from \"react\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport MaterialTable from 'material-table';\r\nimport {SALT_RETURNS} from \"../actions/types\";\r\nimport store from '../store';\r\nimport { saltReturns } from '../actions/date';\r\nimport { forwardRef } from 'react';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n    Typography,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    AddBox,\r\n    ArrowDownward,\r\n    Check,\r\n    ChevronLeft,\r\n    ChevronRight,\r\n    Clear,\r\n    DeleteOutline,\r\n    Edit,\r\n    FilterList,\r\n    FirstPage,\r\n    LastPage,\r\n    Remove,\r\n    SaveAlt,\r\n    Search,\r\n    ViewColumn,\r\n\r\n\r\n}from '@material-ui/icons';\r\n//import data from './f.json';\r\nimport data from '../Component/test.json';\r\n\r\nconst time =(str)=>{\r\n    const hower= str.slice(8,10);\r\n    const minet=str.slice(10,12);\r\n    return String(hower)+\":\"+String(minet);\r\n\r\n}\r\n\r\nconst  date=(str)=>{\r\n    const year =str.slice(0,4);\r\n    const month =String(parseInt(str.slice(4,6)));\r\n    const day =str.slice(6,8);\r\n   \r\n    return String(day)+\"/\"+String(month)+\"/\"+String(year);\r\n\r\n}\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) =>  <Edit {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\nconst dataColumns =[\r\n    { title: 'status', field: 'status',\r\n        //type: 'boolean'\r\n        cellStyle: x=>({\r\n            color:(x==='Success')?'#208000':'#ff0000'})\r\n\r\n    },\r\n    { title: 'Name', field: 'name',\r\n    },\r\n    { title: 'Date', field: 'date' },\r\n    { title: 'Time', field: 'time',\r\n        //type: 'time'\r\n    },\r\n\r\n\r\n\r\n]\r\n\r\nconst dataTable=[]\r\nconst styles = theme => ({\r\n    root:{\r\n        height: 240,\r\n        flexGrow: 1,\r\n        maxWidth: 900,\r\n        fontSize: 20,\r\n        \r\n    },\r\n  //  TreeStyle: ,\r\n      text:{\r\n        paddingLeft: theme.spacing(6),\r\n        fontSize: 16,\r\n       \r\n\r\n      },\r\n      title:{\r\n        fontSize: 16,\r\n        paddingLeft:theme.spacing(2)\r\n      },\r\n      TreeItem:{\r\n        marginTop:theme.spacing(3.5),\r\n        flexGrow: 1,\r\n        maxWidth: 950,\r\n        fontSize: 18,\r\n      },\r\n      TreeItemText:{\r\n        fontSize: 18,\r\n      },\r\n      \r\n});\r\n//console.log(data,'cccccccccccccccccccccccccccccccccccccccccc')\r\n// const m=JSON.parse(\"'[\"+data+\"]'\");\r\n//const x=Object.entries(data[0].return).map((e) => ( { [e[0]]: e[1] } ));\r\n//console.log(data,'data');\r\n//console.log(Object.entries(data[0].return),'llll')\r\n//console.log(x,'cccccccccccccccccccccccccccccccccccccccccc')\r\nclass Orders extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.selestMinion=this.selestMinion.bind(this);\r\n        this.handleClickOpen=this.handleClickOpen.bind(this);\r\n        this.handleClose=this.handleClose.bind(this);\r\n        store.dispatch(saltReturns());\r\n        console.log(store.getState(),\"store.getState()\")\r\n        this.state = {\r\n            saltReturns: dataTable,\r\n            Returns:null,\r\n            dialogOpen:false,\r\n            minion:\"\",\r\n            data:[],\r\n            flag:false,\r\n        }\r\n       \r\n    }\r\n \r\n    componentWillMount(){\r\n       // console.log('componentWillMount');\r\n        if(store.getState().saltReturns.saltReturns!==null)\r\n        {\r\n            setTimeout(()=>{  \r\n                const start=store.getState().date.start;\r\n                let startTemp=new Date(start.getTime());\r\n            \r\n                startTemp.setHours(0,0,0);\r\n                const end=store.getState().date.end;\r\n                let endTemp=new Date(end.getTime());\r\n            \r\n            // console.log(endTemp,'new Date(end.getTime());')\r\n            // console.log(start,'store.getState().date.start;')\r\n                let saltTemp=store.getState().saltReturns.saltReturns\r\n                // .filter((item)=>{return item.full_ret.fun === \"state.apply\"})\r\n                // .filter((item)=>{\r\n                //     let str=item.jid.slice(0,4)+\"-\"+ String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\r\n                //     let time=new Date(str);\r\n                //     if(time >= startTemp && time<= endTemp){return item;}\r\n                // })\r\n                .map((item)=>{\r\n                    let res=true;\r\n                    let flag=0;\r\n                   \r\n                    if(Array.isArray(item.return)){ res=true;}\r\n                    else{\r\n                     \r\n                        let dataTemp=Object.entries(item.return).map((e,index,arr) => {\r\n                         if((e[1].result === false) && (flag===0)){\r\n                            res=false\r\n                           flag=1;\r\n                        \r\n                          }\r\n                         if(index===arr.length-1 && flag === 0){\r\n                            flag=1;\r\n                            res=true;\r\n                          \r\n                         \r\n                         }\r\n                    \r\n                      \r\n                       });\r\n               \r\n                    }\r\n                    return {\r\n        \r\n                        status:(res=== true)?'Success':'Fail',\r\n                        name:item.minion,\r\n                        date:date(item.jid),\r\n                        id:item._id,\r\n                        time: time(item.jid),\r\n        \r\n                        // return:item.return\r\n                    };}\r\n                )\r\n            \r\n                this.setState({saltReturns:saltTemp});\r\n            // console.log(this.state.saltReturns,'setTimeout(()=>{this.setState({saltReturns:saltTemp});}, 600);');\r\n            }, 500);\r\n            //setTimeout(()=>{;}, 1000);\r\n        }\r\n    }\r\n    selestMinion(event, rowData){\r\n        console.log(\"table - 213\");\r\n        //console.log(rowData, \" equl\");\r\n        if(rowData.status==='Success'){return}\r\n        let res = store.getState().saltReturns.saltReturns\r\n            .filter((item)=>{\r\n            //if((item.full_ret.success===false) && (item._id === rowData.id))\r\n            if((item._id === rowData.id))\r\n\r\n                     { \r\n                         let temp =Object.entries(item.return);\r\n                         if(temp[0][0]===\"0\"){ \r\n                             this.setState({flag:true,data:temp[0]});\r\n                             console.log(\"table - 225\");\r\n                            }\r\n                         else{\r\n                             let res=Object.entries(item.return).map((e) => ( { [e[0]]: e[1] } ));\r\n                             this.setState({data:res})\r\n                             console.log(\"table - 230\");\r\n                             }\r\n                         this.setState({dialogOpen:true,minion:item});\r\n                         console.log(\"table - 230\");\r\n                         return item;\r\n                    }\r\n                \r\n            \r\n            })\r\n\r\n\r\n    }\r\n    handleClickOpen () {\r\n        this.setState({dialogOpen:true});\r\n    };\r\n\r\n    handleClose () {\r\n        this.setState({dialogOpen:false});\r\n    };\r\n    componentWillReceiveProps(nextProps,nextState) {\r\n        //console.log('componentWillReceiveProps');\r\n        // console.log(store.getState(),\";;;;;;;;;;\");\r\n        if(store.getState().saltReturns.saltReturns!==null)\r\n        {\r\n            setTimeout(()=>{  \r\n                const start=store.getState().date.start;\r\n                let startTemp=new Date(start.getTime());\r\n            \r\n                startTemp.setHours(0,0,0);\r\n                const end=store.getState().date.end;\r\n                let endTemp=new Date(end.getTime());\r\n            \r\n            // console.log(endTemp,'new Date(end.getTime());')\r\n            // console.log(start,'store.getState().date.start;')\r\n                let saltTemp=store.getState().saltReturns.saltReturns\r\n                // .filter((item)=>{return item.full_ret.fun === \"state.apply\"})\r\n                // .filter((item)=>{\r\n                //     let str=item.jid.slice(0,4)+\"-\"+ String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\r\n                //     let time=new Date(str);\r\n                //     if(time >= startTemp && time<= endTemp){return item;}\r\n                // })\r\n                .map((item)=>{\r\n                    let res=true;\r\n                    let flag=0;\r\n                   \r\n                    if(Array.isArray(item.return)){ res=true;}\r\n                    else{\r\n                     \r\n                        let dataTemp=Object.entries(item.return).map((e,index,arr) => {\r\n                         if((e[1].result === false) && (flag===0)){\r\n                            res=false\r\n                           flag=1;\r\n                        \r\n                          }\r\n                         if(index===arr.length-1 && flag === 0){\r\n                            flag=1;\r\n                            res=true;\r\n                          \r\n                         \r\n                         }\r\n                    \r\n                      \r\n                       });\r\n               \r\n                    }\r\n         \r\n                    return {\r\n        \r\n                        status:(res=== true)?'Success':'Fail',\r\n                        name:item.minion,\r\n                        date:date(item.jid),\r\n                        id:item._id,\r\n                        time: time(item.jid),\r\n        \r\n                        // return:item.return\r\n                    };}\r\n                )\r\n            \r\n                this.setState({saltReturns:saltTemp});\r\n            // console.log(this.state.saltReturns,'setTimeout(()=>{this.setState({saltReturns:saltTemp});}, 600);');\r\n            }, 500);\r\n            //setTimeout(()=>{;}, 1000);\r\n        }\r\n\r\n\r\n\r\n    }\r\n    // componentWillUpdate() {\r\n  \r\n    // }\r\n    render(){\r\n\r\n        return (\r\n            <div>\r\n                <MaterialTable\r\n                    title=\"Minions Table\"\r\n                    columns={dataColumns}\r\n                    data={ this.state.saltReturns}\r\n                    icons={tableIcons}\r\n                    onRowClick={((evt, selectedRow) => this.setState({ selectedRow }))}\r\n\r\n\r\n                    options={{\r\n                        exportButton: true,\r\n                        filtering: true,\r\n\r\n                        //rowStyle: rowData => ({\r\n                        // color: (rowData.name==='su') ? '#daa9d9' : '#ff1a1a'})\r\n\r\n                    }}\r\n                    actions={[\r\n                        {\r\n\r\n                            icon: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n                            tooltip: 'View commands',\r\n                            onClick: (event, rowData) => {this.selestMinion(event, rowData)}\r\n                        }\r\n                    ]\r\n                    }\r\n                />\r\n\r\n                <Dialog\r\n                    open={this.state.dialogOpen}\r\n                    onClose={this.handleClose}\r\n\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                    maxWidth=\"lg\"\r\n                    scroll=\"paper\"\r\n                    aria-labelledby=\"confirmation-dialog-title\"\r\n                >\r\n\r\n                    <DialogTitle id=\"alert-dialog-title\">\r\n\r\n                        <Typography style={{color:\"#ff6666\",fontSize:18} }>\r\n                            {\"Failed \"}\r\n                            {this.state.minion.minion}\r\n                            {\" at date \"}\r\n                            {   (this.state.minion !== undefined )? (date(String(this.state.minion.jid))): \" \"}\r\n                            {' at hour '}\r\n                            {(this.state.minion !== undefined )? (time(String(this.state.minion.jid))): \" \"}\r\n                            {//console.log(this.state.minion,\"comment\")}\r\n                             }\r\n                        </Typography>\r\n                    </DialogTitle>\r\n\r\n\r\n                    <DialogContent dividers>\r\n                    {//if you want to chenge width with \r\n                    }\r\n                        <div style={{minWidth: 1000,}}>\r\n                            <div>\r\n                             \r\n\r\n                              \r\n                                <TreeView\r\n                                style={{\r\n                                   \r\n                                    fontSize:18,\r\n                                }}\r\n                                defaultCollapseIcon={<ExpandMoreIcon />}\r\n                                defaultExpandIcon={<ChevronRightIcon />}\r\n                                >\r\n                                 {this.state.data.map((item,index)=>{\r\n                                        if(this.state.flag===false){\r\n                                            return (\r\n                                                <Typography  className={this.props.classes.TreeItem} > \r\n                                                        <TreeItem \r\n                                                        nodeId={index} \r\n                                                        label={Object.keys(item)[0]} \r\n                                                        style={{\r\n                                                            color:(Object.values(item)[0].result===true)?'#26a852':\"#ff6666\",\r\n                                                            fontSize:18,\r\n                                                        }}\r\n                                                        className={this.props.classes.TreeItemText}> \r\n    \r\n                                                            {console.log(\"table - 394\")}\r\n                                                            \r\n                                                            <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n                                                            comment : \r\n                                                            \r\n                                                            </Typography>\r\n    \r\n                                                            <Typography color=\"textSecondary\" className={this.props.classes.text}>{(Object.values(item)[0]).comment}</Typography>\r\n    \r\n                                                            \r\n                                                            <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n                                                             changes :\r\n                                                            </Typography>\r\n    \r\n                                                            <Typography color=\"textSecondary\" className={this.props.classes.text}>{(String(Object.values(item)[0]).changes)}</Typography>\r\n    \r\n                                                            <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n                                                              _id_ : \r\n                                                            </Typography>\r\n    \r\n                                                            <Typography color=\"textSecondary\" className={this.props.classes.text}>{(Object.values(item)[0])._id_}</Typography>\r\n                                               \r\n                                                        </TreeItem>\r\n                                                    </Typography>\r\n                                                       )\r\n                                        }\r\n                                        else{\r\n                                            if(index===1){\r\n                                                return(\r\n                                                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                                                                  return : {this.state.minion.return}\r\n                                                    </Typography>\r\n                                                )\r\n                                            }\r\n                                           \r\n                                        }\r\n                                           \r\n\r\n                                 })}\r\n                                 </TreeView>\r\n                       \r\n                                <CardActions>\r\n\r\n                                </CardActions>\r\n                            </div>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n                          close\r\n                        </Button>\r\n                    </DialogActions>\r\n\r\n                </Dialog>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        saltReturns: state.saltReturns,\r\n        date: state.date\r\n    }\r\n}\r\nfunction matchDispatchToProps(dispatch){\r\n    return bindActionCreators({saltReturns: saltReturns}, dispatch);\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Orders));","import React from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport store from '../store';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport {SAVE_MINION} from \"../actions/types\";\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nconst styles = theme => ({\r\n  root: {\r\n    maxWidth: 500,\r\n    minWidth:500,\r\n    Width:500,\r\n    margin: theme.spacing(1),\r\n    marginLeft: theme.spacing(0),\r\n  },\r\n  Tree_Res:{\r\n    maxWidth: 450,\r\n    Width:450,\r\n  },\r\n \r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n    overflow:'wrap',\r\n    paddingLeft: theme.spacing(2),\r\n   // paddingTop: theme.spacing(2),\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    fontSize: 12,\r\n  },\r\n  container: {\r\n    width: 400,\r\n    maxWidth: 400,\r\n    //display: 'flex',\r\n    flexWrap: 'wrap',\r\n    overflow:'wrap'\r\n  },\r\n  minions:{\r\n    height: 240,\r\n    flexGrow: 1,\r\n    maxWidth: 400,\r\n  },\r\n  CardContent:{\r\n    maxWidth: 250,\r\n    width: 250,\r\n  \r\n  },\r\n  CircularProgress:{\r\n     paddingLeft: theme.spacing(27),\r\n    //paddingTop: theme.spacing(),\r\n  },\r\n  TreeItem:{\r\n    color:'#26a852',\r\n    flexWrap: 'wrap',maxWidth:400,width:400,wordWrap: 'break-word',\r\n  },\r\n  res_of_cmd:{\r\n    maxWidth:400,\r\n    flexWrap: 'wrap',\r\n    wordWrap: 'break-word',\r\n  },\r\n});\r\n\r\nclass MinionCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        \r\n        const commentg= this.props.comment;\r\n       // console.log(this.props.id,'constructor');\r\n       this.state={ \r\n          open: false,\r\n          defer: false,\r\n          click:false,\r\n          comment: commentg,\r\n          listOpen:false,\r\n          open:false,\r\n        };\r\n        this.onClickMinion = this.onClickMinion.bind(this);\r\n        this.handleClickButton = this.handleClickButton.bind(this);\r\n        this.handleClickOpen = this.handleClickOpen.bind(this);\r\n        this. handleClose = this. handleClose.bind(this);\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n      //console.log(nextProps,\"nextProps\")\r\n      if(nextProps.prepared!==this.props.prepared){\r\n\r\n      }\r\n    }\r\n    onClickMinion(){\r\n    \r\n      // console.log(store.getState(),\"store.getState() from minionCard\");\r\n    }\r\n    handleClickButton(){\r\n      this.state.listOpen=!(this.state.listOpen);\r\n  \r\n  \r\n    }\r\n    handleClickOpen(){\r\n      this.setState((prevState) => ({open:!prevState.open}));\r\n     //console.log(this.state,\"stste from handleClickOpen\")\r\n    }\r\n    handleClose(){\r\n      this.setState((prevState) => ({open:!prevState.open}));\r\n      this.setState({click:true});\r\n      let array =store.getState().saveMinion.saveMinion;\r\n      \r\n     \r\n      let minions=array.filter((item)=>{\r\n        if(item.id !==this.props.id){return (item)}\r\n      });\r\n      minions=minions.map((item,index)=>{\r\n       return( {...item,id:index+1});\r\n      })\r\n      // minions.unshift(this.state.saveMinion[0]);\r\n      store.dispatch({\r\n          type: SAVE_MINION,\r\n          payload: minions\r\n      });\r\n    }\r\nrender(){\r\n  // id={item.id} minion={item.minions} comment={item.comment}\r\n    const bull = <span className={this.props.classes.bullet}>•</span>;\r\n    //console.log(this.props,\"this.props\")\r\n    if(this.state.comment===''){this.state.click =true}\r\n    if(this.state.click === false && this.props.prepared===true){\r\n      return (\r\n     \r\n        <Card className={this.props.classes.root}>\r\n          <CardContent>\r\n  \r\n           \r\n              <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n              Function: {this.props.comment}\r\n              {/*this.props.fun*/}\r\n              </Typography>\r\n              <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n              Parameter: {this.props.Parameter}\r\n              {/*this.props.fun*/}\r\n              </Typography>\r\n        \r\n              <Typography variant=\"h5\" component=\"h2\" color=\"textSecondary\" >\r\n                <div>\r\n                  <div className={this.props.classes.container}>\r\n                                <TreeView\r\n                                className={this.props.classes.Tree_Res}\r\n                                defaultCollapseIcon={<ExpandMoreIcon />}\r\n                                defaultExpandIcon={<ChevronRightIcon />}\r\n                              >\r\n                        <TreeItem nodeId=\"1\" label=\"See Minions\">\r\n                        {\r\n                            this.props.minion.map((item,index)=>{\r\n                              //console.log(item,\"item\") <div style={{ display: 'flex',flexDirection: 'row',flexFlow: 'row wrap',maxWidth:850,width:800}}>\r\n                             // console.log(index,\"index\")\r\n                              return(\r\n                                <TreeItem nodeId={index+2} label={item[0]} className={this.props.classes.TreeItem}>\r\n                                    <Typography  color=\"textSecondary\"  >\r\n                                      <TreeItem nodeId={index+3} label={item[1]} className={this.props.classes.res_of_cmd} />\r\n                                  </Typography>\r\n                                  \r\n                                </TreeItem>\r\n                            )\r\n                            })\r\n                          }\r\n                          </TreeItem>\r\n                    </TreeView>\r\n                  </div>\r\n                 </div>\r\n              </Typography>\r\n              \r\n            {/*button*/}\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n        \r\n        <IconButton \r\n        aria-label=\"share\"\r\n        variant=\"outlined\" \r\n        //color=\"primary\" \r\n        onClick={this.handleClickOpen}\r\n          //onClick={this.handleExpandClick}\r\n        color='secondary'\r\n          >\r\n              <DeleteIcon />\r\n        </IconButton>\r\n        <Dialog\r\n        open={this.state.open}\r\n        onClose={this.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        >\r\n  \r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n          Are you sure you want to delete the command from history?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button onClick={this.handleClickOpen} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n          <Button onClick={this.handleClose} color=\"secondary\" autoFocus>\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n        </Dialog>\r\n        {/*\r\n            <IconButton\r\n              className={clsx(this.props.classes.expand, {\r\n                [this.props.classes.expandOpen]: this.state.expanded,\r\n              })}\r\n              onClick={this.handleExpandClick}\r\n              aria-expanded={this.state.expanded}\r\n              aria-label=\"show more\"\r\n            >\r\n              <ExpandMoreIcon />\r\n            </IconButton>\r\n            */}\r\n          </CardActions>\r\n  \r\n        </Card>\r\n       \r\n         \r\n        );\r\n    }\r\n  \r\n      else if (this.props.prepared===false)\r\n      {\r\n        //console.log(\"props from minioncard\")\r\n        //console.log(this.props,\"props from minioncard\")\r\n        return(\r\n          <Card className={this.props.classes.root}>\r\n            \r\n            <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n              Function: {this.props.comment}\r\n              {/*this.props.fun*/}\r\n              </Typography>\r\n              <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n              Parameter: {this.props.Parameter}\r\n              {/*this.props.fun*/}\r\n              </Typography>\r\n           \r\n            <CardContent className={this.props.classes.CardContent}>\r\n              <div className={this.props.classes.CircularProgress}> <CircularProgress /></div>\r\n            \r\n            </CardContent>\r\n          </Card>\r\n        );\r\n      }\r\n      else if (this.props.err===true)\r\n      {\r\n        //console.log(\"props from minioncard\")\r\n        //console.log(this.props,\"props from minioncard\")\r\n        return(\r\n          <Card className={this.props.classes.root}>\r\n            \r\n           \r\n            <CardContent className={this.props.classes.CardContent}>\r\n              \r\n            <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n             Error from server\r\n              {/*this.props.fun*/}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        );\r\n      }\r\n      else{return(<div></div>);}\r\n}\r\n  \r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(MinionCard);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../actions/authActions';\r\nimport PropTypes from 'prop-types';\r\nimport store from '../../store';\r\nimport Button from '@material-ui/core/Button';\r\nexport class Logout extends Component {\r\n  static propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n  };\r\n\r\n\r\n  render() {\r\n    // console.log(this.props)\r\n    return (\r\n        <Button  style={{color:'#fff',border:'none'}}  variant='outlined'  onClick={()=> store.dispatch(logout())}>\r\n          Log out\r\n        </Button>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n  null,\r\n  { logout }\r\n)(Logout);","import React, { Component } from \"react\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport MaterialTable from 'material-table';\r\nimport { forwardRef } from 'react';\r\nimport store from '../store';\r\nimport { saveMinion } from '../actions/date';\r\nimport {SAVE_MINION} from \"../actions/types\";\r\nimport axios from 'axios';\r\nimport {\r\n    AddBox,\r\n    ArrowDownward,\r\n    Check,\r\n    ChevronLeft,\r\n    ChevronRight,\r\n    Clear,\r\n    DeleteOutline,\r\n    Edit,\r\n    FilterList,\r\n    FirstPage,\r\n    LastPage,\r\n    Remove,\r\n    SaveAlt,\r\n    Search,\r\n    ViewColumn,\r\n\r\n\r\n}from '@material-ui/icons';\r\nimport { withAlert } from 'react-alert';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport MinionCard from './MinionCard';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { returnErrors } from '../actions/errorActions';\r\nimport { listMinions } from '../actions/date';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) =>  <Edit {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst styles = theme => ({\r\n    MaterialTable:{\r\n        marginLeft: theme.spacing(-8),\r\n        marginTop: theme.spacing(1),\r\n        width:450, \r\n    },\r\n    root: {\r\n      padding: '2px 4px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      width: 500,\r\n      height:70,\r\n      marginTop: theme.spacing(1)\r\n    },\r\n    paperParms:{\r\n        padding: '3px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 400,\r\n        height:50,\r\n        marginTop: theme.spacing(3)\r\n    },\r\n   \r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      marginTop: 0,\r\n      \r\n      flex: 1,\r\n    },\r\n    inputparms:{\r\n        marginLeft: theme.spacing(1),\r\n    \r\n        //width: 400,\r\n        flex: 1,\r\n    },\r\n    minionStyle:{\r\n        marginTop: theme.spacing(5),\r\n        width:200\r\n    },\r\n   \r\n    iconButton: {\r\n      padding: 10,\r\n      height:55\r\n    },\r\n    Divider: {\r\n      marginTop: theme.spacing(5),\r\n      height: 50,\r\n      margin: 4,\r\n    },\r\n    iconButtonParms: {\r\n     \r\n        padding: 10,\r\n        height: 10,\r\n        width:4,\r\n      },\r\n      dividerParms: {\r\n        marginTop: theme.spacing(5),\r\n        height: '100%',\r\n        margin: 4,\r\n      },\r\n    msg:{\r\n        width: '100%',\r\n        '& > * + *': {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n    Comments:{\r\n        marginTop: theme.spacing(4),\r\n    },\r\n   \r\n    ButtonGroup: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        \r\n        '& > *': {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n      },\r\n      button: {\r\n       //paddingRight:70,\r\n       height:50,\r\n      // width:60\r\n      },\r\n    \r\n  });\r\n\r\n\r\n\r\n \r\n\r\nclass SaltStack extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.clickOpen = this.clickOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        //this.handleClick = this.handleClick.bind(this);\r\n        this.sentCommand = this.sentCommand.bind(this);\r\n        this.ClickCSend = this.ClickCSend.bind(this);\r\n        this.getMinionsFromServer = this.getMinionsFromServer.bind(this);\r\n        this.tokenConfig = this.tokenConfig.bind(this);\r\n        store.dispatch(listMinions());\r\n        this.state={\r\n        alert:false,\r\n        msg:false,\r\n        menu:\"Dashboard\",\r\n        open: false,\r\n        defer: false,\r\n        clickSave:false,\r\n        history:[],\r\n        input:'',\r\n        parms:\"\",\r\n        saveMinion:{},\r\n        countSaveMinion:0,\r\n        warninginput:false,\r\n        warningNoMinionSelected:false,\r\n        err_from_server_run_cmd:false,\r\n        err_cmd:\"\",\r\n        err_cmd_flag:false,\r\n        data:[],\r\n        minions_send_to_server:[],\r\n        cmd_no_run_bacuse:\"\",\r\n        \r\n        };\r\n        \r\n        ///////////////////////////////////////////////////////////////////////////////////////////////////////\r\n       this.getMinionsFromServer();\r\n     \r\n       if(this.state.history.length===0){\r\n           this.state.history=store.getState().saveMinion.saveMinion;\r\n       }\r\n    }\r\n    ClickCSend(){\r\n        if(this.state.input === ''){ \r\n            this.setState({warninginput:true});\r\n            setTimeout(()=>{this.setState({warninginput:false});}, 2200);\r\n        }\r\n        else{\r\n            this.sentCommand(this.state.input);\r\n        }\r\n       \r\n        \r\n    }\r\n    getMinionsFromServer(){\r\n       \r\n        let tokenTemp=this.tokenConfig();\r\n      \r\n        axios.get('/get_connected_minions',tokenTemp)\r\n        .then((res) => {\r\n                let arr=[];\r\n                for(let i=0;i<res.data.result.length;i++){\r\n                   let minion={name:res.data.result[i]}\r\n                   arr.push(minion);\r\n                }             \r\n                this.setState({data:arr})\r\n        })\r\n        .catch(err => {\r\n            console.log(err,\"err get_connected_minions\");\r\n    \r\n           });\r\n        };\r\n        tokenConfig = () => {\r\n            //console.log(\"getstatteeeeeslatl\",store.getState())\r\n            // Get token from localstorage\r\n            const token = store.getState().auth.token;\r\n        \r\n            // Headers\r\n            const config = {\r\n                headers: {\r\n                    \"Content-type\": \"application/json\"\r\n                }\r\n            }\r\n        \r\n            // If token, add to headers\r\n            if(token) {\r\n               config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n            }\r\n        \r\n         return config;\r\n    };\r\n    handleClose = (event, reason) => \r\n    {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n     \r\n        this.setState({msg:false,warninginput:false,warningNoMinionSelected:false});\r\n    };\r\n\r\n  \r\n   \r\n    clickOpen (rowData){\r\n        //  console.log(rowData,'rowData')\r\n        this.state.countSaveMinion=0;\r\n        this.state.countSaveMinion++;\r\n        const data=rowData.map((row)=>row.name);\r\n        this.state.minions_send_to_server=data;\r\n        let commntId=(store.getState().saveMinion.saveMinion.length)+1; \r\n       // this.state.saveMinion={minions:data,id:commntId,comment:'',prepared:false};\r\n        //this.state.history.push({prepared:false,comment:'',Parameter:\"\",id:\"\",minions_send_to_server:data})\r\n       // this.getMinionsFromServer();\r\n      \r\n        this.setState({alert:true,clickSave:true,});\r\n        setTimeout(()=>{this.setState({alert:false,});}, 5000);\r\n        \r\n    };\r\n    componentWillReceiveProps(nextProps,nextState) {\r\n    \r\n         if(nextProps.saveMinion!==this.props.saveMinion){\r\n             setTimeout(() => {\r\n                this.forceUpdate();\r\n             }, 500);\r\n           \r\n           //console.log(\"if\")\r\n   \r\n       }\r\n   \r\n     }\r\n    //  componentDidUpdate(prevState){\r\n    //     this.state.history=prevState.history;\r\n\r\n    //  }\r\nsentCommand(command){\r\n        \r\n\r\n    this.state.countSaveMinion--;\r\n    if( (this.state.countSaveMinion===0)){\r\n            let list_card_from_store=store.getState().saveMinion.saveMinion.length;\r\n            console.log(store.getState(),\"store.getState(\");\r\n            console.log(this.state.history,\"this.state.history\");\r\n            if(list_card_from_store!== this.state.history.length){\r\n                this.state.history=store.getState().saveMinion.saveMinion;\r\n            }\r\n            const config = {headers: {'Content-Type': 'application/json'}\r\n            }\r\n            const words = this.state.input.split(' ');\r\n            const parms_send=this.state.parms.split(' ');\r\n            let id_of_commnd = new Date().getTime()\r\n            let x = {prepared:false,comment:command,Parameter:parms_send,id:id_of_commnd,minions:this.state.minions_send_to_server};\r\n            \r\n            this.state.input=\"\";\r\n            this.state.history.unshift(x)\r\n            let res={\r\n                func:command,\r\n                tgt:this.state.minions_send_to_server,\r\n                salt_cmd:this.state.parms===\"\"?\"\":parms_send,\r\n              \r\n            }\r\n          \r\n            this.setState({parms:\"\"});\r\n           \r\n            const body = JSON.stringify(res);\r\n            let tokenTemp=this.tokenConfig();\r\n            \r\n            console.log(\" his.state.history.minions\", this.state.history.minions)\r\n            store.dispatch({\r\n                type: SAVE_MINION,\r\n                payload: this.state.history\r\n            });\r\n          axios.post('/saltstack_cmd',body, tokenTemp)\r\n          .then((res) => {\r\n\r\n              const temp=res.data.res;\r\n              let cur_minions = this.state.minions_send_to_server\r\n              const buildRes = cur_minions.map(minion => [minion,JSON.stringify(temp[minion])])\r\n              console.log(this.state,\"this.state 1\")\r\n             \r\n              this.state.history =this.state.history.map((item)=>{\r\n                      if(item.id === id_of_commnd ){\r\n                          console.log(item,\"item\")\r\n                          return({prepared:true,comment:command,Parameter:parms_send,id:id_of_commnd,minions:buildRes})\r\n                        \r\n                      }\r\n                      else{return item}\r\n                  \r\n                 \r\n              }).filter((item)=>{if(item!==undefined){return item}})\r\n              \r\n             \r\n             console.log(this.state,\"this.state 2\")\r\n             store.dispatch({\r\n                type: SAVE_MINION,\r\n                payload: this.state.history\r\n            });\r\n            console.log(store.getState(),\"store.getState()\")\r\n            this.setState({parms:\"\"});\r\n           // this.forceUpdate();\r\n          })\r\n          .catch(err => {\r\n            //console.log(\"1111111111111111111111\")\r\n            console.log(\"err\",err)\r\n           \r\n            setTimeout(() => {\r\n                this.state.history=this.state.history.filter((item)=>{\r\n                 \r\n                    if(item.id !== id_of_commnd ){\r\n                       \r\n                        return item;\r\n                    }\r\n                    else{ this.state.cmd_no_run_bacuse=item.comment;}\r\n                  })\r\n                  \r\n                  this.setState({err_cmd_flag:true})\r\n                  setTimeout(()=>{this.setState({err_cmd_flag:false});}, 6500);\r\n               \r\n                \r\n            }, 5000);\r\n              \r\n\r\n          \r\n           // this.forceUpdate();\r\n          })\r\n         \r\n          \r\n         \r\n        }\r\n       \r\n      \r\n        else if((this.state.countSaveMinion !==0) && (this.state.countSaveMinion!==1)){ \r\n            console.log(\"pppppppppppppppppppppp\")// && (this.state.countSaveMinion!==1)   \r\n            this.setState({warningNoMinionSelected:true});\r\n            setTimeout(()=>{this.setState({warningNoMinionSelected:false});}, 2200);\r\n        }\r\n        else{\r\n           \r\n            setTimeout(()=>{this.setState({msg:false,clickSave:false});}, 2200);\r\n        }\r\n        \r\n        // if((this.state.countSaveMinion !==0) && (this.state.countSaveMinion!==1) &&(this.state.input !== '')  ){ \r\n        //     this.setState({warningNoMinionSelected:true});\r\n        //     setTimeout(()=>{this.setState({warningNoMinionSelected:false});}, 2200);\r\n        // }\r\n       \r\n        \r\n\r\n    };\r\n\r\n\r\n\r\n  render(){\r\n  \r\n    return (\r\n\r\n<div style={{display: 'flex',flexDirection: 'row',}}>\r\n\r\n<div style={{display: 'flex',flexDirection: 'column',}}>\r\n   \r\n    <Paper component=\"form\" className={this.props.classes.root}>\r\n        <IconButton className={this.props.classes.iconButton} aria-label=\"menu\">\r\n            <MenuIcon />\r\n        </IconButton>\r\n            \r\n        <InputBase\r\n        autoComplete\r\n        autoFocus='true'\r\n        value={this.state.input}\r\n        onChange={(event)=>{this.setState({input:event.target.value})}}\r\n        className={this.props.classes.input}\r\n        placeholder=\"Command Line\"\r\n        inputProps={{ 'aria-label': 'Command Line' }}\r\n        />\r\n        {\r\n            this.state.input!==\"\"?(\r\n                <div>\r\n          \r\n            <IconButton color=\"primary\" className={this.props.classes.iconButton} aria-label=\"directions\" onClick={()=>{this.setState({input:\"\"})}}>\r\n              <ClearIcon />\r\n            </IconButton>\r\n            </div>\r\n            )\r\n            :(<div></div>)\r\n        }\r\n        <Divider className={this.props.classes.divider} orientation=\"vertical\" />     \r\n        <IconButton fontSize=\"small\" color='primary' size='medium' className={this.props.classes.iconButton} aria-label=\"directions\" onClick={this.ClickCSend}>\r\n            <SendIcon />\r\n        </IconButton>\r\n    </Paper>\r\n\r\n\r\n\r\n\r\n{\r\n    /////////////////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n<div className={this.props.classes.Comments}>\r\n    Parameters\r\n        <Divider light  style={{width:200}}/>\r\n    </div>\r\n\r\n\r\n    <Paper component=\"form\" className={this.props.classes.paperParms}>\r\n    <InputBase\r\n    autoComplete\r\n    autoFocus='true'\r\n    value={this.state.parms}\r\n    onChange={(event)=>{this.setState({parms:event.target.value})}}\r\n    className={this.props.classes.inputparms}\r\n    placeholder=\"Parameters\"\r\n    inputProps={{ 'aria-label': 'Parameters' }}\r\n    />\r\n    {\r\n    //     this.state.parms!==\"\"?(\r\n            \r\n     \r\n    //         <Divider className={this.props.classes.divider} orientation=\"vertical\" />\r\n       \r\n    //     )\r\n    //     :(<div></div>)\r\n    }\r\n  \r\n    {\r\n        this.state.parms!==\"\"?(\r\n            \r\n     \r\n        <IconButton fontSize=\"small\" color=\"primary\" className={this.props.classes.iconButton} aria-label=\"directions\" onClick={()=>{this.setState({parms:\"\"})}}>\r\n        <ClearIcon />\r\n      </IconButton>\r\n       \r\n        )\r\n        :(<div></div>)\r\n    }\r\n    {\r\n//     <Divider orientation=\"vertical\" flexItem/>   \r\n//    <Button\r\n//         variant=\"contained\"\r\n//         color=\"primary\"\r\n//         className={this.props.classes.button}\r\n//         //disabled\r\n//         //endIcon={<SendIcon />}\r\n//       >\r\n//         {//Send\r\n//         }\r\n//      </Button>\r\n    }\r\n\r\n    </Paper>\r\n\r\n\r\n\r\n\r\n    <div className={this.props.classes.Comments}>\r\n        commands\r\n        <Divider light  style={{width:200}}/>\r\n    </div>\r\n\r\n    <div className={this.props.classes.ButtonGroup}>\r\n        <ButtonGroup \r\n            size=\"large\" \r\n            color=\"primary\" \r\n            orientation=\"horizontal\"\r\n            color=\"primary\"\r\n            aria-label=\"vertical contained primary button group\"\r\n            variant=\"text\"\r\n            style={{ marginTop:35,width:420,height:50,}}>\r\n           \r\n           <Button onClick={()=>this.sentCommand('state.apply')}>state.apply</Button>\r\n            <Button onClick={()=>this.sentCommand('test.ping')}>test.ping</Button>\r\n            <Button onClick={()=>this.sentCommand('grains.items')}>grains.items</Button>\r\n\r\n        \r\n\r\n        </ButtonGroup>\r\n        <ButtonGroup \r\n            size=\"large\" \r\n            color=\"primary\" \r\n            orientation=\"horizontal\"\r\n            color=\"primary\"\r\n            aria-label=\"vertical contained primary button group\"\r\n            variant=\"text\"\r\n            style={{ marginTop:15,width:380,height:50,}}>\r\n\r\n            <Button onClick={()=>this.sentCommand('pillar.items')}>pillar.items</Button>\r\n            <Button onClick={()=>this.sentCommand('saltutil.refresh_grains')}>saltutil.refresh_grains</Button>\r\n           \r\n                            \r\n        </ButtonGroup>\r\n        <ButtonGroup \r\n            size=\"large\" \r\n            color=\"primary\" \r\n            orientation=\"horizontal\"\r\n            color=\"primary\"\r\n            aria-label=\"vertical contained primary button group\"\r\n            variant=\"text\"\r\n            style={{ marginTop:15,width:380,height:50,}}>\r\n        <Button onClick={()=>this.sentCommand('saltutil.refresh_pillar')}>saltutil.refresh_pillar</Button>\r\n        </ButtonGroup>\r\n    </div>\r\n\r\n    <div className={this.props.classes.Divider}>\r\n        History\r\n        <Divider light  style={{width:400}}/>\r\n    </div>\r\n\r\n\r\n    {\r\n        <div style={{ display: 'flex',flexDirection: 'row',flexFlow: 'row wrap',maxWidth:850,width:800}}>\r\n          {console.log(this.state.history,\"this.state.history\")}\r\n        {this.state.history.map(item =>{\r\n            return(\r\n                \r\n                  <MinionCard  id={item.id} minion={item.minions} comment={item.comment} prepared={item.prepared} Parameter={item.Parameter} err={this.state.err_cmd_flag}/>\r\n        )})}\r\n        </div>\r\n    }  \r\n\r\n\r\n    <div className={this.props.classes.Divider}>\r\n        <Divider light  style={{width:400}}/>\r\n    </div>\r\n\r\n\r\n    </div>\r\n<div>\r\n  \r\n\r\n    <div className={this.props.classes.MaterialTable}>\r\n        {\r\n            this.state.alert?\r\n            (   <div className={this.props.classes.msg}>\r\n                   \r\n                        <Alert severity=\"success\">\r\n                                The minions you selected were  — <strong>accepted in the system</strong>\r\n                        </Alert>\r\n                   \r\n                </div>\r\n            ):<div></div>\r\n        }\r\n        <MaterialTable\r\n        \r\n            title='Minions'\r\n            icons={tableIcons}\r\n            columns={[{ title: 'Name', field: 'name' },]}\r\n            data={this.state.data} \r\n            options={{selection: true}}       \r\n            actions=\r\n            {[{\r\n                icon: forwardRef((props, ref) => <SaveIcon color='action' {...props} ref={ref} />),\r\n                tooltip: 'Save Minions',\r\n                onClick: (event, rowData) => {this.clickOpen(rowData)}\r\n            }]}\r\n        />\r\n        {\r\n            this.state.clickSave === true?\r\n                (<div className={this.props.classes.msg}>\r\n                    <Snackbar open={this.state.msg} autoHideDuration={6000} onClose={this.handleClose}>\r\n                        <Alert onClose={this.handleClose} severity=\"success\">\r\n                            The commands you made were received in the system!\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </div>\r\n                ):<div></div>\r\n        }\r\n        {\r\n            this.state.warninginput === true ?\r\n            (   <div className={this.props.classes.msg}>\r\n                <Snackbar open={this.state.warninginput} autoHideDuration={6000} onClose={this.handleClose}>\r\n                    <Alert onClose={this.handleClose} severity=\"warning\">\r\n                          command not sent because     <strong> no command entered   </strong>\r\n                        </Alert>\r\n                  \r\n                    </Snackbar>\r\n                   \r\n                </div>\r\n            )\r\n            :<div></div>\r\n        }\r\n        {\r\n            this.state.warningNoMinionSelected === true ?\r\n            (   <div className={this.props.classes.msg}>\r\n                <Snackbar open={this.state.warningNoMinionSelected} autoHideDuration={6000} onClose={this.handleClose}>\r\n                    <Alert onClose={this.handleClose} severity=\"warning\">\r\n                              command not sent because <strong>no minion selected   </strong>\r\n                        </Alert>\r\n                  \r\n                    </Snackbar>\r\n                   \r\n                </div>\r\n            )\r\n            :<div></div>\r\n        }\r\n          {\r\n            this.state.err_cmd_flag === true ?\r\n            (   <div className={this.props.classes.msg}>\r\n                <Snackbar open={this.state.err_cmd_flag} autoHideDuration={6000} onClose={this.handleClose}>\r\n                    <Alert onClose={this.handleClose} severity=\"error\">\r\n                              The command  <strong>{this.state.cmd_no_run_bacuse}</strong>  not sent because <strong>Internal Server Error   </strong>\r\n                        </Alert>\r\n                  \r\n                    </Snackbar>\r\n                   \r\n                </div>\r\n            )\r\n            :<div></div>\r\n        }\r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n</div>\r\n</div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        saveMinion: state.saveMinion,\r\n        \r\n    }\r\n}\r\n  export default connect(mapStateToProps)(withStyles(styles)(SaltStack));\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport {DATE_SELECT} from \"../actions/types\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {Typography,Button,Grid} from '@material-ui/core';\r\nimport Title from './Title';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {KeyboardDatePicker,MuiPickersUtilsProvider,DatePicker} from \"@material-ui/pickers\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\n//import DateTime from 'react-datetime';\r\nimport {dateSelect} from '../actions/date.js';\r\nimport store from '../store';\r\nimport { saltReturnsForgraph } from '../actions/date';\r\nimport graphDate from '../reducers/graphDate';\r\nimport {GRAPH_DATE_SELECT} from \"../actions/types\";\r\n// <DatePicker\r\n// disableFuture\r\n// openTo=\"year\"\r\n// id=\"date-picker-dialog\"\r\n// margin=\"normal\"\r\n// format=\"dd/MM/yyyy\"\r\n// label=\"Start\"\r\n// views={[\"year\", \"month\", \"date\"]}\r\n// KeyboardButtonProps={{\r\n//   'aria-label': 'change date',\r\n// }}\r\n\r\n// />\r\n\r\n\r\n\r\n\r\n\r\n class SearchTimeGraph extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.dateIsChanged = this.dateIsChanged.bind(this);\r\n    this.state={graphDate:this.props.graphDate.graphDate,};\r\n  \r\n  }\r\n//   shouldComponentUpdate(nextProps, nextState) {\r\n//   return this.state.value != nextState.value;\r\n// }\r\n  \r\n    \r\n  \r\n  handleDateChange (date){\r\n    this.setState({graphDate:date});\r\n  \r\n  //  console.log(this.state,'this.state');\r\n  //  console.log(store.getState(),'store');\r\n   store.dispatch(saltReturnsForgraph());\r\n   setTimeout(() => {\r\n    store.dispatch({\r\n      type: GRAPH_DATE_SELECT,\r\n      payload: {graphDate:date}\r\n     } );\r\n   }, 0);\r\n  \r\n  }\r\n \r\n\r\n  dateIsChanged(){\r\n    //this.setState({graphDate:date});\r\n  //   let date=this.state.graphDate;\r\n  //  store.dispatch({\r\n  //   type: GRAPH_DATE_SELECT,\r\n  //   payload: {graphDate:date}\r\n  //  } );\r\n  //  store.dispatch(saltReturnsForgraph());\r\n\r\n\r\n    // console.log(\"store\",store.getState());\r\n}\r\n \r\n \r\n  render () {\r\n    return (\r\n      <React.Fragment>\r\n        <Typography component=\"p\" variant=\"h4\">\r\n\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid container justify=\"space-around\">\r\n            <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Graph Date\"\r\n            format=\"dd/MM/yyyy\"\r\n            value={this.state.graphDate}\r\n            onChange={(date)=>{this.handleDateChange(date)}}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n\r\n\r\n        \r\n   \r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n\r\n        </Typography>\r\n       \r\n      </React.Fragment>\r\n    );\r\n  }\r\n    \r\n}\r\n\r\n const mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    graphDate: state.graphDate\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SearchTimeGraph);","\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport React, { PureComponent } from 'react';\r\nimport {\r\n  BarChart, Bar, Brush, ReferenceLine, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\nimport store from '../store';\r\nimport axios from 'axios'\r\nimport { saltReturns } from '../actions/date';\r\nimport {connect} from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport {CURRENT_MONTH} from '../actions/types'\r\nconst styles = theme => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    button:{\r\n      margin: theme.spacing(1),\r\n    }\r\n});\r\n\r\nexport const tokenConfig = getState => {\r\n  // console.log(\"getstatteeeeeslatl\",getState())\r\n   // Get token from localstorage\r\n   const token = store.getState().auth.token;\r\n\r\n   // Headers\r\n   const config = {\r\n       headers: {\r\n           \"Content-type\": \"multipart/form-data\"\r\n       }\r\n   }\r\n\r\n   // If token, add to headers\r\n   if(token) {\r\n      config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n   }\r\n\r\nreturn config;\r\n}\r\nclass CurrentMonth extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n         this.dataInit = this.dataInit.bind(this);\r\n         this.initWithoutInformation = this.initWithoutInformation.bind(this);\r\n         //store.dispatch(saltReturns(\"CurrentMonth\"));\r\n         //console.log(store.getState(),\"store.getState()\")\r\n         this.initFirstTime = this.initFirstTime.bind(this);\r\n        this.state = {\r\n            start: new Date(),\r\n            end:new Date(),\r\n            data:[],\r\n            flag:true,\r\n        };\r\n       \r\n        this.initWithoutInformation()\r\n      }\r\n      initFirstTime(){\r\n        let dataInit=[];\r\n        let temp=new Date();\r\n        let mnonthDay =new Date(temp.getFullYear(), temp.getMonth()-1, 0).getDate();\r\n           for (let i=1;i<=mnonthDay;i++){\r\n            dataInit.push( { name: String(i), Fail:0, Success:0 });\r\n        }\r\n        this.state.data= dataInit;\r\n      }\r\n      // componentWillUpdate(){\r\n      //   this.setState({data:this.dataInit(),flag:false});\r\n      initWithoutInformation(){\r\n        if(store.getState().CurrentMonth.CurrentMonth.length>0){\r\n         this.state.data= store.getState().CurrentMonth.CurrentMonth;\r\n          this.forceUpdate();\r\n          \r\n        }\r\n        else{\r\n          this.dataInit();\r\n        }\r\n       \r\n     \r\n      }\r\n      dataInit(){\r\n        let time_1=new Date().getTime();\r\n        let year=String(new Date().getFullYear());\r\n        let dayEnd=String(new Date(year, new Date().getMonth()+1, 0).getDate());\r\n        dayEnd=parseInt(dayEnd)<10?\"0\"+dayEnd:dayEnd;\r\n        let satrtCurrentMonth=(new Date().getMonth()+1);\r\n        satrtCurrentMonth=parseInt( satrtCurrentMonth)<10?\"0\"+ satrtCurrentMonth: satrtCurrentMonth;\r\n        let Start= year+satrtCurrentMonth+\"01\"+\"000000000000\";\r\n        let End= year+satrtCurrentMonth+dayEnd+\"235959595959\";\r\n     \r\n        let minions=[];\r\n        let dataInit=[];\r\n       \r\n        let temp=new Date();\r\n         let mnonthDay =new Date(temp.getFullYear(), temp.getMonth()-1, 0).getDate();\r\n            for (let i=1;i<=mnonthDay;i++){\r\n             dataInit.push( { name: String(i), Fail:0, Success:0 });\r\n         }\r\n\r\n      let url='/api/saltReturns/apply/'+Start+\"/\"+End;\r\n    \r\n      axios.get(url, tokenConfig(store.getState()))\r\n      .then((res) => {\r\n        \r\n        minions=minions.concat(res.data);\r\n     \r\n        if(minions!==null){\r\n         \r\n          const BreakException = {};\r\n          \r\n         \r\n           \r\n            let funSaltReturns=minions\r\n       \r\n            .forEach((item) => {\r\n                let place= (parseInt(item.jid.slice(6,8))-1);\r\n               \r\n               let res=true;\r\n               let flag=0;\r\n              \r\n               if(Array.isArray(item.return)){ res=true;   {res === true ?(dataInit[place].Success++):(dataInit[place].Fail++)}}\r\n\r\n\r\n\r\n               else{\r\n                try {\r\n                   let dataTemp=Object.entries(item.return).forEach((e,index,arr) => {\r\n                    if((e[1].result === false) && (flag===0)){\r\n                      dataInit[place].Fail++;\r\n                      flag=1;\r\n                      throw BreakException;\r\n                   \r\n                     }\r\n                    if(index===arr.length-1 && flag === 0){\r\n                      dataInit[place].Success++;\r\n                    }\r\n               \r\n                 \r\n                  });\r\n\r\n\r\n                } catch (e) {\r\n                  if (e !== BreakException) throw e;\r\n                }\r\n\r\n          \r\n               }\r\n               \r\n              })\r\n\r\n\r\n         \r\n     \r\n          let time_2=new Date().getTime();\r\n          console.log((time_2-time_1),\"Time from month\");\r\n          }\r\n          \r\n          store.dispatch({\r\n            type:CURRENT_MONTH,\r\n            payload:dataInit\r\n          })\r\n          this.state.data= dataInit;\r\n          this.forceUpdate();\r\n    })\r\n    .catch(err => {\r\n        console.log(err,\"error in data\");\r\n\r\n       });\r\n\r\n      }\r\n      \r\n    render() {\r\n     // console.log(\"this.state 2\",this.state)\r\n        return (\r\n          <div>\r\n          <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n       \r\n          onClick={()=>{this.dataInit()}}\r\n          className={this.props.classes.button}\r\n          startIcon={<RefreshIcon />}\r\n        >\r\n          Refresh\r\n        </Button>\r\n          <BarChart\r\n            width={1220}\r\n            height={500}\r\n            data={this.state.data}\r\n            margin={{\r\n              top: 5, right: 20, left: 10, bottom: 5,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\r\n            <ReferenceLine y={0} stroke=\"#000\" />\r\n            <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" />\r\n            <Bar dataKey=\"Fail\" fill=\"#ff6666\"/>\r\n            <Bar dataKey=\"Success\" fill=\"#82ca9d\" />\r\n          </BarChart>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    \r\n    const mapStateToProps = (state, ownProps) => {\r\n      return {\r\n          saltReturns: state.saltReturns,\r\n          date: state.date\r\n      }\r\n  }\r\n    export default connect(mapStateToProps)(withStyles(styles)(CurrentMonth));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export default class Example extends PureComponent {\r\n//   static jsfiddleUrl = 'https://jsfiddle.net/alidingling/mc8r7e6p/';\r\n\r\n","\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport React, { PureComponent } from 'react';\r\nimport {\r\n  BarChart, Bar, Brush, ReferenceLine, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\nimport store from '../store';\r\nimport axios from 'axios'\r\nimport { saltReturns } from '../actions/date';\r\nimport {connect} from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport {CURRENT_YEAR} from '../actions/types'\r\nconst styles = theme => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    button:{\r\n      margin: theme.spacing(1),\r\n    }\r\n});\r\nconst tokenConfig = getState => {\r\n  // console.log(\"getstatteeeeeslatl\",getState())\r\n   // Get token from localstorage\r\n   const token = store.getState().auth.token;\r\n\r\n   // Headers\r\n   const config = {\r\n       headers: {\r\n           \"Content-type\": \"multipart/form-data\"\r\n       }\r\n   }\r\n\r\n   // If token, add to headers\r\n   if(token) {\r\n      config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n   }\r\n\r\nreturn config;\r\n}\r\n\r\nclass CurrentYear extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n         this.dataInit = this.dataInit.bind(this);\r\n         this.initWithoutInformation = this.initWithoutInformation.bind(this);\r\n         this.initFirstTime = this.initFirstTime.bind(this);\r\n         //store.dispatch(saltReturns(\"CurrentYear\"));\r\n        this.state = {\r\n            start: new Date(),\r\n            end:new Date(),\r\n            data:[],\r\n            flag:true,\r\n        };\r\n        this.initWithoutInformation()\r\n      }\r\n    initFirstTime(){\r\n      let dataInit=[];\r\n      // let temp=new Date(2019,10);\r\n     \r\n      dataInit.push( { name: String('January'), Fail:0, Success:0 });\r\n      dataInit.push( { name: String('February'), Fail:0, Success:0 });\r\n      dataInit.push( { name: String('March'), Fail:0, Success:0 });\r\n      dataInit.push( { name: String('April'), Fail:0, Success:0 });\r\n      dataInit.push( { name: String('May '), Fail:0, Success:0 });\r\n      dataInit.push( { name: String('June  '), Fail:0, Success:0 });\r\n      dataInit.push( { name: String('July  '), Fail:0, Success:0 });\r\n      dataInit.push( { name: String('August '), Fail:0, Success:0 });\r\n      dataInit.push( { name: String('September '),Fail:0, Success:0 });\r\n      dataInit.push( { name: String('October '), Fail:0, Success:0 });\r\n      dataInit.push( { name: String('November  '),Fail:0, Success:0 });\r\n      dataInit.push( { name: String('December '), Fail:0, Success:0 });\r\n      this.state.data= dataInit;\r\n    }\r\n      initWithoutInformation(){\r\n        if(store.getState().CurrentYear.CurrentYear.length>0){\r\n         this.state.data= store.getState().CurrentYear.CurrentYear;\r\n          this.forceUpdate();\r\n         \r\n        }\r\n        else{\r\n          this.dataInit();\r\n         \r\n        }\r\n\r\n      }\r\n      dataInit(){\r\n        let time_1=new Date().getTime();\r\n        let dataInit=[];\r\n        // let temp=new Date(2019,10);\r\n        const BreakException = {};\r\n        dataInit.push( { name: String('January'), Fail:0, Success:0 });\r\n        dataInit.push( { name: String('February'), Fail:0, Success:0 });\r\n        dataInit.push( { name: String('March'), Fail:0, Success:0 });\r\n        dataInit.push( { name: String('April'), Fail:0, Success:0 });\r\n        dataInit.push( { name: String('May '), Fail:0, Success:0 });\r\n        dataInit.push( { name: String('June  '), Fail:0, Success:0 });\r\n        dataInit.push( { name: String('July  '), Fail:0, Success:0 });\r\n        dataInit.push( { name: String('August '), Fail:0, Success:0 });\r\n        dataInit.push( { name: String('September '),Fail:0, Success:0 });\r\n        dataInit.push( { name: String('October '), Fail:0, Success:0 });\r\n        dataInit.push( { name: String('November  '),Fail:0, Success:0 });\r\n        dataInit.push( { name: String('December '), Fail:0, Success:0 });\r\n        let year=String(new Date().getFullYear());\r\n        let dayEnd=String(new Date(year, 12, 0).getDate());\r\n        dayEnd=parseInt(dayEnd)<10?\"0\"+dayEnd:dayEnd;\r\n        let Start= year+\"0101\"+\"000000000000\";\r\n        let End= year+\"12\"+dayEnd+\"235959595959\";\r\n        let minions=[];\r\n      \r\n\r\n        let url='/api/saltReturns/apply/'+Start+\"/\"+End;\r\n      \r\n        axios.get(url, tokenConfig(store.getState()))\r\n        .then((res) => {\r\n\r\n          minions=minions.concat(res.data);\r\n     \r\n          if(minions!==null){\r\n           \r\n            const BreakException = {};\r\n                minions.forEach((item) => {\r\n                let str=item.jid.slice(0,4)+\"-\"+String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\r\n                let time=new Date(str);\r\n                let place=time.getMonth();\r\n                let res=true;\r\n                let flag=0;\r\n                //if(item.full_ret.success === false){res=false}\r\n                //let temp =Object.entries(item.return);\r\n                if(Array.isArray(item.return)){ res=true;   {res === true ?(dataInit[place].Success++):(dataInit[place].Fail++)}}\r\n                else{\r\n                  try {\r\n                     let dataTemp=Object.entries(item.return).forEach((e,index,arr) => {\r\n                      if((e[1].result === false) && (flag===0)){\r\n                        dataInit[place].Fail++;\r\n                        flag=1;\r\n                        throw BreakException;\r\n                     \r\n                       }\r\n                      if(index===arr.length-1 && flag === 0){\r\n                        dataInit[place].Success++;\r\n                      }\r\n                 \r\n                   \r\n                    });\r\n        \r\n        \r\n                  } catch (e) {\r\n                    if (e !== BreakException) throw e;\r\n                  }\r\n        \r\n            \r\n                 }\r\n        \r\n              })\r\n\r\n          }\r\n          this.state.data= dataInit;\r\n          store.dispatch({\r\n            type:CURRENT_YEAR,\r\n            payload:dataInit\r\n          })\r\n          this.forceUpdate();\r\n        \r\n        }).catch(err => {\r\n        console.log(err,\"error in data\");\r\n\r\n       });\r\n      \r\n        let time_2=new Date().getTime();\r\n        console.log((time_2-time_1),\"Time from year\");\r\n     \r\n    }\r\n      \r\n   \r\n    render() {\r\n        return (\r\n          <div>\r\n          <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n       \r\n          onClick={()=>{this.dataInit()}}\r\n          className={this.props.classes.button}\r\n          startIcon={<RefreshIcon />}\r\n        >\r\n          Refresh\r\n        </Button>\r\n            <BarChart   \r\n                width={1220}\r\n                height={500} \r\n                data={this.state.data}\r\n                margin={{top: 5, right: 20, left: 10, bottom: 5,}}\r\n                >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\r\n                <ReferenceLine y={0} stroke=\"#000\" />\r\n              \r\n                <Bar dataKey=\"Fail\" fill=\"#ff6666\"/>\r\n                <Bar dataKey=\"Success\" fill=\"#82ca9d\" />\r\n            </BarChart>\r\n            </div>\r\n        \r\n      \r\n        );\r\n      }\r\n    }\r\n    \r\n    const mapStateToProps = (state, ownProps) => {\r\n      return {\r\n          saltReturns: state.saltReturns,\r\n          date: state.date\r\n      }\r\n  }\r\n\r\n  \r\n  \r\n  \r\nexport default connect(mapStateToProps)(withStyles(styles)(CurrentYear));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export default class Example extends PureComponent {\r\n//   static jsfiddleUrl = 'https://jsfiddle.net/alidingling/mc8r7e6p/';\r\n\r\n","import { withStyles } from \"@material-ui/core/styles\";\r\nimport React, { PureComponent } from 'react';\r\nimport {\r\n  BarChart, Bar, Brush, ReferenceLine, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\nimport store from '../store';\r\nimport { saltReturns } from '../actions/date';\r\nimport {connect} from 'react-redux';\r\nimport axios from 'axios'\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport {\r\n  LAST_THREE_MONTHS_ONE,\r\n     LAST_THREE_MONTHS_TOW,\r\n     LAST_THREE_MONTHS_THREE\r\n} from '../actions/types';\r\nimport { ThreeDRotationSharp } from \"@material-ui/icons\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        \r\n        flexGrow: 1,\r\n        maxWidth: 400,\r\n      },\r\n      button:{\r\n        margin: theme.spacing(1),\r\n      }\r\n});\r\nconst getDataFromServer = (str,start,end) => {\r\n  let timer_1=new Date().getTime();\r\n\r\n  let dataInit=[];\r\n  let temp=new Date();\r\n  if(str===LAST_THREE_MONTHS_ONE){\r\n\r\n      let monthDayOne =new Date(temp.getFullYear(), temp.getMonth()-2, 0).getDate();\r\n      for (let i=1;i<=monthDayOne;i++){\r\n          dataInit.push( { name: String(i), Fail:0, Success:0 });\r\n          }\r\n        \r\n  }\r\n  else if(str===LAST_THREE_MONTHS_TOW){\r\n\r\n      let monthDayTow =new Date(temp.getFullYear(), temp.getMonth()-1, 0).getDate();\r\n      for (let i=1;i<=monthDayTow;i++){\r\n          dataInit.push( { name: String(i), Fail:0, Success:0 });\r\n    }\r\n  }\r\n  else if(str===LAST_THREE_MONTHS_THREE){\r\n\r\n          \r\n      let monthDayThree =new Date(temp.getFullYear(), temp.getMonth(), 0).getDate();\r\n      for (let i=1;i<=monthDayThree;i++){\r\n          dataInit.push( { name: String(i), Fail:0, Success:0 });\r\n  }\r\n}\r\n \r\n      let minions=[];\r\n      let url='/api/saltReturns/apply/'+start+\"/\"+end;\r\n    \r\n     \r\n      console.log(\"url\" ,url);\r\n      axios.get(url, tokenConfig())\r\n      .then((res) => {\r\n        minions=minions.concat(res.data);\r\n       \r\n        if(minions!==null){\r\n          \r\n          let funSaltReturns=minions\r\n       \r\n        .forEach((item) => {\r\n            let place= (parseInt(item.jid.slice(6,8))-1);\r\n           \r\n           let res=true;\r\n           let flag=0;\r\n          \r\n           if(Array.isArray(item.return)){ res=true;   {res === true ?(dataInit[place].Success++):(dataInit[place].Fail++)}}\r\n           else{\r\n             \r\n               let dataTemp=Object.entries(item.return).map((e,index,arr) => {\r\n                if((e[1].result === false) && (flag===0)){\r\n                  dataInit[place].Fail++;\r\n                  flag=1;\r\n               \r\n                 }\r\n                if(index===arr.length-1 && flag === 0){\r\n                  dataInit[place].Success++;\r\n                }\r\n           \r\n             \r\n              });\r\n      \r\n           }\r\n         \r\n          })\r\n       \r\n          }\r\n          if(str===LAST_THREE_MONTHS_ONE){\r\n            this.state.one=dataInit;\r\n          }\r\n          else if(str===LAST_THREE_MONTHS_TOW){\r\n            this.state.tow=dataInit;\r\n          }\r\n          else if(str===LAST_THREE_MONTHS_THREE){\r\n            this.state.three=dataInit;\r\n          }\r\n          let timer_2=new Date().getTime();\r\n          console.log(timer_2-timer_1,\"time from str\")\r\n          \r\n      })\r\n      .catch(err => {\r\n        console.log(err,\"error in data\");\r\n      \r\n       });\r\n  \r\n  }\r\nconst tokenConfig = () => {\r\n  // console.log(\"getstatteeeeeslatl\",getState())\r\n   // Get token from localstorage\r\n   const token = store.getState().auth.token;\r\n\r\n   // Headers\r\n   const config = {\r\n       headers: {\r\n           \"Content-type\": \"multipart/form-data\"\r\n       }\r\n   }\r\n\r\n   // If token, add to headers\r\n   if(token) {\r\n      config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n   }\r\n\r\nreturn config;\r\n}\r\nclass LastThreeMonths extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.initWithoutInformation = this.initWithoutInformation.bind(this);\r\n         this.dataInitOne = this.dataInitOne.bind(this);\r\n         this.dataInitTow = this.dataInitTow.bind(this);\r\n         this.dataInitThree = this.dataInitThree.bind(this);\r\n         this.getDataFromServer = this.getDataFromServer.bind(this);\r\n         this.initFirstTime = this.initFirstTime.bind(this);\r\n        // store.dispatch(saltReturns(\"LastThreeMonths\"));\r\n  \r\n        this.state = {\r\n            start: new Date(),\r\n            end:new Date(),\r\n            nameOne:'',\r\n            nameTow:'',\r\n            nameThree:'',\r\n            one: [],\r\n            tow: [],\r\n            three: [],\r\n            flag:true,\r\n         \r\n        };\r\n        this.initWithoutInformation();\r\n      \r\n      }\r\n      initFirstTime(){\r\n        \r\nlet dataInitOne=[];\r\n\r\n\r\n\r\nlet temp=new Date();\r\n// let temp=new Date(2019,10);\r\n\r\nlet monthDayOne =new Date(temp.getFullYear(), temp.getMonth()-2, 0).getDate();\r\n  for (let i=1;i<=monthDayOne;i++){\r\n    dataInitOne.push( { name: String(i), Fail:0, Success:0 });\r\n}\r\nthis.state.one=dataInitOne;\r\n////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nlet dataInitTow=[];\r\n\r\nlet monthDayTow =new Date(temp.getFullYear(), temp.getMonth()-1, 0).getDate();\r\n  for (let i=1;i<=monthDayTow;i++){\r\n    dataInitTow.push( { name: String(i), Fail:0, Success:0 });\r\n}\r\nthis.state.tow=dataInitTow;\r\n///////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nlet dataInitThree=[];\r\n\r\n\r\nlet monthDayThree =new Date(temp.getFullYear(), temp.getMonth(), 0).getDate();\r\n  for (let i=1;i<=monthDayThree;i++){\r\n    dataInitThree.push( { name: String(i), Fail:0, Success:0 });\r\n}\r\nthis.state.three=dataInitThree;\r\n      }\r\ninitWithoutInformation(){\r\n  if(store.getState().LastThreeMonths.dataInitOne.length>0){\r\n    this.state.one= store.getState().LastThreeMonths.dataInitOne;\r\n    console.log(\"this.state.three= store.getState().LastThreeMonths.dataInitOne;\")\r\n     this.forceUpdate();\r\n    \r\n   }\r\n   else{ this.dataInitOne();  console.log(\" this.dataInitOne();\")}\r\n\r\n   if(store.getState().LastThreeMonths.dataInitTow.length>0){\r\n    this.state.tow= store.getState().LastThreeMonths.dataInitTow;\r\n    console.log(\"this.state.three= store.getState().LastThreeMonths.dataInitTow;\")\r\n     this.forceUpdate();\r\n    \r\n   }\r\n   else{  this.dataInitTow();  console.log(\" this.dataInitTow();\")}\r\n\r\n   if(store.getState().LastThreeMonths.dataInitThree.length>0){\r\n    this.state.three= store.getState().LastThreeMonths.dataInitThree;\r\n     this.forceUpdate();\r\n     console.log(\"this.state.three= store.getState().LastThreeMonths.dataInitThree;\")\r\n    \r\n   }\r\n   else{ this.dataInitThree(); console.log(\" this.dataInitThree();\")}\r\n  \r\n  \r\n\r\n      // let dataInitOne=[];\r\n\r\n      // let temp=new Date();\r\n      // // let temp=new Date(2019,10);\r\n\r\n      // let monthDayOne =new Date(temp.getFullYear(), temp.getMonth()-2, 0).getDate();\r\n      //   for (let i=1;i<=monthDayOne;i++){\r\n      //     dataInitOne.push( { name: String(i), Fail:0, Success:0 });\r\n      // }\r\n      // this.state.one=dataInitOne;\r\n      // ////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n      // let dataInitTow=[];\r\n\r\n      // let monthDayTow =new Date(temp.getFullYear(), temp.getMonth()-1, 0).getDate();\r\n      //   for (let i=1;i<=monthDayTow;i++){\r\n      //     dataInitTow.push( { name: String(i), Fail:0, Success:0 });\r\n      // }\r\n      // this.state.tow=dataInitTow;\r\n      // ///////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n      // let dataInitThree=[];\r\n\r\n\r\n      // let monthDayThree =new Date(temp.getFullYear(), temp.getMonth(), 0).getDate();\r\n      //   for (let i=1;i<=monthDayThree;i++){\r\n      //     dataInitThree.push( { name: String(i), Fail:0, Success:0 });\r\n      // }\r\n      // this.state.three=dataInitThree;\r\n}\r\ngetDataFromServer (str,start,end) {\r\n        let timer_1=new Date().getTime();\r\n      \r\n        let dataInit=[];\r\n        let temp=new Date();\r\n        if(str===LAST_THREE_MONTHS_ONE){\r\n      \r\n            let monthDayOne =new Date(temp.getFullYear(), temp.getMonth()-2, 0).getDate();\r\n            for (let i=1;i<=monthDayOne;i++){\r\n                dataInit.push( { name: String(i), Fail:0, Success:0 });\r\n                }\r\n              \r\n        }\r\n        else if(str===LAST_THREE_MONTHS_TOW){\r\n      \r\n            let monthDayTow =new Date(temp.getFullYear(), temp.getMonth()-1, 0).getDate();\r\n            for (let i=1;i<=monthDayTow;i++){\r\n                dataInit.push( { name: String(i), Fail:0, Success:0 });\r\n          }\r\n        }\r\n        else if(str===LAST_THREE_MONTHS_THREE){\r\n      \r\n                \r\n            let monthDayThree =new Date(temp.getFullYear(), temp.getMonth(), 0).getDate();\r\n            for (let i=1;i<=monthDayThree;i++){\r\n                dataInit.push( { name: String(i), Fail:0, Success:0 });\r\n        }\r\n      }\r\n       \r\n            let minions=[];\r\n            let url='/api/saltReturns/apply/'+start+\"/\"+end;\r\n          \r\n           \r\n            console.log(\"url\" ,url);\r\n            axios.get(url, tokenConfig())\r\n            .then((res) => {\r\n              minions=minions.concat(res.data);\r\n             \r\n              if(minions!==null){\r\n                \r\n                let funSaltReturns=minions\r\n             \r\n              .forEach((item) => {\r\n                  let place= (parseInt(item.jid.slice(6,8))-1);\r\n                 \r\n                 let res=true;\r\n                 let flag=0;\r\n                \r\n                 if(Array.isArray(item.return)){ res=true;   {res === true ?(dataInit[place].Success++):(dataInit[place].Fail++)}}\r\n                 else{\r\n                   \r\n                     let dataTemp=Object.entries(item.return).map((e,index,arr) => {\r\n                      if((e[1].result === false) && (flag===0)){\r\n                        dataInit[place].Fail++;\r\n                        flag=1;\r\n                     \r\n                       }\r\n                      if(index===arr.length-1 && flag === 0){\r\n                        dataInit[place].Success++;\r\n                      }\r\n                 \r\n                   \r\n                    });\r\n            \r\n                 }\r\n               \r\n                })\r\n             \r\n                }\r\n                if(str===LAST_THREE_MONTHS_ONE){\r\n                  store.dispatch({\r\n                    type:LAST_THREE_MONTHS_ONE,\r\n                    payload:dataInit\r\n                  })\r\n                  this.state.one=dataInit;\r\n                }\r\n                else if(str===LAST_THREE_MONTHS_TOW){\r\n                  store.dispatch({\r\n                    type:LAST_THREE_MONTHS_TOW,\r\n                    payload:dataInit\r\n                  })\r\n                  this.state.tow=dataInit;\r\n                }\r\n                else if(str===LAST_THREE_MONTHS_THREE){\r\n                  store.dispatch({\r\n                    type:LAST_THREE_MONTHS_THREE,\r\n                    payload:dataInit\r\n                  })\r\n                  this.state.three=dataInit;\r\n                }\r\n                let timer_2=new Date().getTime();\r\n                console.log(timer_2-timer_1,\"time from str\")\r\n                this.forceUpdate();\r\n            })\r\n            .catch(err => {\r\n              console.log(err,\"error in data\");\r\n            \r\n             });\r\n        \r\n}\r\ndataInitOne(){\r\n        let yearTemp=String(new Date().getFullYear());\r\n        let year =String(new Date(yearTemp, new Date().getMonth()-2, 1).getFullYear());\r\n        let dayEnd=String(new Date(year, new Date().getMonth()-2, 0).getDate());\r\n    \r\n        dayEnd=parseInt(dayEnd)<10?\"0\"+dayEnd:dayEnd;\r\n    \r\n        let satrtMonth=new Date(year, new Date().getMonth()-2, 1).getMonth();\r\n    \r\n        satrtMonth=parseInt(satrtMonth)<10?\"0\"+satrtMonth:satrtMonth;\r\n    \r\n        let start= year+satrtMonth+\"01\"+\"000000000000\";\r\n        let end= year+satrtMonth+dayEnd+\"235959595959\";\r\n      \r\n        this.getDataFromServer(LAST_THREE_MONTHS_ONE,start,end)\r\n}\r\n\r\n    //     })\r\n\r\ndataInitTow(){\r\n         \r\n        let yearTemp=String(new Date().getFullYear());\r\n        let year =String(new Date(yearTemp, new Date().getMonth()-2, 1).getFullYear());\r\n        let dayEndTow=String(new Date(year, new Date().getMonth()-1, 0).getDate());\r\n\r\n        dayEndTow=parseInt(dayEndTow)<10?\"0\"+dayEndTow:dayEndTow;\r\n    \r\n        let satrtMonthTow=new Date(year, new Date().getMonth()-1, 1).getMonth();\r\n    \r\n        satrtMonthTow=parseInt(satrtMonthTow)<10?\"0\"+satrtMonthTow:satrtMonthTow;\r\n    \r\n        let startTow= year+satrtMonthTow+\"01\"+\"000000000000\";\r\n        let endTow= year+satrtMonthTow+dayEndTow+\"235959595959\";\r\n        this.getDataFromServer(LAST_THREE_MONTHS_TOW,startTow,endTow)\r\n}\r\n\r\n      dataInitThree(){\r\n        let yearTemp=String(new Date().getFullYear());\r\n        let year =String(new Date(yearTemp, new Date().getMonth()-2, 1).getFullYear());\r\n        let dayEndThree=String(new Date(year, new Date().getMonth(), 0).getDate());\r\n\r\n        dayEndThree=parseInt(dayEndThree)<10?\"0\"+dayEndThree:dayEndThree;\r\n    \r\n        let satrtMonthTrhee=new Date(year, new Date().getMonth(), 1).getMonth();\r\n    \r\n        satrtMonthTrhee=parseInt(satrtMonthTrhee)<10?\"0\"+satrtMonthTrhee:satrtMonthTrhee;\r\n    \r\n        let startTrhee= year+satrtMonthTrhee+\"01\"+\"000000000000\";\r\n        let endTrhee= year+satrtMonthTrhee+dayEndThree+\"235959595959\";\r\n    \r\n        this.getDataFromServer(LAST_THREE_MONTHS_THREE,startTrhee,endTrhee)\r\n      }\r\n\r\n    \r\n   \r\n    render() {\r\n        let listMonth=['January','February','March','April',\r\n        'May','June','July','August','September',\r\n        'October','November','December'];\r\n        let temp=new Date();\r\n        let tempMonth=temp.getMonth();\r\n        if((tempMonth-1)<0){tempMonth+=12;}\r\n        this.state.nameThree=listMonth[tempMonth-1];\r\n        if((tempMonth-2)<0){tempMonth+=12;}\r\n        this.state.nameTow=listMonth[tempMonth-2];\r\n        if((tempMonth-3)<0){tempMonth+=12;}\r\n        this.state.nameOne=listMonth[tempMonth-3];\r\n    \r\n        return (\r\n          <div>\r\n          <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n     \r\n          onClick={()=>{  \r\n            this.dataInitOne();\r\n            this.dataInitTow();\r\n            this.dataInitThree();}}\r\n          className={this.props.classes.button}\r\n          startIcon={<RefreshIcon />}\r\n        >\r\n          Refresh\r\n        </Button>\r\n            <TreeView\r\n            className={this.props.classes.root}\r\n            defaultCollapseIcon={<ExpandMoreIcon />}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n            >\r\n                <TreeItem nodeId=\"1\" label={this.state.nameOne} >\r\n                    <BarChart\r\n                    width={1170}\r\n                    height={500}\r\n                    data={this.state.one}\r\n                    margin={{\r\n                    top: 5, right: 20, left: 10, bottom: 5,\r\n                    }}\r\n                    >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\r\n                    <ReferenceLine y={0} stroke=\"#000\" />\r\n                    <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" />\r\n                    <Bar dataKey=\"Fail\" fill=\"#ff6666\"/>\r\n                    <Bar dataKey=\"Success\" fill=\"#82ca9d\" />\r\n                </BarChart>\r\n                </TreeItem>\r\n\r\n                <TreeItem nodeId=\"2\" label={this.state.nameTow}>\r\n                    <BarChart\r\n                    width={1170}\r\n                    height={500}\r\n                    data={this.state.tow}\r\n                    margin={{\r\n                    top: 5, right: 20, left: 10, bottom: 5,\r\n                    }}\r\n                    >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\r\n                    <ReferenceLine y={0} stroke=\"#000\" />\r\n                    <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" />\r\n                    <Bar dataKey=\"Fail\" fill=\"#ff6666\"/>\r\n                    <Bar dataKey=\"Success\" fill=\"#82ca9d\" />\r\n                    </BarChart>\r\n                </TreeItem>\r\n\r\n\r\n                <TreeItem nodeId=\"3\" label={this.state.nameThree}>\r\n                    <BarChart\r\n                    width={1170}\r\n                    height={500}\r\n                    data={this.state.three}\r\n                    margin={{\r\n                    top: 5, right: 20, left: 10, bottom: 5,\r\n                    }}\r\n                    >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\r\n                    <ReferenceLine y={0} stroke=\"#000\" />\r\n                    <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" />\r\n                    <Bar dataKey=\"Fail\" fill=\"#ff6666\"/>\r\n                    <Bar dataKey=\"Success\" fill=\"#82ca9d\" />\r\n                    </BarChart>\r\n                </TreeItem>\r\n\r\n            \r\n            \r\n          </TreeView>\r\n      </div>\r\n          \r\n       \r\n        );\r\n      }\r\n    }\r\n    \r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n      saltReturns: state.saltReturns,\r\n      date: state.date\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(withStyles(styles)(LastThreeMonths));","\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport React, { PureComponent } from 'react';\r\nimport store from '../store';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {REGISTER_SUCCESS,REGISTER_FAIL} from '../actions/types';\r\nimport {returnErrors}  from '../actions/errorActions';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport TeamCard from './TeamCard';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { ContactsOutlined } from \"@material-ui/icons\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { teamList } from '../actions/date';\r\nimport { FAB } from '../actions/types';\r\nimport axios from 'axios';\r\nconst styles = theme => ({\r\n    root: {\r\n      // maxWidth: 1000,\r\n      // display: 'flex',\r\n      // flexDirection: 'row',\r\n      // flexWrap:'warp',\r\n      //justifyContent:'space-around', \r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      flexFlow: 'row wrap',\r\n      maxWidth:1300,\r\n      justifyContent:'space around'\r\n\r\n      },\r\n      field:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        maxWidth:250,\r\n        justifyContent:'space around',\r\n        marginTop:theme.spacing(-3),\r\n        marginLeft:theme.spacing(57),\r\n      },\r\n      input:{\r\n        paddingTop:theme.spacing(2),\r\n        paddingLeft:theme.spacing(-4)\r\n      },\r\n      paragraph:{\r\n          paddingLeft:theme.spacing(7.8)\r\n      },\r\n      fab:{\r\n        color:'#fff',\r\n        //cursor: 'pointer',\r\n        border:'none',\r\n        outline: 'none',\r\n        outlineOffset: 'none',\r\n        marginLeft:theme.spacing(4),\r\n        marginTop:theme.spacing(4)\r\n      },\r\n      button:{\r\n        marginTop:theme.spacing(6)\r\n      },\r\n      form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n      },\r\n      msg:{\r\n        width: '100%',\r\n        '& > * + *': {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n});\r\n\r\n\r\n\r\nconst tokenConfig = getState => {\r\n    // console.log(\"getstatteeeeeslatl\",getState())\r\n     // Get token from localstorage\r\n     const token = getState().auth.token;\r\n \r\n     // Headers\r\n     const config = {\r\n         headers: {\r\n            'Content-Type': 'application/json'\r\n         }\r\n     }\r\n \r\n     // If token, add to headers\r\n     if(token) {\r\n        config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n     }\r\n \r\n  return config;\r\n }\r\n\r\n\r\n\r\n\r\n    \r\n \r\n\r\n    class FormOfTeam extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n          \r\n            //this.ClickFab = this.ClickFab.bind(this);\r\n            this.handleClose = this.handleClose.bind(this);\r\n            this.signIn = this.signIn.bind(this);\r\n            this.handleInputChange = this.handleInputChange.bind(this);\r\n            this.handleClickShowPassword = this.handleClickShowPassword.bind(this);\r\n            this.handleMouseDownPassword = this.handleMouseDownPassword.bind(this);\r\n            this.handleClickShowPasswordReturn = this.handleClickShowPasswordReturn.bind(this);\r\n            this.handleMouseDownPasswordReturn = this.handleMouseDownPasswordReturn.bind(this);\r\n            console.log(\"pppppppppppppppppppp\")\r\n         \r\n            this.state=\r\n            {\r\n              Team:[],\r\n              expanded:false,\r\n              fab:false,\r\n              first_name:this.props.first_name,\r\n              last_name:this.props.last_name,\r\n              Role:this.props.Role,\r\n              Email:this.props.Email,\r\n              Password:'',\r\n              ReturnPassword:'',\r\n              showPasswordReturn:'password',\r\n              showPassword:'password',\r\n              errPassword:false,\r\n              saveCard:false,\r\n              Team:[],\r\n              counter:0,\r\n              err_first_name:false,\r\n              err_last_name:false,\r\n              err_Role:false,\r\n              err_Email:false,\r\n              err_Password:false,\r\n              no_add_card:false,\r\n              \r\n            };\r\n        }\r\n\r\n        handleClickShowPassword(){\r\n            this.setState({showPassword:'text'});\r\n          }\r\n          handleMouseDownPassword(){\r\n            this.setState({showPassword:'password'});\r\n          }\r\n          handleClickShowPasswordReturn(){\r\n            this.setState({showPasswordReturn:'text'});\r\n          }\r\n          handleMouseDownPasswordReturn(){\r\n            this.setState({showPasswordReturn:'password'});\r\n          }\r\n          handleInputChange(e) {\r\n  \r\n            this.setState({ [e.target.name] : e.target.value});\r\n            // console.log(this.state);\r\n          }\r\n          handleClose (event, reason) \r\n          {\r\n              if (reason === 'clickaway') {\r\n                return;\r\n              }\r\n          \r\n              \r\n              this.setState({errPassword:false,saveCard:false});\r\n          }\r\n \r\n        signIn(event){\r\n            axios.get('/get_users',tokenConfig(store.getState))\r\n            .then((res) => { \r\n             \r\n              this.setState({Team:res.data});\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n        \r\n               });\r\n            event.preventDefault();\r\n            const { password, ReturnPassword,Role,Email,first_name,last_name } = this.state;\r\n            //send cardTeam to server\r\n            //console.log(\"event.preventDefault()\");\r\n            const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\r\n            const emailRegex = new RegExp(\"[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,6}\");    \r\n            let flag=true;\r\n            if((strongRegex.test(password)===false) || ( password.length>30)  ){flag=false;this.setState({err_Password:true});setTimeout(()=>{this.setState({err_Password:false});}, 10000);}\r\n            if(first_name.length>30 ){flag=false;this.setState({err_first_name:true});setTimeout(()=>{this.setState({err_first_name:false});}, 6000);}\r\n            if(last_name.length>30 ){flag=false;this.setState({err_last_name:true});setTimeout(()=>{this.setState({err_last_name:false});}, 6000);}\r\n            if(Role.length>30 ){flag=false;this.setState({err_Role:true});setTimeout(()=>{this.setState({err_Role:false});}, 6000);}\r\n            if((Email.length>50) || (emailRegex.test(this.state.Email.toUpperCase())===false)){flag=false;this.setState({err_Email:true});setTimeout(()=>{this.setState({err_Email:false});}, 6000);}\r\n            if (password===ReturnPassword){}\r\n            else\r\n            {\r\n              this.setState({errPassword:true});\r\n              setTimeout(()=>{this.setState({errPassword:false});}, 6000);\r\n            }\r\n            if(store.getState().fab.details.upDate===true &&(password===ReturnPassword) && (flag===true)){\r\n                this.state.Team.map((item)=>{\r\n                    if( (item.first_name === store.getState().fab.details.first_name)\r\n                    && (item.last_name === store.getState().fab.details.last_name)\r\n                    && (item.Role === store.getState().fab.details.Role)\r\n                    && (item.Email === store.getState().fab.details.Email))\r\n                    {\r\n                            // make update\r\n                    }\r\n                    store.getState().fab.details.upDate=false;\r\n                    return;\r\n                })\r\n            }\r\n          \r\n       \r\n       \r\n            if((password===ReturnPassword) && (flag===true)){\r\n        \r\n                this.setState((prevState) => ({fab:false}));\r\n                 \r\n          \r\n                    const body = JSON.stringify({first_name:first_name,last_name:last_name,role:Role,email:Email, password:password });\r\n                    //console.log(body,'body')\r\n                    axios.post(\"/register\", body, tokenConfig(store.getState))\r\n                  .then(res => \r\n                    {\r\n                      this.state.Team.push({first_name:first_name,mail:Email,role:Role,last_name:last_name});\r\n                      this.setState({saveCard:true});\r\n                      setTimeout(()=>{this.setState({saveCard:false});}, 4000);\r\n                    }\r\n                  )\r\n                    .catch(err => {\r\n                    console.log(err)\r\n                    this.setState({no_add_card:true});\r\n                    setTimeout(()=>{this.setState({no_add_card:false});}, 4000);\r\n                    })\r\n          \r\n                    \r\n          \r\n                    this.setState({expanded:false,\r\n                      fab:false,\r\n                      first_name:'',\r\n                      last_name:'',\r\n                      Role:'',\r\n                      Email:'',\r\n                      Password:'',\r\n                      ReturnPassword:'',\r\n                      showPasswordReturn:'password',\r\n                      showPassword:'password',\r\n                      errPassword:false,\r\n                      UnsecuredPassword:false,\r\n                    });\r\n                     \r\n                   \r\n                  \r\n                    store.dispatch({\r\n                      type:FAB,\r\n                      payload:false\r\n                    })\r\n                  console.log(store.getState(),\"form\")\r\n                 \r\n              }\r\n        }\r\n           \r\n                 \r\n    render(){\r\n\r\n        return(\r\n\r\n            <div className={this.props.classes.field}>\r\n            <form className={this.props.classes.form} onSubmit={this.signIn} >\r\n              <div className={this.props.classes.input}>\r\n    \r\n                <TextField\r\n                  className={this.props.classes.margin}\r\n                  id=\"input-with-icon-textfield\"\r\n                  label=\"First Name\"\r\n                  required\r\n                  fullWidth\r\n                  name='first_name'\r\n                  value={this.state.first_name}\r\n                  onChange={this.handleInputChange}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <AccountCircle />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n    \r\n              </div>\r\n    \r\n              {\r\n                this.state.err_first_name===true?\r\n                (   <div className={this.props.classes.msg}>\r\n                  \r\n                    <Alert onClose={() =>{this.setState({err_first_name:false})}} severity=\"error\">\r\n                    The first name must be less than  <strong>30 characters  </strong>\r\n                    </Alert>\r\n                    </div>\r\n                )\r\n                :<div></div>\r\n             }\r\n              <div className={this.props.classes.input}>\r\n    \r\n              <TextField\r\n                className={this.props.classes.margin}\r\n                id=\"input-with-icon-textfield\"\r\n                label=\"Last Name\"\r\n                fullWidth\r\n                name='last_name'\r\n               \r\n                value={this.state.last_name}\r\n                onChange={this.handleInputChange}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <AccountCircle />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n  \r\n            </div>\r\n  \r\n  \r\n            {\r\n              this.state.err_last_name===true?\r\n              (   <div className={this.props.classes.msg}>\r\n                \r\n                  <Alert onClose={() =>{this.setState({err_last_name:false})}} severity=\"error\">\r\n                  The last name must be less than  <strong>30 characters  </strong>\r\n                  </Alert>\r\n                  </div>\r\n              )\r\n              :<div></div>\r\n           }\r\n              <div className={this.props.classes.input}>\r\n    \r\n                <TextField\r\n                  className={this.props.classes.margin}\r\n                  id=\"input-with-icon-textfield\"\r\n                  label=\"Email\"\r\n                  required\r\n                  fullWidth\r\n                  name='Email'\r\n                  value={this.state.Email}\r\n                  onChange={this.handleInputChange}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <AccountCircle />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n    \r\n              </div>\r\n    \r\n  \r\n              {\r\n                this.state.err_Email===true?\r\n                (   <div className={this.props.classes.msg}>\r\n                  \r\n                    <Alert onClose={() =>{this.setState({err_Email:false})}} severity=\"error\">\r\n                     <strong> Invalid mail  </strong>\r\n                    </Alert>\r\n                    </div>\r\n                )\r\n                :<div></div>\r\n             }\r\n    \r\n              <div className={this.props.classes.input}>\r\n    \r\n                <TextField\r\n                  className={this.props.classes.margin}\r\n                  id=\"input-with-icon-textfield\"\r\n                  label=\"Role\"\r\n                  name='Role'\r\n                  fullWidth\r\n                  value={this.state.Role}\r\n                  onChange={this.handleInputChange}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <AccountCircle />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  \r\n                />\r\n    \r\n              </div>\r\n  \r\n              {\r\n                this.state.err_Role===true?\r\n                (   <div className={this.props.classes.msg}>\r\n                  \r\n                    <Alert onClose={() =>{this.setState({err_Role:false})}} severity=\"error\">\r\n                    The role name must be less than  <strong>30 characters  </strong>\r\n                    </Alert>\r\n                    </div>\r\n                )\r\n                :<div></div>\r\n             }\r\n              <div className={this.props.classes.input}>\r\n    \r\n                <TextField\r\n                  className={this.props.classes.margin}\r\n                  id=\"input-with-icon-textfield\"\r\n                  label=\"password\"\r\n                  //variant=\"outlined\"\r\n                  //margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                 \r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type={this.state.showPassword==='text'  ? 'text' : 'password'}\r\n                  value={this.state.password}\r\n                  onChange={this.handleInputChange}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <AccountCircle />\r\n                      </InputAdornment>\r\n                    ),\r\n                    endAdornment:(\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={this.handleClickShowPassword}\r\n                          onMouseDown={this.handleMouseDownPassword}\r\n                        >\r\n                          {this.state.showPassword==='text' ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    )\r\n                  }}\r\n                 \r\n                />\r\n             \r\n  \r\n              </div>\r\n              {\r\n                this.state.err_Password===true?\r\n                (   <div className={this.props.classes.msg}>\r\n                  \r\n                    <Alert onClose={() =>{this.setState({err_Password:false})}} severity=\"error\">\r\n                    The password <strong>must </strong>  be at least 8 characters long, and include uppercase and lowercase letters, and special characters\r\n                         <strong>{\"{ !, @, #, \\, $,%, \\, ^ &, \\, * }\"}  </strong>\r\n                    </Alert>\r\n                    </div>\r\n                )\r\n                :<div></div>\r\n             }\r\n              \r\n              <div className={this.props.classes.input}>\r\n    \r\n              <TextField\r\n                className={this.props.classes.margin}\r\n                id=\"input-with-icon-textfield\"\r\n                label=\"password\"\r\n                //variant=\"outlined\"\r\n                //margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"ReturnPassword\"\r\n                label=\"Repeat Password\"\r\n                type={this.state.showPasswordReturn==='text' ? 'text' : 'password'}\r\n                value={this.state.ReturnPassword}\r\n                  onChange={this.handleInputChange}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <AccountCircle />\r\n                    </InputAdornment>\r\n                  ),\r\n                  endAdornment:(\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={this.handleClickShowPasswordReturn}\r\n                        onMouseDown={this.handleMouseDownPasswordReturn}\r\n                      >\r\n                        {this.state.showPasswordReturn==='text' ? <Visibility /> : <VisibilityOff />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n               \r\n              />\r\n    \r\n            </div>\r\n  \r\n        \r\n  \r\n            {\r\n              this.state.errPassword===true?\r\n              (   <div className={this.props.classes.msg}>\r\n                \r\n                  <Alert onClose={() =>{this.setState({errPassword:false})}} severity=\"error\">\r\n                   Passwords  <strong>unequal   </strong>\r\n                  </Alert>\r\n                  </div>\r\n              )\r\n              :<div></div>\r\n           }\r\n        \r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                size=\"small\"\r\n                fullWidth\r\n                className={this.props.classes.button}\r\n               // onClick={this.ClickFab}\r\n                startIcon={<SaveIcon />}\r\n              >\r\n                Save\r\n                </Button>\r\n               \r\n            </form> \r\n              \r\n            </div>\r\n\r\n        );\r\n }\r\n\r\n\r\n\r\n }\r\nexport default withStyles(styles)(FormOfTeam);","import { withStyles } from \"@material-ui/core/styles\";\r\nimport React, { PureComponent } from 'react';\r\nimport store from '../store';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport axios from 'axios';\r\nimport { FAB_WITH_DATA,FAB } from '../actions/types';\r\nimport FormOfTeam from './FormOfTeam';\r\nconst styles = theme => ({\r\n    root: {\r\n        minWidth: 345,\r\n        maxWidth: 400,\r\n        margin:theme.spacing(2.5),\r\n       \r\n      },\r\n      media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n      },\r\n      expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n          duration: theme.transitions.duration.shortest,\r\n        }),\r\n      },\r\n      expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n      },\r\n      avatar: {\r\n        backgroundColor: red[500],\r\n      },\r\n      paragraph:{\r\n          paddingLeft:theme.spacing(7.8),\r\n          wordWrap:'break-word',\r\n      },\r\n});\r\n\r\nconst tokenConfig = getState => {\r\n  // console.log(\"getstatteeeeeslatl\",getState())\r\n   // Get token from localstorage\r\n   const token = getState().auth.token;\r\n\r\n   // Headers\r\n   const config = {\r\n       headers: {\r\n          'Content-Type': 'application/json'\r\n       }\r\n   }\r\n\r\n   // If token, add to headers\r\n   if(token) {\r\n      config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n   }\r\n\r\nreturn config;\r\n}\r\nclass TeamCard extends React.Component {\r\n    constructor(props) {\r\n        super(props); \r\n        //this.handleExpandClick = this.handleExpandClick.bind(this);\r\n        this.deleteIcon = this.deleteIcon.bind(this);\r\n        this.handleClickOpen = this.handleClickOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.edit = this.edit.bind(this);\r\n        this.state={expanded:false,UpperCase:'',open:false,isDelete:false,form:false};\r\n        let strName=this.props.first_name.toUpperCase();\r\n        this.props.first_name !== ''?this.state.UpperCase=this.props.first_name.toUpperCase()[0]:this.state.UpperCase=\"\";\r\n    }\r\n    handleClose(){\r\n      this.setState((prevState) => ({open:!prevState.open}));\r\n      const { password, ReturnPassword,Role,Email,first_name,last_name } = this.state;\r\n      const body = JSON.stringify({first_name:first_name,last_name:last_name,role:Role,email:Email, password:password });\r\n      axios.delete(\"/delete/\"+this.props.id, tokenConfig(store.getState))\r\n      .then((res)=> {\r\n        this.setState({isDelete:true});});\r\n          //  this.props.arr=temp;\r\n    }\r\n    handleClickOpen(){\r\n      this.setState((prevState) => ({open:!prevState.open}));\r\n    }\r\n    deleteIcon(){\r\n\r\n    }\r\n    // handleExpandClick(){\r\n    //       this.setState((prevState) => ({expanded:!prevState.expanded}));\r\n    // }\r\n\r\n    edit(){\r\n      let res={first_name:this.props.first_name,\r\n        last_name:this.props.last_name,\r\n        Role:this.props.role,\r\n        Email:this.props.mail,\r\n        upDate:true\r\n      }\r\n       \r\n    store.dispatch({\r\n        type:FAB_WITH_DATA,\r\n        payload:res\r\n      })\r\n     // this.state.form=true;\r\n    }\r\n\r\n    render()\r\n    {\r\n          // const colors = ['#ff0000', '#00ff00', '#0000ff'];\r\n          // const random_color = colors[Math.floor(Math.random() * colors.length)];\r\n          //console.log(this.props);\r\n          if(this.state.form===false){\r\n            \r\n              return (\r\n                this.state.isDelete===false?\r\n                (<Card className={this.props.classes.root}>\r\n                  <CardHeader\r\n                    avatar={\r\n                      <Avatar aria-label=\"recipe\" className={this.props.classes.avatar}>\r\n                        {this.state.UpperCase}\r\n                      </Avatar>\r\n                    }\r\n                action={\r\n                  <IconButton \r\n                  aria-label=\"share\"\r\n                  variant=\"outlined\" \r\n                  //color=\"primary\" \r\n                  onClick={this.edit}\r\n                  size=\"small\"\r\n                    //onClick={this.handleExpandClick}\r\n                  \r\n                    >\r\n                        <EditIcon />\r\n                  </IconButton>\r\n                    }\r\n                    title={this.props.first_name+' '+this.props.last_name}\r\n                    subheader={this.props.role}\r\n                  />\r\n                \r\n                  <CardContent>\r\n                    <Typography paragraph className={this.props.classes.paragraph}>\r\n                    Email:{this.props.mail}\r\n                    </Typography>\r\n                    <Typography paragraph className={this.props.classes.paragraph}>\r\n                  {/* number:0549494949*/}\r\n                    </Typography>\r\n      \r\n                  </CardContent>\r\n      \r\n                  <CardActions disableSpacing>\r\n                  \r\n                <IconButton \r\n                aria-label=\"share\"\r\n                variant=\"outlined\" \r\n                //color=\"primary\" \r\n                onClick={this.handleClickOpen}\r\n                  //onClick={this.handleExpandClick}\r\n                color='secondary'\r\n                  >\r\n                      <DeleteIcon />\r\n                </IconButton>\r\n              \r\n                <Dialog\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n                >\r\n      \r\n                <DialogContent>\r\n                  <DialogContentText id=\"alert-dialog-description\">\r\n                  Are you sure you want to delete a user from the system?\r\n                  </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={this.handleClickOpen} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n                  <Button onClick={this.handleClose} color=\"secondary\" autoFocus>\r\n                    Delete\r\n                  </Button>\r\n                </DialogActions>\r\n                </Dialog>\r\n                {/*\r\n                    <IconButton\r\n                      className={clsx(this.props.classes.expand, {\r\n                        [this.props.classes.expandOpen]: this.state.expanded,\r\n                      })}\r\n                      onClick={this.handleExpandClick}\r\n                      aria-expanded={this.state.expanded}\r\n                      aria-label=\"show more\"\r\n                    >\r\n                      <ExpandMoreIcon />\r\n                    </IconButton>\r\n                    */}\r\n                  </CardActions>\r\n      \r\n      \r\n                  {/*<Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\r\n                    <CardContent>\r\n                      <Typography paragraph>\r\n                        Heat\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </Collapse>*/}\r\n                </Card>)\r\n          :<div></div>\r\n              \r\n      \r\n      \r\n        );\r\n            \r\n          }\r\n        //   else{\r\n        //     return(\r\n        //       <FormOfTeam \r\n        //       first_name={this.props.first_name} \r\n        //       last_name={this.props.last_name} \r\n        //       Role={this.props.Role} \r\n        //       Email={this.props.Email}\r\n        //       updete={true}\r\n        //       ></FormOfTeam>\r\n        //     )\r\n        //   }\r\n    \r\n        }\r\n    \r\n}\r\n\r\nexport default withStyles(styles)(TeamCard);","\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport React, { PureComponent } from 'react';\r\nimport store from '../store';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {REGISTER_SUCCESS,REGISTER_FAIL} from '../actions/types';\r\nimport {returnErrors}  from '../actions/errorActions';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport TeamCard from './TeamCard';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { ContactsOutlined } from \"@material-ui/icons\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { FAB } from '../actions/types';\r\nimport FormOfTeam from './FormOfTeam';\r\nimport {connect} from 'react-redux';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport axios from 'axios';\r\nconst styles = theme => ({\r\n  root: {\r\n    // maxWidth: 1000,\r\n    // display: 'flex',\r\n    // flexDirection: 'row',\r\n    // flexWrap:'warp',\r\n    //justifyContent:'space-around', \r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexFlow: 'row wrap',\r\n    maxWidth:1300,\r\n    justifyContent:'space around'\r\n\r\n    },\r\n    field:{\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      Width:150,\r\n      maxWidth:150,\r\n    \r\n      justifyContent:'space around',\r\n      marginTop:theme.spacing(0),\r\n      marginLeft:theme.spacing(55.5),\r\n    },\r\n    input:{\r\n      paddingTop:theme.spacing(2),\r\n      paddingLeft:theme.spacing(-4)\r\n    },\r\n    paragraph:{\r\n        paddingLeft:theme.spacing(7.8)\r\n    },\r\n    fab:{\r\n      color:'#fff',\r\n      //cursor: 'pointer',\r\n      border:'none',\r\n      outline: 'none',\r\n      outlineOffset: 'none',\r\n      marginLeft:theme.spacing(4),\r\n      marginTop:theme.spacing(4)\r\n    },\r\n    button:{\r\n      marginTop:theme.spacing(6)\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    msg:{\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n  },\r\n});\r\nconst tokenConfig = getState => {\r\n  // console.log(\"getstatteeeeeslatl\",getState())\r\n   // Get token from localstorage\r\n   const token = getState().auth.token;\r\n\r\n   // Headers\r\n   const config = {\r\n       headers: {\r\n          'Content-Type': 'application/json'\r\n       }\r\n   }\r\n\r\n   // If token, add to headers\r\n   if(token) {\r\n      config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n   }\r\n\r\nreturn config;\r\n}\r\nclass Team extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleExpandClick = this.handleExpandClick.bind(this);\r\n        this.ClickFab = this.ClickFab.bind(this);\r\n        // this.handleClose = this.handleClose.bind(this);\r\n        // this.signIn = this.signIn.bind(this);\r\n       // this.handleInputChange = this.handleInputChange.bind(this);\r\n        // this.handleClickShowPassword = this.handleClickShowPassword.bind(this);\r\n        // this.handleMouseDownPassword = this.handleMouseDownPassword.bind(this);\r\n        // this.handleClickShowPasswordReturn = this.handleClickShowPasswordReturn.bind(this);\r\n        // this.handleMouseDownPasswordReturn = this.handleMouseDownPasswordReturn.bind(this);\r\n        this.initTeam = this.initTeam.bind(this);\r\n       // this.handleCloseAlert = this.handleCloseAlert.bind(this);\r\n        this.state=\r\n        {\r\n          expanded:false,\r\n          fab:false,\r\n          first_name:'',\r\n          last_name:'',\r\n          Role:'',\r\n          Email:'',\r\n          Password:'',\r\n          ReturnPassword:'',\r\n          showPasswordReturn:'password',\r\n          showPassword:'password',\r\n          errPassword:false,\r\n          saveCard:false,\r\n          Team:[],\r\n          counter:0,\r\n          err_first_name:false,\r\n          err_last_name:false,\r\n          err_Role:false,\r\n          err_Email:false,\r\n          err_Password:false,\r\n          no_add_card:false,\r\n          \r\n        };\r\n        this.initTeam();\r\n        store.dispatch({\r\n          type:FAB,\r\n          payload:false\r\n        })\r\n    }\r\n\r\n    initTeam(){\r\n      axios.get('/get_users',tokenConfig(store.getState))\r\n      .then((res) => { \r\n       \r\n        this.setState({Team:res.data});\r\n      })\r\n      .catch(err => {\r\n          console.log(err);\r\n  \r\n         });\r\n   \r\n      \r\n    }\r\n\r\n    handleExpandClick(){\r\n          this.setState((prevState) => ({expanded:!prevState.expanded}));\r\n    }\r\n \r\n    ClickFab(){\r\n      this.setState((prevState) => ({\r\n      fab:!prevState.fab,password:'',\r\n      first_name:'',\r\n      lastName:'',\r\n      Role:'',\r\n      Email:'',\r\n      Password:'',\r\n      ReturnPassword:'',}));\r\n\r\n      store.dispatch({\r\n        type:FAB,\r\n        payload:true\r\n      })\r\n      this.forceUpdate();\r\n\r\n    \r\n    }\r\n   \r\n    componentWillReceiveProps(nextProps,nextState) {\r\n     // console.log(\"componentWillReceiveProps\")\r\n      //  console.log(this.props.fab,\"this.props.fab\")\r\n       // console.log(\"nextProps.fab\",nextProps.fab)\r\n \r\n      if(nextProps.fab!==this.props.fab){\r\n        this.forceUpdate();\r\n        //console.log(\"if\")\r\n\r\n    }\r\n\r\n  }\r\n     \r\n    render()\r\n   \r\n    {\r\n      \r\n      if(store.getState().fab.fab === false){\r\n\r\n          return(\r\n\r\n            <div>\r\n          \r\n              \r\n              <div className={this.props.classes.msg}>\r\n                <Snackbar open={this.state.saveCard} autoHideDuration={6000} onClose={this.handleClose}>\r\n                    <Alert onClose={this.handleClose} severity=\"success\">\r\n                    The system added  <strong>a new staff member   </strong>\r\n                    </Alert>\r\n                    </Snackbar>\r\n                </div>\r\n\r\n                <div className={this.props.classes.msg}>\r\n                <Snackbar open={this.state.no_add_card} autoHideDuration={6000} onClose={this.handleClose}>\r\n                    <Alert onClose={this.handleClose} severity=\"error\">\r\n                    The system   <strong> not added a new staff member   </strong>\r\n                    </Alert>\r\n                    </Snackbar>\r\n                </div>\r\n               \r\n                <div className={this.props.classes.root}> \r\n                {\r\n                \r\n                  this.state.Team.map((item,arr)=>{\r\n                  if(this.state.Team.length !== 0){ \r\n                    \r\n                    return <TeamCard  arr={arr} first_name={item.first_name}  last_name={item.last_name} role={item.role} mail={item.email} id={item._id}/>\r\n                  }\r\n                  \r\n                })\r\n              }\r\n              </div>\r\n              <Fab color=\"primary\" aria-label=\"add\" className={this.props.classes.fab} onClick={this.ClickFab}>\r\n              <AddIcon />\r\n            </Fab>\r\n           </div>\r\n          );\r\n\r\n      }\r\n\r\n      else\r\n      {\r\n       \r\n        return(\r\n          <div>\r\n          <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n       \r\n          onClick={()=>{store.dispatch({\r\n            type:FAB,\r\n            payload:false\r\n          })}}\r\n          className={this.props.classes.button}\r\n          startIcon={<ArrowBackIcon />}\r\n        >\r\n          back\r\n        </Button>\r\n         <FormOfTeam first_name={store.getState().fab.details.first_name} \r\n         last_name={store.getState().fab.details.last_name} \r\n         Role={store.getState().fab.details.Role} \r\n         Email={store.getState().fab.details.Email}\r\n        ></FormOfTeam>\r\n         </div>\r\n        )\r\n      }\r\n   \r\n    \r\n  }}\r\n\r\n\r\n  const mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        fab: state.fab,\r\n      \r\n    }\r\n}\r\n  export default connect(mapStateToProps)(withStyles(styles)(Team));\r\n\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nimport Graph from './Component/Graph';\r\nimport SearchTime from './Component/SearchTime';\r\nimport Table from './Component/Table';\r\nimport MinionCard from './Component/MinionCard';\r\nimport { saltReturns } from './actions/date';\r\n\r\nimport store from './store';\r\nimport { Logout } from './Component/auth/Logout';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SimCardIcon from '@material-ui/icons/SimCard';\r\n\r\nimport SaltStack from './Component/SaltStack';\r\nimport SearchTimeGraph from './Component/SearchTimeGraph';\r\nimport CurrentMonth from './Component/CurrentMonth';\r\n\r\nimport CurrentYear from './Component/CurrentYear';\r\nimport LastThreeMonths from './Component/LastThreeMonths';\r\nimport Team from './Component/Team';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nimport {\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListSubheader\r\n}from '@material-ui/core/';\r\n\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport { listMinions } from './actions/date';\r\n //while(store.getState().saltReturns.saltReturns===null);\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    paddingRight: theme.spacing(3.5),\r\n    paddingTop:theme.spacing(2),\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  table: {\r\n    // marginLeft:theme.spacing(0),\r\n    // marginTop:theme.spacing(4),\r\n    paddingRight: 3.5,\r\n    paddingTop:1,\r\n    paddingLeft:1,\r\n    paddingBottom: 3,\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  \r\n  },\r\n  fixedHeight: {\r\n    height: 363,\r\n  },\r\n  fixedHeightFirst:{\r\n    marginTop:theme.spacing(2),\r\n    height: 235,\r\n  },\r\n  fixedHeightTow:{\r\n   // marginTop:theme.spacing(2),\r\n    height: 113,\r\n  },\r\n  Logout:{\r\n   \r\n  },\r\n  AccountCircleIcon:{\r\n  \r\n  },\r\n  NotificationsIcon:{\r\n    display:'flex',\r\n    justifyContent:'space-between',\r\n    width:43\r\n  }\r\n});\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      //console.log(store.getState(),\"store from dashboard 1\");\r\n      //store.dispatch(saltReturns());\r\n  \r\n     // store.dispatch(listMinions());\r\n      //console.log(store.getState(),\"store from dashboard 2\");\r\n      this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\r\n      this.handleDrawerClose = this.handleDrawerClose.bind(this);\r\n      this.SelectMenu = this.SelectMenu.bind(this);\r\n      this.state={open:true,menu:\"Dashboard\"};\r\n      //console.log(store.getState(),\"store.getState()\")\r\n  }\r\n  \r\n \r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({open:true});\r\n  };\r\n  handleDrawerClose = () => {\r\n    this.setState({open:false});\r\n  };\r\n \r\n  SelectMenu = (str) => {\r\n    this.setState({menu:str});\r\n  };\r\n  render(){  \r\n    const fixedHeightPaper = clsx(this.props.classes.paper, this.props.classes.fixedHeight);\r\n    const fixedHeightPaperFirst = clsx(this.props.classes.paper, this.props.classes.fixedHeightFirst);\r\n    const fixedHeightPaperTow = clsx(this.props.classes.paper, this.props.classes.fixedHeightTow);\r\n    \r\n    if(this.state.menu==='Dashboard')\r\n    {\r\n      return (\r\n        <div className={this.props.classes.root}>\r\n    \r\n          <CssBaseline />\r\n          <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n    \r\n            <Toolbar className={this.props.classes.toolbar}>\r\n          \r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={this.handleDrawerOpen}\r\n                className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n              >\r\n    \r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n                Dashboard\r\n              </Typography>\r\n              \r\n             \r\n\r\n          \r\n\r\n                <Logout />\r\n             \r\n            \r\n            \r\n         \r\n    \r\n            </Toolbar>\r\n          </AppBar>\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            classes={{\r\n              paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n            }}\r\n            open={this.state.open}\r\n          >\r\n            <div className={this.props.classes.toolbarIcon}>\r\n              <IconButton onClick={this.handleDrawerClose}>\r\n                <ChevronLeftIcon />\r\n              </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n    \r\n            <ListItem button\r\n            onClick={()=>{this.SelectMenu('Dashboard')}}\r\n            >\r\n            <ListItemIcon>\r\n              <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dashboard\" />\r\n          </ListItem>\r\n          <ListItem button\r\n          onClick={()=>{this.SelectMenu('Commands')}}\r\n          >\r\n            <ListItemIcon>\r\n            <SimCardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Commands\" />\r\n          </ListItem>\r\n          <ListItem button\r\n          onClick={()=>{this.SelectMenu('Team')}}\r\n          >\r\n            <ListItemIcon>\r\n              <PeopleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Team\" />\r\n          </ListItem>\r\n         \r\n            </List>\r\n            <Divider />\r\n            <ListSubheader inset>Saved reports</ListSubheader>\r\n            <List>\r\n            <ListItem button   onClick={()=>{this.SelectMenu('Current month')}}>\r\n            <ListItemIcon>\r\n              <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Current month\" />\r\n          </ListItem>\r\n          <ListItem button   onClick={()=>{this.SelectMenu('Last three months')}}>\r\n            <ListItemIcon>\r\n              <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Last three months\" />\r\n          </ListItem>\r\n          <ListItem button   onClick={()=>{this.SelectMenu('Current year')}}>\r\n            <ListItemIcon>\r\n              <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Current year\" />\r\n          </ListItem>\r\n            \r\n            \r\n            \r\n            </List>\r\n          </Drawer>\r\n          <main className={this.props.classes.content}>\r\n            <div className={this.props.classes.appBarSpacer} />\r\n            <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n              <Grid container spacing={3}>\r\n                {/* Graph */}\r\n                <Grid item xs={12} md={8} lg={9}>\r\n                  <Paper className={fixedHeightPaper}>\r\n                    <Graph />\r\n                  </Paper>\r\n                </Grid>\r\n                {/* Recent SearchTime */}\r\n                <Grid item xs={12} md={4} lg={3}>\r\n                <Paper className={fixedHeightPaperTow}>\r\n                    < SearchTimeGraph />\r\n                  </Paper>\r\n                  <Paper className={fixedHeightPaperFirst}>\r\n                    <SearchTime />\r\n                  </Paper>\r\n                  \r\n                </Grid>\r\n                {/* Recent Table */}\r\n                <Grid item xs={20}>\r\n                  <div className={this.props.classes.paper}>\r\n                    <Table />\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n       \r\n    \r\n          </main>\r\n    \r\n        </div>\r\n      );\r\n    }\r\n      else if (this.state.menu==='Commands'){\r\n\r\n        return (\r\n          <div className={this.props.classes.root}>\r\n      \r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n      \r\n            <Toolbar className={this.props.classes.toolbar}>\r\n          \r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={this.handleDrawerOpen}\r\n              className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n            >\r\n  \r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n            Commands\r\n            </Typography>\r\n            \r\n           \r\n\r\n           \r\n\r\n              <Logout />\r\n           \r\n          \r\n          \r\n       \r\n  \r\n          </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n              variant=\"permanent\"\r\n              classes={{\r\n                paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n              }}\r\n              open={this.state.open}\r\n            >\r\n              <div className={this.props.classes.toolbarIcon}>\r\n                <IconButton onClick={this.handleDrawerClose}>\r\n                  <ChevronLeftIcon />\r\n                </IconButton>\r\n              </div>\r\n              <Divider />\r\n              <List>\r\n      \r\n              <ListItem button\r\n              onClick={()=>{this.SelectMenu('Dashboard')}}\r\n              >\r\n              <ListItemIcon>\r\n                <DashboardIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Dashboard\" />\r\n            </ListItem>\r\n            <ListItem button\r\n            onClick={()=>{this.SelectMenu('Commands')}}\r\n            >\r\n              <ListItemIcon>\r\n                <SimCardIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Commands\" />\r\n            </ListItem>\r\n            <ListItem button\r\n            onClick={()=>{this.SelectMenu('Team')}}\r\n            >\r\n              <ListItemIcon>\r\n                <PeopleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Team\" />\r\n            </ListItem>\r\n           \r\n              </List>\r\n              <Divider />\r\n\r\n              <ListSubheader inset>Saved reports</ListSubheader>\r\n\r\n              <List>\r\n              <ListItem button   onClick={()=>{this.SelectMenu('Current month')}}>\r\n              <ListItemIcon>\r\n                <AssignmentIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Current month\" />\r\n            </ListItem>\r\n            <ListItem button   onClick={()=>{this.SelectMenu('Last three months')}}>\r\n              <ListItemIcon>\r\n                <AssignmentIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Last three months\" />\r\n            </ListItem>\r\n            <ListItem button   onClick={()=>{this.SelectMenu('Current year')}}>\r\n              <ListItemIcon>\r\n                <AssignmentIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Current year\" />\r\n            </ListItem>\r\n              \r\n              \r\n              \r\n              </List>\r\n\r\n\r\n\r\n\r\n\r\n            </Drawer>\r\n\r\n            <main className={this.props.classes.content}>\r\n              <div className={this.props.classes.appBarSpacer} />\r\n              <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n\r\n              <Grid item  xs >\r\n              <div className={this.props.classes.table}>\r\n                  <SaltStack/>\r\n              </div>\r\n   \r\n                </Grid>\r\n\r\n              </Container>\r\n            </main>\r\n      \r\n          </div>\r\n        );}\r\n\r\n\r\n\r\n        else if (this.state.menu==='Current month'){\r\n\r\n          return (\r\n            <div className={this.props.classes.root}>\r\n        \r\n              <CssBaseline />\r\n              <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n        \r\n              <Toolbar className={this.props.classes.toolbar}>\r\n            \r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={this.handleDrawerOpen}\r\n                className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n              >\r\n    \r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n              Current month\r\n              </Typography>\r\n              \r\n             \r\n  \r\n  \r\n                <Logout />\r\n             \r\n            \r\n            \r\n         \r\n    \r\n            </Toolbar>\r\n              </AppBar>\r\n              <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                  paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n                }}\r\n                open={this.state.open}\r\n              >\r\n                <div className={this.props.classes.toolbarIcon}>\r\n                  <IconButton onClick={this.handleDrawerClose}>\r\n                    <ChevronLeftIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n        \r\n                <ListItem button\r\n                onClick={()=>{this.SelectMenu('Dashboard')}}\r\n                >\r\n                <ListItemIcon>\r\n                  <DashboardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Dashboard\" />\r\n              </ListItem>\r\n              <ListItem button\r\n              onClick={()=>{this.SelectMenu('Commands')}}\r\n              >\r\n                <ListItemIcon>\r\n                  <SimCardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Commands\" />\r\n              </ListItem>\r\n              <ListItem button\r\n              onClick={()=>{this.SelectMenu('Team')}}\r\n              >\r\n                <ListItemIcon>\r\n                  <PeopleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Team\" />\r\n              </ListItem>\r\n              \r\n                </List>\r\n                <Divider />\r\n  \r\n                <ListSubheader inset>Saved reports</ListSubheader>\r\n  \r\n                <List>\r\n                <ListItem button   onClick={()=>{this.SelectMenu('Current month')}}>\r\n                <ListItemIcon>\r\n                  <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Current month\" />\r\n              </ListItem>\r\n              <ListItem button   onClick={()=>{this.SelectMenu('Last three months')}}>\r\n                <ListItemIcon>\r\n                  <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Last three months\" />\r\n              </ListItem>\r\n              <ListItem button   onClick={()=>{this.SelectMenu('Current year')}}>\r\n                <ListItemIcon>\r\n                  <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Current year\" />\r\n              </ListItem>\r\n                \r\n                \r\n                \r\n                </List>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n              </Drawer>\r\n  \r\n              <main className={this.props.classes.content}>\r\n                <div className={this.props.classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n  \r\n                <Grid item  xs >\r\n                <div className={this.props.classes.table}>\r\n                    <CurrentMonth/>\r\n                </div>\r\n     \r\n                  </Grid>\r\n  \r\n                </Container>\r\n              </main>\r\n        \r\n            </div>\r\n          );\r\n              }\r\n\r\n              \r\n        else if (this.state.menu==='Current year'){\r\n\r\n          return (\r\n            <div className={this.props.classes.root}>\r\n        \r\n              <CssBaseline />\r\n              <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n        \r\n              <Toolbar className={this.props.classes.toolbar}>\r\n            \r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={this.handleDrawerOpen}\r\n                className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n              >\r\n    \r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n              Current year\r\n              </Typography>\r\n              \r\n             \r\n  \r\n          \r\n  \r\n                <Logout />\r\n             \r\n            \r\n            \r\n         \r\n    \r\n            </Toolbar>\r\n              </AppBar>\r\n              <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                  paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n                }}\r\n                open={this.state.open}\r\n              >\r\n                <div className={this.props.classes.toolbarIcon}>\r\n                  <IconButton onClick={this.handleDrawerClose}>\r\n                    <ChevronLeftIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n        \r\n                <ListItem button\r\n                onClick={()=>{this.SelectMenu('Dashboard')}}\r\n                >\r\n                <ListItemIcon>\r\n                  <DashboardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Dashboard\" />\r\n              </ListItem>\r\n              <ListItem button\r\n              onClick={()=>{this.SelectMenu('Commands')}}\r\n              >\r\n                <ListItemIcon>\r\n                  <SimCardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Commands\" />\r\n              </ListItem>\r\n              <ListItem button\r\n              onClick={()=>{this.SelectMenu('Team')}}\r\n              >\r\n                <ListItemIcon>\r\n                  <PeopleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Team\" />\r\n              </ListItem>\r\n             \r\n                </List>\r\n                <Divider />\r\n  \r\n                <ListSubheader inset>Saved reports</ListSubheader>\r\n  \r\n                <List>\r\n                <ListItem button   onClick={()=>{this.SelectMenu('Current month')}}>\r\n                <ListItemIcon>\r\n                  <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Current month\" />\r\n              </ListItem>\r\n              <ListItem button   onClick={()=>{this.SelectMenu('Last three months')}}>\r\n                <ListItemIcon>\r\n                  <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Last three months\" />\r\n              </ListItem>\r\n              <ListItem button   onClick={()=>{this.SelectMenu('Current year')}}>\r\n                <ListItemIcon>\r\n                  <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Current year\" />\r\n              </ListItem>\r\n                \r\n                \r\n                \r\n                </List>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n              </Drawer>\r\n  \r\n              <main className={this.props.classes.content}>\r\n                <div className={this.props.classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n  \r\n                <Grid item  xs >\r\n                <div className={this.props.classes.table}>\r\n                    <CurrentYear/>\r\n                </div>\r\n     \r\n                  </Grid>\r\n  \r\n                </Container>\r\n              </main>\r\n        \r\n            </div>\r\n          );\r\n              }\r\n\r\n             \r\n              \r\n\r\n              else if (this.state.menu==='Last three months'){\r\n\r\n                return (\r\n                  <div className={this.props.classes.root}>\r\n              \r\n                    <CssBaseline />\r\n                    <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n              \r\n                    <Toolbar className={this.props.classes.toolbar}>\r\n                  \r\n                    <IconButton\r\n                      edge=\"start\"\r\n                      color=\"inherit\"\r\n                      aria-label=\"open drawer\"\r\n                      onClick={this.handleDrawerOpen}\r\n                      className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n                    >\r\n          \r\n                      <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n                    Last three months\r\n                    </Typography>\r\n                    \r\n                   \r\n        \r\n                 \r\n        \r\n                      <Logout />\r\n                   \r\n                  \r\n                  \r\n               \r\n          \r\n                  </Toolbar>\r\n                    </AppBar>\r\n                    <Drawer\r\n                      variant=\"permanent\"\r\n                      classes={{\r\n                        paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n                      }}\r\n                      open={this.state.open}\r\n                    >\r\n                      <div className={this.props.classes.toolbarIcon}>\r\n                        <IconButton onClick={this.handleDrawerClose}>\r\n                          <ChevronLeftIcon />\r\n                        </IconButton>\r\n                      </div>\r\n                      <Divider />\r\n                      <List>\r\n              \r\n                      <ListItem button\r\n                      onClick={()=>{this.SelectMenu('Dashboard')}}\r\n                      >\r\n                      <ListItemIcon>\r\n                        <DashboardIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Dashboard\" />\r\n                    </ListItem>\r\n                    <ListItem button\r\n                    onClick={()=>{this.SelectMenu('Commands')}}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <SimCardIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Commands\" />\r\n                    </ListItem>\r\n                    <ListItem button\r\n                    onClick={()=>{this.SelectMenu('Team')}}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <PeopleIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Team\" />\r\n                    </ListItem>\r\n                  \r\n                  \r\n                      </List>\r\n                      <Divider />\r\n        \r\n                      <ListSubheader inset>Saved reports</ListSubheader>\r\n        \r\n                      <List>\r\n                      <ListItem button   onClick={()=>{this.SelectMenu('Current month')}}>\r\n                      <ListItemIcon>\r\n                        <AssignmentIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Current month\" />\r\n                    </ListItem>\r\n                    <ListItem button   onClick={()=>{this.SelectMenu('Last three months')}}>\r\n                      <ListItemIcon>\r\n                        <AssignmentIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Last three months\" />\r\n                    </ListItem>\r\n                    <ListItem button   onClick={()=>{this.SelectMenu('Current year')}}>\r\n                      <ListItemIcon>\r\n                        <AssignmentIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Current year\" />\r\n                    </ListItem>\r\n                      \r\n                      \r\n                      \r\n                      </List>\r\n        \r\n        \r\n        \r\n        \r\n        \r\n                    </Drawer>\r\n        \r\n                    <main className={this.props.classes.content}>\r\n                      <div className={this.props.classes.appBarSpacer} />\r\n                      <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n        \r\n                      <Grid item  xs >\r\n                      <div className={this.props.classes.table}>\r\n                          <LastThreeMonths/>\r\n                      </div>\r\n           \r\n                        </Grid>\r\n        \r\n                      </Container>\r\n                    </main>\r\n              \r\n                  </div>\r\n                );\r\n                    }\r\n                    \r\n              else if (this.state.menu==='Team'){\r\n\r\n                return (\r\n                  <div className={this.props.classes.root}>\r\n              \r\n                    <CssBaseline />\r\n                    <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n              \r\n                    <Toolbar className={this.props.classes.toolbar}>\r\n                  \r\n                    <IconButton\r\n                      edge=\"start\"\r\n                      color=\"inherit\"\r\n                      aria-label=\"open drawer\"\r\n                      onClick={this.handleDrawerOpen}\r\n                      className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n                    >\r\n          \r\n                      <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n                    Team\r\n                    </Typography>\r\n                    \r\n                   \r\n        \r\n                     \r\n        \r\n                      <Logout />\r\n                   \r\n                  \r\n                  \r\n               \r\n          \r\n                  </Toolbar>\r\n                    </AppBar>\r\n                    <Drawer\r\n                      variant=\"permanent\"\r\n                      classes={{\r\n                        paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n                      }}\r\n                      open={this.state.open}\r\n                    >\r\n                      <div className={this.props.classes.toolbarIcon}>\r\n                        <IconButton onClick={this.handleDrawerClose}>\r\n                          <ChevronLeftIcon />\r\n                        </IconButton>\r\n                      </div>\r\n                      <Divider />\r\n                      <List>\r\n              \r\n                      <ListItem button\r\n                      onClick={()=>{this.SelectMenu('Dashboard')}}\r\n                      >\r\n                      <ListItemIcon>\r\n                        <DashboardIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Dashboard\" />\r\n                    </ListItem>\r\n                    <ListItem button\r\n                    onClick={()=>{this.SelectMenu('Commands')}}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <SimCardIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Commands\" />\r\n                    </ListItem>\r\n                    <ListItem button\r\n                    onClick={()=>{this.SelectMenu('Team')}}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <PeopleIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Team\" />\r\n                    </ListItem>\r\n                   \r\n                      </List>\r\n                      <Divider />\r\n        \r\n                      <ListSubheader inset>Saved reports</ListSubheader>\r\n        \r\n                      <List>\r\n                      <ListItem button   onClick={()=>{this.SelectMenu('Current month')}}>\r\n                      <ListItemIcon>\r\n                        <AssignmentIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Current month\" />\r\n                    </ListItem>\r\n                    <ListItem button   onClick={()=>{this.SelectMenu('Last three months')}}>\r\n                      <ListItemIcon>\r\n                        <AssignmentIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Last three months\" />\r\n                    </ListItem>\r\n                    <ListItem button   onClick={()=>{this.SelectMenu('Current year')}}>\r\n                      <ListItemIcon>\r\n                        <AssignmentIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Current year\" />\r\n                    </ListItem>\r\n                      \r\n                      \r\n                      \r\n                      </List>\r\n        \r\n        \r\n        \r\n        \r\n        \r\n                    </Drawer>\r\n        \r\n                    <main className={this.props.classes.content}>\r\n                      <div className={this.props.classes.appBarSpacer} />\r\n                      <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n        \r\n                      <Grid item  xs >\r\n                      <div className={this.props.classes.table}>\r\n                          <Team/>\r\n                      </div>\r\n           \r\n                        </Grid>\r\n        \r\n                      </Container>\r\n                    </main>\r\n              \r\n                  </div>\r\n                );\r\n                    }\r\n              \r\n              \r\n}\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Dashboard);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass ForgotPassword extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.resetPass = this.resetPass.bind(this);\r\n    this.state = {\r\n      email: { value: null, error: false, helperText: null },\r\n      msg: null\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    reset_password: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n  \r\n\r\n  resetPass(event){\r\n    event.preventDefault();\r\n    if (this.emailInput.value === \"\") {\r\n      this.setState({\r\n        email: {\r\n          value: this.emailInput.value,\r\n          error: true,\r\n          helperText: \"Your email must be specified.\"\r\n        }\r\n      });\r\n      this.emailInput.focus();\r\n    }\r\n    else{\r\n    \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const email = this.emailInput.value\r\n        // Request body\r\n        const body = JSON.stringify({ email });\r\n    \r\n        axios.post('/forgot_password', body, config)\r\n        .then(res =>{\r\n            this.setState({ msg: res.message })\r\n            }\r\n          \r\n        )\r\n        .catch(err => {\r\n            this.setState({ msg: err.message })\r\n      \r\n        })\r\n        \r\n     }\r\n    \r\n    \r\n    }\r\n\r\n\r\n  render(){\r\n    const { classes } = this.props;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n             Enter Your Email Address\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={this.resetPass} >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              required\r\n              inputRef={input => (this.emailInput = input)}\r\n              error={this.state.email.error}\r\n              helperText={this.state.email.helperText}\r\n            />\r\n       <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n             Reset Password\r\n            </Button>\r\n\r\n            {this.state.msg  ? (\r\n            <Alert severity=\"error\">{this.state.msg}</Alert>\r\n              ) : (\r\n              null\r\n              )}\r\n             <Grid item xs>\r\n                <Link onClick={this.props.handler} variant=\"body2\">\r\n                  Back to login\r\n                </Link>\r\n              </Grid>\r\n          </form>\r\n        </div>\r\n       \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(\r\n)(withStyles(styles)(ForgotPassword))","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass ChangePasswordForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updatePass = this.updatePass.bind(this);\r\n    this.state = {\r\n      email: { value: null, error: false, helperText: null },\r\n      old_password1: { value: null, error: false, helperText: null },\r\n      old_password2: { value: null, error: false, helperText: null },\r\n      new_password: { value: null, error: false, helperText: null },\r\n      msg: null\r\n    };\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error } = this.props;\r\n    if (error !== prevProps.error) {\r\n      // Check for register error\r\n      if (error.id === 'Weak Password') {\r\n        this.setState({ msg: error.msg.msg });\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  updatePass(event){\r\n    event.preventDefault();\r\n    if (this.emailInput.value === \"\") {\r\n      this.setState({\r\n        email: {\r\n          value: this.emailInput.value,\r\n          error: true,\r\n          helperText: \"Your email must be specified.\"\r\n        }\r\n      });\r\n      this.emailInput.focus();\r\n    }\r\n    else{\r\n    \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n         const user = {\r\n              email: this.emailInput.value,\r\n              old_password1: this.old_password1.value,\r\n              old_password2: this.old_password2.value,\r\n              new_password: this.new_password.value,\r\n\r\n            };\r\n\r\n\r\n        // Request body\r\n        const body = JSON.stringify({ user });\r\n    \r\n        axios.post('/forgot_password', body, config)\r\n        .then(res =>{\r\n            this.setState({ msg: res.message })\r\n            }\r\n          \r\n        )\r\n        .catch(err => {\r\n            this.setState({ msg: err.message })\r\n      \r\n        })\r\n        \r\n     }\r\n  }\r\n\r\n\r\n  render(){\r\n    const { classes } = this.props;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Update Password\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={this.signIn} >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              required\r\n              inputRef={input => (this.emailInput = input)}\r\n              error={this.state.email.error}\r\n              helperText={this.state.email.helperText}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password1\"\r\n              label=\"Password1\"\r\n              type=\"password1\"\r\n              id=\"password1\"\r\n              autoComplete=\"current-password\"\r\n              inputRef={input => (this.passwordInput = input)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password2\"\r\n              label=\"Password2\"\r\n              type=\"password2\"\r\n              id=\"password2\"\r\n              autoComplete=\"current-password\"\r\n              inputRef={input => (this.passwordInput = input)}\r\n            />\r\n           \r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Update Password\r\n            </Button>\r\n\r\n            {this.state.msg  ? (\r\n            <Alert severity=\"error\">{this.state.msg}</Alert>\r\n              ) : (\r\n              null\r\n              )}\r\n              \r\n              <Grid item xs>\r\n                <Link onClick={this.props.handler} variant=\"body2\">\r\n                  Back to login\r\n                </Link>\r\n              </Grid>\r\n            \r\n          </form>\r\n        </div>\r\n        \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n)(withStyles(styles)(ChangePasswordForm))","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { login } from '../../actions/authActions';\r\nimport { clearErrors } from '../../actions/errorActions';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { StoreTwoTone } from '@material-ui/icons';\r\nimport store from '../../store';\r\nimport { Route } from 'react-router-dom';\r\nimport ForgotPasswordForm from './ForgotPasswordForm';\r\nimport ChangePasswordForm from './ChangePasswordForm';\r\n\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.signIn = this.signIn.bind(this);\r\n    this.handler = this.handler.bind(this);\r\n    this.state = {\r\n      email: { value: null, error: false, helperText: null },\r\n      password: { value: null, error: false, helperText: null },\r\n      msg: null\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, isAuthenticated } = this.props;\r\n    if (error !== prevProps.error) {\r\n      // Check for register error\r\n      if (error.id === 'LOGIN_FAIL') {\r\n        this.setState({ msg: error.msg });\r\n        setTimeout(function(){\r\n          this.setState({msg:null});\r\n          }.bind(this),3000);  // clear error after 3 seconds\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n   handler(){\r\n     this.setState(\r\n      {screen: 'login'}\r\n     )\r\n   }\r\n  \r\n\r\n   signIn(event){\r\n    event.preventDefault();\r\n    if (this.emailInput.value === \"\") {\r\n      this.setState({\r\n        email: {\r\n          value: this.emailInput.value,\r\n          error: true,\r\n          helperText: \"Your email must be specified.\"\r\n        }\r\n      });\r\n      this.emailInput.focus();\r\n    }\r\n    else{\r\n      const user = {\r\n        email: this.emailInput.value,\r\n        password: this.passwordInput.value,\r\n       };\r\n  \r\n      const log = this.props.login(user);\r\n      console.log(log)\r\n      this.props.history.push('/'); \r\n    }\r\n\r\n  }\r\n  \r\n\r\n  render(){\r\n    if (this.state.screen === 'forgot')\r\n      return <ForgotPasswordForm handler={this.handler}/>\r\n    if (this.state.screen === 'change')\r\n      return <ChangePasswordForm handler={this.handler}/>\r\n\r\n    const { classes } = this.props;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={this.signIn} >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              required\r\n              inputRef={input => (this.emailInput = input)}\r\n              error={this.state.email.error}\r\n              helperText={this.state.email.helperText}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              inputRef={input => (this.passwordInput = input)}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n\r\n            {this.state.msg  ? (\r\n            <Alert severity=\"error\">{this.state.msg}</Alert>\r\n              ) : (\r\n              null\r\n              )}\r\n\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link onClick={() => this.setState({screen:'forgot'})} variant=\"body2\">\r\n                {\"Reset Your Password\"}\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link onClick={() => this.setState({screen:'change'})} variant=\"body2\">\r\n                  {\"Do you want to update your password?\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { login, clearErrors }\r\n)(withStyles(styles)(LoginForm))","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport * as authActions from '../../actions/authActions'\r\nimport Dashboard from '../../Dashboard';\r\nimport LoginForm from '../auth/LoginForm';\r\nimport ChangePasswordForm from '../auth/ChangePasswordForm';\r\nimport PropTypes from 'prop-types';\r\nimport ForgotPasswordForm from '../auth/ForgotPasswordForm';\r\n\r\nclass Routes extends Component {\r\n\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n    // Similar to componentDidMount and componentDidUpdate:\r\n  render() {\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <PrivateRoute exact path=\"/\" component={Dashboard} authed={this.props.auth.isAuthenticated} />\r\n          <Route exact path=\"/login\" component={LoginForm} />\r\n\r\n\r\n        </div>\r\n      </BrowserRouter>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, authed, ...rest }) => (\r\n  // console.log(\"private routhh\", authed),\r\n  <Route\r\n    {...rest}\r\n    render={props => (\r\n      authed\r\n        ? <Component {...props} />\r\n        : <LoginForm {...props}/>\r\n    )}\r\n  />\r\n);\r\n\r\n\r\nconst mapStateToProps = state => ({ auth: state.auth });\r\n\r\nexport default connect(mapStateToProps, authActions)(Routes);\r\n","import React, { Component } from 'react';\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './App.css';\r\nimport Routes from './Component/routers/Routes';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    // console.log(\"rendering\")\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(\"dispatchhhhh from App\")\r\n    //store.dispatch(loadUser());\r\n    //console.log(store.getState(),\"state from app\");\r\n\r\n\r\n  }\r\n\r\n\r\n  static propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n  };\r\n\r\n\r\n  render() {\r\n     return (\r\n      <Routes />\r\n     )\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Dashboard from './Dashboard';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore } from 'redux';\r\nimport appReducer from './reducers/index';\r\nimport {Provider} from 'react-redux';\r\nimport App from './App';\r\nimport store from './store';\r\n\r\n// const store = createStore(appReducer);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n   , document.getElementById('root'),\r\n  );\r\n\r\n\r\n// ReactDOM.render( <Provider store={store}>\r\n//    <Dashboard />\r\n// </Provider> , document.getElementById('root'));\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();"],"sourceRoot":""}