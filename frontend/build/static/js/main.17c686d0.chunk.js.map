{"version":3,"sources":["reducers/errorReducer.js","reducers/authReducer.js","reducers/reducersDate.js","reducers/saltReturns.js","reducers/saveMinion.js","reducers/listMinions.js","reducers/graphDate.js","reducers/saltReturnsGraph.js","reducers/index.js","actions/types.js","actions/errorActions.js","actions/authActions.js","store.js","actions/date.js","Component/Title.js","Component/Graph.js","Component/SearchTime.js","Component/Table.js","Component/MinionCard.js","Component/auth/Logout.js","Component/SaltStack.js","Component/SearchTimeGraph.js","Component/CurrentMonth.js","Component/CurrentYear.js","Component/LastThreeMonths.js","Component/TeamCard.js","Component/Team.js","Dashboard.js","serviceWorker.js","Component/auth/ForgotPasswordForm.js","Component/auth/ChangePasswordForm.js","Component/auth/LoginForm.js","Component/routers/Routes.js","App.js","index.js"],"names":["initialState","msg","status","id","token","isAuthenticated","isLoading","user","start","Date","end","graphDate","saltReturns","saveMinion","listMinions","saltReturnsGraph","appReducer","combineReducers","state","action","type","payload","date","auth","localStorage","setItem","access_token","removeItem","error","returnErrors","loadUser","dispatch","getState","axios","get","tokenConfig","then","res","data","catch","err","response","register","first_name","last_name","email","password","body","JSON","stringify","post","headers","console","log","login","message","logout","config","middleWare","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","str","toDateString","MonthStart","String","parseInt","getMonth","yearStart","getFullYear","DayStart","getDate","Start","MonthEnd","yearEnd","DayEnd","End","minions","year","dayEnd","satrtCurrentMonth","satrtMonth","endtLastThreeMonths","url","concat","Title","props","Typography","component","variant","color","gutterBottom","children","createData","time","Success","Fail","amount","demoOnClick","e","parseNumber","hower","slice","Chart","dataInit","bind","flag","graphIsPrepared","tempArray","forEach","item","Array","isArray","return","dataTemp","Object","entries","map","values","result","jid","setState","forceUpdate","nextProps","this","Fragment","style","paddingLeft","toLocaleDateString","onClick","margin","top","right","bottom","left","dataKey","stroke","className","classes","root","CircularProgress","React","PureComponent","connect","withStyles","theme","display","marginLeft","spacing","marginTop","Deposits","handleDateChangeStart","handleDateChangeEnd","dateIsChanged","booleanStart","booleanEnd","utils","DateFnsUtils","Grid","container","justify","label","format","value","onChange","KeyboardButtonProps","flex","paddingTop","Button","endIcon","Component","ownProps","minet","month","day","tableIcons","Add","forwardRef","ref","AddBox","Check","Clear","Delete","Edit","DetailPanel","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ArrowDownward","ThirdStateCheck","Remove","ViewColumn","dataColumns","title","field","cellStyle","x","dataTable","Orders","selestMinion","handleClickOpen","handleClose","Returns","dialogOpen","minion","setTimeout","getTime","setHours","saltTemp","name","_id","event","rowData","filter","temp","nextState","columns","icons","onRowClick","evt","selectedRow","options","exportButton","filtering","actions","icon","tooltip","Dialog","open","onClose","aria-describedby","maxWidth","scroll","aria-labelledby","DialogTitle","fontSize","undefined","DialogContent","dividers","minWidth","TreeView","defaultCollapseIcon","defaultExpandIcon","index","TreeItem","nodeId","keys","TreeItemText","text","comment","changes","_id_","CardActions","DialogActions","autoFocus","height","flexGrow","MinionCard","commentg","defer","click","listOpen","onClickMinion","handleClickButton","prepared","prevState","bullet","Card","CardContent","Parameter","disableSpacing","IconButton","aria-label","DialogContentText","Width","root2","width","backgroundColor","palette","background","paper","nested","transform","overflow","pos","marginBottom","button","flexWrap","Logout","border","SaltStack","reason","warninginput","warningNoMinionSelected","handleClick","countSaveMinion","input","clickSave","words","split","parms_send","parms","func","tgt","salt_cmd","tokenTemp","history","unshift","key","buildRes","minionRes","push","shift","err_cmd","err_cmd_flag","clickOpen","sentCommand","getMinionsFromServer","i","length","alert","menu","arr","row","commntId","command","flexDirection","Paper","iconButton","InputBase","autoComplete","target","placeholder","inputProps","Divider","divider","orientation","size","Comments","light","paperParms","inputparms","ButtonGroup","flexFlow","MaterialTable","Alert","severity","selection","Snackbar","autoHideDuration","padding","alignItems","minionStyle","iconButtonParms","dividerParms","SearchTimeGraph","handleDateChange","CurrentMonth","time_1","mnonthDay","place","time_2","strokeDasharray","verticalAlign","wrapperStyle","lineHeight","y","fill","CurrentYear","LastThreeMonths","dataInitOne","dataInitTow","dataInitThree","nameOne","nameTow","nameThree","one","tow","three","tempMonth","monthDay","listMonth","TeamCard","deleteIcon","expanded","UpperCase","isDelete","toUpperCase","Role","ReturnPassword","Email","role","delete","colors","Math","floor","random","CardHeader","avatar","Avatar","subheader","paragraph","mail","media","expand","transition","transitions","create","duration","shortest","expandOpen","red","wordWrap","Team","handleExpandClick","ClickFab","signIn","handleInputChange","handleClickShowPassword","handleMouseDownPassword","handleClickShowPasswordReturn","handleMouseDownPasswordReturn","initTeam","fab","Password","showPasswordReturn","showPassword","errPassword","saveCard","counter","err_first_name","err_last_name","err_Role","err_Email","err_Password","no_add_card","lastName","preventDefault","strongRegex","RegExp","emailRegex","test","UnsecuredPassword","Fab","form","onSubmit","TextField","required","fullWidth","InputProps","startAdornment","InputAdornment","position","endAdornment","onMouseDown","startIcon","justifyContent","outline","outlineOffset","Dashboard","handleDrawerOpen","handleDrawerClose","SelectMenu","fixedHeightPaper","clsx","fixedHeight","fixedHeightPaperFirst","fixedHeightFirst","fixedHeightPaperTow","fixedHeightTow","CssBaseline","AppBar","appBar","appBarShift","Toolbar","toolbar","edge","menuButton","menuButtonHidden","noWrap","Drawer","drawerPaper","drawerPaperClose","toolbarIcon","List","ListItem","ListItemIcon","ListItemText","primary","ListSubheader","inset","content","appBarSpacer","Container","xs","md","lg","Graph","SearchTime","Table","table","paddingRight","mixins","zIndex","drawer","easing","sharp","leavingScreen","enteringScreen","marginRight","whiteSpace","overflowX","breakpoints","up","paddingBottom","AccountCircleIcon","NotificationsIcon","Boolean","location","hostname","match","ForgotPassword","resetPass","helperText","emailInput","focus","submit","Link","handler","secondary","main","ChangePasswordForm","updatePass","old_password1","old_password2","new_password","prevProps","inputRef","passwordInput","LoginForm","screen","ForgotPasswordForm","FormControlLabel","control","Checkbox","clearErrors","Routes","exact","path","authed","PrivateRoute","rest","render","authActions","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.17c686d0.chunk.js","sourcesContent":["import {GET_ERRORS, CLEAR_ERRORS} from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    msg: {},\r\n    status: null,\r\n    id: null\r\n}\r\n\r\n\r\nexport default function(state=initialState, action) {\r\n\r\n    switch(action.type){\r\n        case GET_ERRORS:\r\n            return {\r\n                msg: action.payload.msg,\r\n                status: action.payload.status,\r\n                id: action.payload.id\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                msg: {},\r\n                status: null,\r\n                id: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    isAuthenticated: null,\r\n    isLoading: false,\r\n    user: null,\r\n\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: action.payload\r\n            };\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', action.payload.access_token);\r\n            return {\r\n                token: action.payload.access_token,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n            };\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n        case REGISTER_FAIL:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                isLoading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"," import {DATE_SELECT} from '../actions/types';\r\n\r\n\r\n const initialState = {\r\n\r\n     start: new Date(),\r\n     end: new Date(),\r\n     graphDate: new Date(),\r\n\r\n\r\n};\r\n\r\n export default function(state=initialState, action) {\r\n//console.log(\"state\",state);\r\n  switch(action.type){\r\n      case DATE_SELECT:\r\n        return {\r\n                start:action.payload.start,\r\n                end:action.payload.end,\r\n\r\n              };\r\n\r\n\r\n        default:\r\n               return state;\r\n  }\r\n\r\n }\r\n\r\n\r\n","\r\n import {SALT_RETURNS} from '../actions/types';\r\n\r\n\r\n const initialState = {\r\n    saltReturns:null,\r\n};\r\n\r\nexport default function(state=initialState, action) { \r\n//console.log(\"SALT_RETURNS\",action.payload);\r\nswitch(action.type){\r\n    case SALT_RETURNS:\r\n    return {\r\n        saltReturns:action.payload,\r\n    };\r\n    default:\r\n        return state;\r\n }\r\n}","\r\nimport {SAVE_MINION} from '../actions/types';\r\n\r\n\r\n const initialState = {\r\n    saveMinion:[],\r\n};\r\n\r\nexport default function(state=initialState, action) { \r\n //console.log(\"SALT_RETURNS\",action.payload);\r\nswitch(action.type){\r\n    case SAVE_MINION:\r\n    return {\r\n        saveMinion:action.payload,\r\n    };\r\n    default:\r\n        return state;\r\n }\r\n}","\r\nimport {LIST_MINIONS} from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n   listMinions:[],\r\n};\r\n\r\nexport default function(state=initialState, action) { \r\n    //console.log(action.payload,'action.payload')\r\nswitch(action.type){\r\n   case LIST_MINIONS:\r\n    return {\r\n        listMinions:action.payload,\r\n    };\r\n   default:\r\n       return state;\r\n}\r\n}","import {GRAPH_DATE_SELECT} from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n\r\n    graphDate: new Date(),\r\n\r\n\r\n};\r\n\r\nexport default function(state=initialState, action) {\r\n//console.log(\"state\",state);\r\n switch(action.type){\r\n     case GRAPH_DATE_SELECT:\r\n       return {\r\n                graphDate:action.payload.graphDate,\r\n              \r\n             };\r\n\r\n\r\n       default:\r\n              return state;\r\n }\r\n\r\n}\r\n\r\n\r\n","\n import {SALT_RETURNS_GRAPH} from '../actions/types';\n\n\n const initialState = {\n    saltReturnsGraph:null,\n};\n\nexport default function(state=initialState, action) { \n\nswitch(action.type){\n    case SALT_RETURNS_GRAPH:\n    return {\n        saltReturnsGraph:action.payload,\n    };\n    default:\n        return state;\n }\n}","import {combineReducers} from 'redux';\r\nimport errorReducer from './errorReducer';\r\nimport authReducer from './authReducer';\r\nimport reducerDate from './reducersDate';\r\nimport saltReturns  from './saltReturns';\r\nimport saveMinion  from './saveMinion';\r\nimport listMinions  from './listMinions';\r\nimport graphDate  from './graphDate';\r\nimport saltReturnsGraph  from './saltReturnsGraph';\r\nconst appReducer = combineReducers({\r\n  saltReturns:saltReturns,\r\n  saltReturnsGraph:saltReturnsGraph,\r\n  date: reducerDate,\r\n  graphDate:graphDate,\r\n  auth: authReducer,\r\n  error: errorReducer,\r\n  saveMinion:saveMinion,\r\n  listMinions:listMinions,\r\n  \r\n\r\n});\r\n\r\nexport default appReducer;\r\n","export const USER_LOADING = \"USER_LOADING\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\nexport const DATE_SELECT = \"DATE_SELECT\";\r\nexport const SALT_RETURNS = \"SALT_RETURNS\";\r\nexport const SAVE_MINION = \"SAVE_MINION\";\r\nexport const LIST_MINIONS = \"LIST_MINIONS\";\r\nexport const TEAM_LIST = \"TEAM_LIST\";\r\nexport const GRAPH_DATE_SELECT = \"GRAPH_DATE_SELECT\";\r\nexport const SALT_RETURNS_GRAPH = \"SALT_RETURNS_GRAPH\";","import { GET_ERRORS, CLEAR_ERRORS} from './types';\r\n\r\n// Return errors\r\nexport const returnErrors = (msg, status, id = null) => {\r\n    // console.log(msg,status)\r\n    return {\r\n        type: GET_ERRORS,\r\n        payload: { msg, status, id}\r\n    };\r\n};\r\n\r\n// Clear errors\r\nexport const clearErrors = () => {\r\n    return {\r\n        type: CLEAR_ERRORS\r\n    };\r\n};","import axios from 'axios';\r\nimport { returnErrors } from './errorActions';\r\n\r\nimport {\r\nAUTH_ERROR,\r\nLOGIN_SUCCESS,\r\nLOGIN_FAIL,\r\nLOGOUT_SUCCESS,\r\nREGISTER_SUCCESS,\r\nREGISTER_FAIL,\r\nUSER_LOADING,\r\nUSER_LOADED\r\n} from './types';\r\n\r\n\r\n\r\n// Check token & load user\r\nexport const loadUser = () => (dispatch, getState) => {\r\n    // User loading\r\n    dispatch({ type: USER_LOADING });\r\n    axios\r\n      .get('/auth/user', tokenConfig(getState))\r\n      .then(res =>\r\n        dispatch({\r\n          type: USER_LOADED,\r\n          payload: res.data\r\n        })\r\n      )\r\n      .catch(err => {\r\n        if(err.response){\r\n            dispatch(returnErrors(err.response.data, err.response.status));\r\n            dispatch({\r\n                type: AUTH_ERROR\r\n              });\r\n        }\r\n      });\r\n  };\r\n\r\n\r\nexport const register = ({ first_name, last_name, email, password }) => dispatch => {\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    // Request body\r\n    const body = JSON.stringify({first_name, last_name, email, password });\r\n     \r\n    axios.post('/register', body, config)\r\n    .then(res => dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data\r\n    }))\r\n    .catch(err => {\r\n        console.log(err)\r\n        dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        })\r\n    })\r\n}\r\n\r\nexport const login = ({ email, password }) => dispatch => {\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    // Request body\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    axios.post('/auth', body, config)\r\n    .then(res => dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n            \r\n    }))\r\n    .catch(err => {\r\n        dispatch(returnErrors(err.response.data.message, err.response.status, 'LOGIN_FAIL'));\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    })\r\n}\r\n\r\n\r\n// Logout User\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT_SUCCESS\r\n    })\r\n  };\r\n\r\n  \r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n       // Get token from localstorage\r\n       const token = getState().auth.token;\r\n  \r\n       // Headers\r\n       const config = {\r\n           headers: {\r\n               \"Content-type\": \"application/json\"\r\n           }\r\n       }\r\n   \r\n       // If token, add to headers\r\n       if(token) {\r\n          config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n       }\r\n\r\n    return config;\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nimport authReducer from './reducers/authReducer';\r\nimport { loadUser } from './actions/authActions';\r\n\r\nconst initialState = {};\r\n\r\nconst middleWare = [thunk];\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeEnhancers(applyMiddleware(...middleWare))\r\n);\r\n\r\n// store.dispatch(loadUser());\r\nexport default store;","import axios from 'axios';\r\nimport store from '../store'\r\n import { DATE_SELECT, SALT_RETURNS,LIST_MINIONS,TEAM_LIST,GRAPH_DATE_SELECT,SALT_RETURNS_GRAPH} from './types';\r\n import data from '../Component/test.json';\r\n // Date is select\r\n export const dateSelect = (start , end) => {\r\n\r\n     return  {\r\n                 type: DATE_SELECT,\r\n                 payload:{start,end}\r\n              };\r\n     // console.log(\"start \",start);\r\n     // console.log(\"end \",end);\r\n\r\n }\r\n export const grapgDateSelect = (graphDate) => {\r\n\r\n    return  {\r\n                type: GRAPH_DATE_SELECT,\r\n                payload:{graphDate}\r\n             };\r\n    // console.log(\"start \",start);\r\n    // console.log(\"end \",end);\r\n\r\n}\r\n export const listMinions =  () => (dispatch, getState) => {\r\n\r\n    axios.get('/get_connected_minions',tokenConfig(getState))\r\n    .then((res) => {\r\n            let minions=[];\r\n            for(let i=0;i<res.data.result.length;i++){\r\n               let minion={name:res.data.result[i]};\r\n               minions.push(minion);\r\n            }\r\n            //console.log(minions,\"minions\");   \r\n            store.dispatch({\r\n                type: TEAM_LIST,\r\n                payload: minions\r\n            });\r\n    })\r\n    .catch(err => {\r\n        console.log(err,\"err get_connected_minions\");\r\n\r\n       });\r\n    // console.log(\"start \",start);\r\n    // console.log(\"end \",end);\r\n\r\n}\r\nexport const teamList =  () => (dispatch, getState) => {\r\n\r\n    axios.get('/get_users',tokenConfig(getState))\r\n    .then((res) => { \r\n            store.dispatch({\r\n                type: TEAM_LIST,\r\n                payload: res.data\r\n            });\r\n    })\r\n    .catch(err => {\r\n        console.log(err);\r\n\r\n       });\r\n    // console.log(\"start \",start);\r\n    // console.log(\"end \",end);\r\n\r\n}\r\n//  // Clear date\r\n//   export const saltReturns =  () => (dispatch, getState) => {\r\n\r\n//     const time =new Date().toDateString();\r\n//     let Month= String(parseInt(store.getState().date.start.getMonth()));\r\n//     Month=parseInt(Month)<10?\"0\"+Month:Month;\r\n//     let year=String(store.getState().date.start.getFullYear());\r\n\r\n\r\n//     let startYear=new Date(year,Month,store.getState().date.start.getDate());\r\n//     let endYear=store.getState().date.end;\r\n\r\n//     console.log(startYear,\"startYear\");\r\n//     console.log(endYear,\"endYear\");\r\n\r\n\r\n//  if(store.getState().auth.token !== null){   }  // console.log(\"ppppppppppppppppp\");}\r\n\r\n//    let data=[];\r\n\r\n// //  for (let index = startYear; index <= endYear; index.setFullYear(index.getFullYear() + 1)) {\r\n//     let index = startYear\r\n//     let url='/api/saltReturns/apply/'+index.getFullYear();\r\n//     console.log(\"url\" ,url);\r\n//     axios.get(url, tokenConfig(getState))\r\n//     .then((res) => {\r\n//         console.log(\"res.data\" ,res.data);\r\n//         store.dispatch({\r\n//             type: SALT_RETURNS,\r\n//             payload: res.data\r\n//         })\r\n\r\n//     })\r\n//     .catch(err => {\r\n//         console.log(err,\"error in data\");\r\n\r\n//        });\r\n//  //}\r\n\r\n// console.log(store.getState(),\"the store from date \");\r\n// };\r\n //Clear date\r\n export const saltReturns =  (str) => (dispatch, getState) => {\r\n     //console.log(\"----------------------storeeeee--------------\\n\",store)\r\n     const time =new Date().toDateString();\r\n        let MonthStart= String(parseInt(store.getState().date.start.getMonth()+1));\r\n        MonthStart=parseInt(MonthStart)<10?\"0\"+MonthStart:MonthStart;\r\n        let yearStart=String(store.getState().date.start.getFullYear());\r\n        let DayStart=store.getState().date.start.getDate();\r\n        DayStart=parseInt(DayStart)<10?\"0\"+DayStart:DayStart;\r\n        let Start=yearStart+String(MonthStart)+String(DayStart)+\"000000000000\"\r\n\r\n        let MonthEnd= String(parseInt(store.getState().date.end.getMonth())+1);\r\n        MonthEnd=parseInt(MonthEnd)<10?\"0\"+MonthEnd:MonthEnd;\r\n        let yearEnd=String(store.getState().date.end.getFullYear());\r\n        let DayEnd=store.getState().date.end.getDate()\r\n        DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n        //let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"000000000000\"\r\n        let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"235959595959\"\r\n        //  let startYear=new Date(year,Month,store.getState().date.start.getDate());\r\n        //  let endYear=store.getState().date.end;\r\n        //  let index = startYear;\r\n // if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\r\n        let minions=[];\r\n// for (let index = startYear; index <= endYear; index.setFullYear(index.getFullYear() + 1)) {\r\n   \r\n     if(str === \"CurrentYear\"){\r\n        \r\n       \r\n        let year=String(new Date().getFullYear());\r\n        let dayEnd=String(new Date(year, 12, 0).getDate());\r\n        DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n        Start= year+\"0101\"+\"000000000000\";\r\n        End= year+\"12\"+dayEnd+\"235959595959\";\r\n     }\r\n     else if(str === \"CurrentMonth\"){\r\n        \r\n       \r\n        let year=String(new Date().getFullYear());\r\n        let dayEnd=String(new Date(year, new Date().getMonth()+1, 0).getDate());\r\n        DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n        let satrtCurrentMonth=(new Date().getMonth()+1);\r\n        satrtCurrentMonth=parseInt( satrtCurrentMonth)<10?\"0\"+ satrtCurrentMonth: satrtCurrentMonth;\r\n        Start= year+satrtCurrentMonth+\"01\"+\"000000000000\";\r\n        End= year+satrtCurrentMonth+dayEnd+\"235959595959\";\r\n     }\r\n     else if(str === \"LastThreeMonths\"){\r\n        \r\n       \r\n        let year=String(new Date().getFullYear());\r\n        let dayEnd=String(new Date(year, new Date().getMonth(), 0).getDate());\r\n        DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n        let satrtMonth=new Date(2020, new Date().getMonth()-2, 1).getMonth();\r\n        satrtMonth=parseInt(satrtMonth)<10?\"0\"+satrtMonth:satrtMonth;\r\n        let endtLastThreeMonths=String(new Date().getMonth());\r\n        endtLastThreeMonths=parseInt( endtLastThreeMonths)<10?\"0\"+ endtLastThreeMonths: endtLastThreeMonths;\r\n        Start= year+satrtMonth+\"01\"+\"000000000000\";\r\n        End= year+endtLastThreeMonths+dayEnd+\"235959595959\";\r\n     }\r\n    console.log(Start,\"Start\")\r\n    console.log(End,\"End\")\r\n     let url='/api/saltReturns/apply/'+Start+\"/\"+End;\r\n     //console.log(\"url\" ,url);\r\n     axios.get(url, tokenConfig(getState))\r\n    .then((res) => {\r\n\r\n        minions=minions.concat(res.data);\r\n       // console.log(minions);\r\n       /// if(index === endYear){console.log(res,\"res \");}\r\n        store.dispatch({\r\n            type: SALT_RETURNS,\r\n            payload: minions\r\n        })\r\n        // console.log(res,\"res\");\r\n    })\r\n    .catch(err => {\r\n        console.log(err,\"error in data\");\r\n\r\n       });\r\n   // }\r\n\r\n\r\n       //console.log(store.getState(),\"the store \");\r\n       //console.log(minions,\"minions \");\r\n};\r\n\r\n\r\nexport const saltReturnsForgraph =  (str) => (dispatch, getState) => {\r\n    //console.log(\"----------------------storeeeee--------------\\n\",store)\r\n    const time =new Date().toDateString();\r\n       let MonthStart= String(parseInt(store.getState().graphDate.graphDate.getMonth()+1));\r\n       MonthStart=parseInt(MonthStart)<10?\"0\"+MonthStart:MonthStart;\r\n       let yearStart=String(store.getState().graphDate.graphDate.getFullYear());\r\n       let DayStart=store.getState().graphDate.graphDate.getDate();\r\n       DayStart=parseInt(DayStart)<10?\"0\"+DayStart:DayStart;\r\n       let Start=yearStart+String(MonthStart)+String(DayStart)+\"000000000000\"\r\n\r\n       let MonthEnd= String(parseInt(store.getState().graphDate.graphDate.getMonth())+1);\r\n       MonthEnd=parseInt(MonthEnd)<10?\"0\"+MonthEnd:MonthEnd;\r\n       let yearEnd=String(store.getState().graphDate.graphDate.getFullYear());\r\n       let DayEnd=store.getState().graphDate.graphDate.getDate()\r\n       DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n       //let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"000000000000\"\r\n       let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"235959595959\"\r\n       //  let startYear=new Date(year,Month,store.getState().date.start.getDate());\r\n       //  let endYear=store.getState().date.end;\r\n       //  let index = startYear;\r\n// if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\r\n       let minions=[];\r\n// for (let index = startYear; index <= endYear; index.setFullYear(index.getFullYear() + 1)) {\r\n  \r\n   \r\n    //console.log(Start,\"Start\")\r\n    //console.log(End,\"End\")\r\n    let url='/api/saltReturns/apply/'+Start+\"/\"+End;\r\n    //console.log(\"url\" ,url);\r\n    axios.get(url, tokenConfig(getState))\r\n   .then((res) => {\r\n\r\n       minions=minions.concat(res.data);\r\n      // console.log(minions);\r\n     // console.log(minions,\"minions\")\r\n      /// if(index === endYear){console.log(res,\"res \");}\r\n       store.dispatch({\r\n           type: SALT_RETURNS_GRAPH,\r\n           payload: minions\r\n       })\r\n       // console.log(res,\"res\");\r\n   })\r\n   .catch(err => {\r\n       console.log(err,\"error in data\");\r\n\r\n      });\r\n  // }\r\n\r\n\r\n      //console.log(store.getState(),\"the store \");\r\n      //console.log(minions,\"minions \");\r\n};\r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n   // console.log(\"getstatteeeeeslatl\",getState())\r\n    // Get token from localstorage\r\n    const token = getState().auth.token;\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"multipart/form-data\"\r\n        }\r\n    }\r\n\r\n    // If token, add to headers\r\n    if(token) {\r\n       config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n    }\r\n\r\n return config;\r\n}\r\n\r\n\r\n\r\n\r\n// export const saltReturns =  () => (dispatch, getState) => {\r\n\r\n//     const time =new Date().toDateString();\r\n\r\n// // if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\r\n//     axios.get('/api/saltReturns/apply/2020', tokenConfig(getState))\r\n//    .then((res) => {\r\n\r\n//        // console.log(res,\"res\");\r\n//    store.dispatch({\r\n//        type: SALT_RETURNS,\r\n//        payload: res.data\r\n//    })})\r\n//    .catch(err => {\r\n//        console.log(err,\"error in data\");\r\n\r\n//       });\r\n\r\n//       console.log(store.getState(),\"the store \");\r\n// };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};","import React from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {dateSelect} from '../actions/date';\r\nimport { LineChart,\r\n         Line,\r\n         XAxis,\r\n         YAxis,\r\n         Label,\r\n         ResponsiveContainer,\r\n         Tooltip,\r\n         Legend,\r\n         CartesianGrid  \r\n} from 'recharts';\r\nimport store from '../store';\r\nimport Title from './Title';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { saltReturnsForgraph } from '../actions/date';\r\nimport { Store } from '@material-ui/icons';\r\nimport axios from 'axios';\r\n\r\n\r\nconst time =(str)=>{\r\n  const year =str.slice(0,4);\r\n  const month =String(parseInt(str.slice(4,6)));\r\n  const day =str.slice(6,8);\r\n  const hower= str.slice(8,10);\r\n\r\n  const minet=str.slice(10,12);\r\n  return String(hower)+\":\"+String(minet);\r\n\r\n}\r\nfunction createData(time,Success,Fail, amount) {\r\n  return { time,Success,Fail, amount };\r\n}\r\nconst demoOnClick= (e)=>{\r\n  // if(e){if(e.activeLabel){console.log(e.activeLabel);}}\r\n};\r\nconst INIT_DATA = [\r\n  createData('00:00',0,0, 0),\r\n  createData('03:00',0,0, 0),\r\n  createData('06:00',0,0, 0),\r\n  createData('09:00',0,0, 0),\r\n  createData('12:00',0,0, 0),\r\n  createData('15:00',0,0, 0),\r\n  createData('18:00',0,0, 0),\r\n  createData('21:00',0,0, 0),\r\n  createData('24:00',0,0, 0),\r\n];\r\n\r\nconst parseNumber= (str)=>{\r\n  let hower= parseInt(str.slice(8,10));\r\n  if(hower<=3){return \"03:00\"};\r\n  if(hower<=6){return \"06:00\"};\r\n  if(hower<=9){return \"09:00\"};\r\n  if(hower<=12){return \"12:00\"};\r\n  if(hower<=15){return \"15:00\"};\r\n  if(hower<=18){return \"18:00\"};\r\n  if(hower<=21){return \"21:00\"};\r\n  if(hower<=24){return \"24:00\"};\r\n  return \"00:00\";\r\n \r\n};\r\n const tokenConfig = getState => {\r\n  // console.log(\"getstatteeeeeslatl\",getState())\r\n   // Get token from localstorage\r\n   const token = store.getState().auth.token;\r\n\r\n   // Headers\r\n   const config = {\r\n       headers: {\r\n           \"Content-type\": \"multipart/form-data\"\r\n       }\r\n   }\r\n\r\n   // If token, add to headers\r\n   if(token) {\r\n      config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n   }\r\n\r\nreturn config;\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    marginLeft: theme.spacing(50),\r\n    marginTop:theme.spacing(11),\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n});\r\n\r\n class Chart extends React.PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.dataInit = this.dataInit.bind(this);\r\n    this.state = {\r\n      graphDate: new Date(),\r\n      flag:true,\r\n      minions:null,\r\n      graphIsPrepared:true,\r\n      data:  [{ time:\"00:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"03:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"06:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"09:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"12:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"15:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"18:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"21:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"24:00\",Success:0,Fail:0, amount:0 },]\r\n  };\r\n  this.dataInit();\r\n}\r\ndataInit(){\r\n  \r\n  let MonthStart= String(parseInt(store.getState().graphDate.graphDate.getMonth()+1));\r\n  MonthStart=parseInt(MonthStart)<10?\"0\"+MonthStart:MonthStart;\r\n  let yearStart=String(store.getState().graphDate.graphDate.getFullYear());\r\n  let DayStart=store.getState().graphDate.graphDate.getDate();\r\n  DayStart=parseInt(DayStart)<10?\"0\"+DayStart:DayStart;\r\n  let Start=yearStart+String(MonthStart)+String(DayStart)+\"000000000000\"\r\n\r\n  let MonthEnd= String(parseInt(store.getState().graphDate.graphDate.getMonth())+1);\r\n  MonthEnd=parseInt(MonthEnd)<10?\"0\"+MonthEnd:MonthEnd;\r\n  let yearEnd=String(store.getState().graphDate.graphDate.getFullYear());\r\n  let DayEnd=store.getState().graphDate.graphDate.getDate()\r\n  DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n  //let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"000000000000\"\r\n  let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"235959595959\"\r\n  //  let startYear=new Date(year,Month,store.getState().date.start.getDate());\r\n  //  let endYear=store.getState().date.end;\r\n  //  let index = startYear;\r\n// if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\r\n  let minions=[];\r\n// for (let index = startYear; index <= endYear; index.setFullYear(index.getFullYear() + 1)) {\r\n\r\n\r\n//console.log(Start,\"Start\")\r\n//console.log(End,\"End\")\r\nlet url='/api/saltReturns/apply/'+Start+\"/\"+End;\r\n//console.log(\"url\" ,url);\r\naxios.get(url, tokenConfig(store.getState()))\r\n.then((res) => {\r\n  let tempArray=[\r\n    { time:\"00:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"03:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"06:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"09:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"12:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"15:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"18:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"21:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"24:00\",Success:0,Fail:0, amount:0 },\r\n  ];\r\n  minions=minions.concat(res.data);\r\n //console.log(minions,\"minions\");\r\n// console.log(minions,\"minions\")\r\n /// if(index === endYear){console.log(res,\"res \");}\r\n  this.state.minions=minions;\r\n  //console.log( this.state.minions,\" this.state.minions\");\r\n  if(this.state.minions!==null)\r\n  {\r\n        // let MonthEnd= String(parseInt(store.getState().date.end.getMonth())+1);\r\n        // MonthEnd=parseInt(MonthEnd)<10?\"0\"+MonthEnd:MonthEnd;\r\n        // let yearEnd=String(store.getState().date.end.getFullYear());\r\n        // let DayEnd=store.getState().date.end.getDate()\r\n        // DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n        // let EndStart=parseInt(yearEnd+String(MonthEnd)+String(DayEnd)+\"000000000000\");\r\n\r\n        // let End=parseInt(yearEnd+String(MonthEnd)+String(DayEnd)+\"235959595959\")\r\n  \r\n      this.state.minions\r\n    \r\n      //  .filter((item)=>{\r\n    \r\n      //     if(parseInt(item.jid)>=EndStart && parseInt(item.jid)<=End){return item}\r\n      //   })\r\n        .forEach(item => {\r\n          let res=true;\r\n        // if(item.full_ret.success === false){res=false}\r\n        // let temp =Object.entries(item.return);\r\n      //  console.log(item,\"itemitemitemitemitemitemitemitem\")\r\n          if(Array.isArray(item.return)){ res=true}\r\n          else{\r\n            // console.log(item,'item');\r\n              let dataTemp=Object.entries(item.return).map((e) => ( { [e[0]]: e[1] } ));\r\n              let flag=false;\r\n              dataTemp.forEach(item =>{\r\n                  //console.log(Object.values(item),'Object.values(item)');\r\n                  if((Object.values(item)[0].result===true)&& (flag===false)){res=true}\r\n                  else{res=false;flag=true;}\r\n              } )\r\n          }\r\n        if(parseNumber(item.jid)===\"03:00\")\r\n        { res === true ?(tempArray[1].Success++):(tempArray[1].Fail++)};\r\n        if(parseNumber(item.jid)===\"06:00\")\r\n        { res === true ?(tempArray[2].Success++):(tempArray[2].Fail++)};\r\n        if(parseNumber(item.jid)===\"09:00\")\r\n        { res === true ?(tempArray[3].Success++):(tempArray[3].Fail++)};\r\n        if(parseNumber(item.jid)===\"12:00\")\r\n        { res === true ?(tempArray[4].Success++):(tempArray[4].Fail++)};\r\n        if(parseNumber(item.jid)===\"15:00\")\r\n        { res === true ?(tempArray[5].Success++):(tempArray[5].Fail++)};\r\n        if(parseNumber(item.jid)===\"18:00\")\r\n        { res === true ?(tempArray[6].Success++):(tempArray[6].Fail++)};\r\n        if(parseNumber(item.jid)===\"21:00\")\r\n        { res === true ?(tempArray[7].Success++):(tempArray[7].Fail++);};\r\n        if(parseNumber(item.jid)===\"24:00\")\r\n        { res === true ?(tempArray[8].Success++):(tempArray[8].Fail++)};\r\n      \r\n        \r\n        });\r\n    }\r\n    //console.log(tempArray,\"tempArray\")\r\n    this.state.data=tempArray;\r\n    this.setState({data:tempArray,graphIsPrepared:true})\r\n   // console.log(this.state.data,\"this.state.data\")\r\n   this.forceUpdate();\r\n}\r\n)\r\n.catch(err => {\r\n  console.log(err,\"error in data\");\r\n\r\n });\r\n// }\r\n}\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.dataInit();\r\n    \r\n}\r\n  \r\n// shouldComponentUpdate(nextState){\r\n// console.log('shouldComponentUpdate',this.state.flag)\r\n//   if(this.state.flag===true){\r\n//     this.state.data=nextState.data;\r\n//     this.state.flag=false;\r\n  \r\n//     return false;\r\n//   }\r\n//   this.state.flag=true;\r\n//   return true;\r\n// }  \r\n\r\n\r\n\r\n \r\n  render(){\r\n   // console.log(\"render\");\r\n    //console.log(this.state,\"this.state\");\r\n   // console.log(this.state.graphIsPrepared,\"pppppppppppppppp\")\r\n    if(this.state.graphIsPrepared===true){\r\n      return(\r\n        <React.Fragment>\r\n        {/*<Title style={{paddingLeft:5}}>{(this.state.start.toLocaleDateString() === this.state.end.toLocaleDateString())?this.state.start.toLocaleDateString():this.state.start.toLocaleDateString() + ' - '+ this.state.end.toLocaleDateString()}</Title>*/}\r\n         {<Title style={{paddingLeft:5}}> {store.getState().graphDate.graphDate.toLocaleDateString()}</Title>}\r\n        <ResponsiveContainer>\r\n            <LineChart\r\n              onClick={demoOnClick}\r\n              data={ this.state.data}\r\n              margin={{top: 16,right: 16,bottom: 0,left: 24,}}>\r\n            <XAxis dataKey=\"time\" /><YAxis >{/* <Label angle={270} position=\"left\" style={{ textAnchor: 'middle' }}>(A/T)</Label>*/ }   \r\n            </YAxis>\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"Success\" stroke=\"#82ca9d\" onClick={demoOnClick}/>\r\n            <Line type=\"monotone\" dataKey=\"Fail\" stroke=\"#ff6666\" onClick={demoOnClick} />\r\n           \r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </React.Fragment>\r\n      )\r\n    }\r\n else{\r\n   return(\r\n        <div className={this.props.classes.root}>\r\n        <CircularProgress />\r\n        </div>\r\n   )\r\n }\r\n   \r\n    \r\n }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    saltReturnsGraph: state.saltReturnsGraph,\r\n    graphDate: state.graphDate \r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Chart));","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport {DATE_SELECT} from \"../actions/types\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {Typography,Button,Grid} from '@material-ui/core';\r\nimport Title from './Title';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {KeyboardDatePicker,MuiPickersUtilsProvider,DatePicker} from \"@material-ui/pickers\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\n//import DateTime from 'react-datetime';\r\nimport {dateSelect} from '../actions/date.js';\r\nimport store from '../store';\r\nimport { saltReturns } from '../actions/date';\r\n// <DatePicker\r\n// disableFuture\r\n// openTo=\"year\"\r\n// id=\"date-picker-dialog\"\r\n// margin=\"normal\"\r\n// format=\"dd/MM/yyyy\"\r\n// label=\"Start\"\r\n// views={[\"year\", \"month\", \"date\"]}\r\n// KeyboardButtonProps={{\r\n//   'aria-label': 'change date',\r\n// }}\r\n\r\n// />\r\n\r\n\r\n\r\n\r\n\r\n class Deposits extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDateChangeStart = this.handleDateChangeStart.bind(this);\r\n    this.handleDateChangeEnd = this.handleDateChangeEnd.bind(this);\r\n    this.dateIsChanged = this.dateIsChanged.bind(this);\r\n  \r\n    this.state={start:this.props.date.start , end:this.props.date.end ,date:null};\r\n  \r\n  }\r\n//   shouldComponentUpdate(nextProps, nextState) {\r\n//   return this.state.value != nextState.value;\r\n// }\r\n  handleDateChangeStart(date){\r\n    this.setState({booleanStart:true,start:date});\r\n  }\r\n    \r\n  \r\n  handleDateChangeEnd (date){\r\n   this.setState({booleanEnd:true,end:date});\r\n  }\r\n \r\n  dateIsChanged(){\r\n      let start=this.state.start;\r\n      let end=this.state.end;\r\n     \r\n      store.dispatch({\r\n        type: DATE_SELECT,\r\n        payload: {start:start,end:end}\r\n       } );\r\n       store.dispatch(saltReturns());\r\n\r\n\r\n      // console.log(\"store\",store.getState());\r\n  }\r\n \r\n  //onChange = date => this.setState({ date })\r\n \r\n  render () {\r\n    return (\r\n      <React.Fragment style={{marginTop:-5}}>\r\n        <Typography  variant=\"h4\" >\r\n\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n            <Grid container justify=\"space-around\">\r\n            <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Table Start Date\"\r\n            format=\"dd/MM/yyyy\"\r\n            value={this.state.start}\r\n            onChange={(date)=>{this.handleDateChangeStart(date)}}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n\r\n          <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"Table End Date\"\r\n          format=\"dd/MM/yyyy\"\r\n          value={this.state.end}\r\n          onChange={(date)=>{this.handleDateChangeEnd(date)}}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n      \r\n      <Typography style={{flex: 1,paddingTop:12}}>\r\n      \r\n       \r\n       \r\n        <Button\r\n        variant=\"outlined\" color=\"primary\"\r\n        onClick={this.dateIsChanged}\r\n        endIcon={ <SearchIcon>Search</SearchIcon>}\r\n      >\r\n      Search\r\n      </Button>\r\n      </Typography>\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n\r\n        </Typography>\r\n       \r\n      </React.Fragment>\r\n    );\r\n  }\r\n    \r\n}\r\n\r\n const mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    date: state.date\r\n  }\r\n}\r\nfunction matchDispatchToProps(dispatch){\r\n  return bindActionCreators({dateSelect: dateSelect}, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps)(Deposits);","import axios from 'axios';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport React, { Component } from \"react\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport MaterialTable from 'material-table';\r\nimport {SALT_RETURNS} from \"../actions/types\";\r\nimport store from '../store';\r\nimport { saltReturns } from '../actions/date';\r\nimport { forwardRef } from 'react';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n    Typography,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    AddBox,\r\n    ArrowDownward,\r\n    Check,\r\n    ChevronLeft,\r\n    ChevronRight,\r\n    Clear,\r\n    DeleteOutline,\r\n    Edit,\r\n    FilterList,\r\n    FirstPage,\r\n    LastPage,\r\n    Remove,\r\n    SaveAlt,\r\n    Search,\r\n    ViewColumn,\r\n\r\n\r\n}from '@material-ui/icons';\r\n//import data from './f.json';\r\nimport data from '../Component/test.json';\r\n\r\nconst time =(str)=>{\r\n    const hower= str.slice(8,10);\r\n    const minet=str.slice(10,12);\r\n    return String(hower)+\":\"+String(minet);\r\n\r\n}\r\n\r\nconst  date=(str)=>{\r\n    const year =str.slice(0,4);\r\n    const month =String(parseInt(str.slice(4,6)));\r\n    const day =str.slice(6,8);\r\n   \r\n    return String(day)+\"/\"+String(month)+\"/\"+String(year);\r\n\r\n}\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) =>  <Edit {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\nconst dataColumns =[\r\n    { title: 'status', field: 'status',\r\n        //type: 'boolean'\r\n        cellStyle: x=>({\r\n            color:(x==='Success')?'#208000':'#ff0000'})\r\n\r\n    },\r\n    { title: 'Name', field: 'name',\r\n    },\r\n    { title: 'Date', field: 'date' },\r\n    { title: 'Time', field: 'time',\r\n        //type: 'time'\r\n    },\r\n\r\n\r\n\r\n]\r\n\r\nconst dataTable=[]\r\nconst styles = theme => ({\r\n    root:{\r\n        height: 240,\r\n        flexGrow: 1,\r\n        maxWidth: 900,\r\n        fontSize: 20,\r\n        \r\n    },\r\n  //  TreeStyle: ,\r\n      text:{\r\n        paddingLeft: theme.spacing(6),\r\n        fontSize: 16,\r\n       \r\n\r\n      },\r\n      title:{\r\n        fontSize: 16,\r\n        paddingLeft:theme.spacing(2)\r\n      },\r\n      TreeItem:{\r\n        marginTop:theme.spacing(3.5),\r\n        flexGrow: 1,\r\n        maxWidth: 950,\r\n        fontSize: 18,\r\n      },\r\n      TreeItemText:{\r\n        fontSize: 18,\r\n      },\r\n      \r\n});\r\n//console.log(data,'cccccccccccccccccccccccccccccccccccccccccc')\r\n// const m=JSON.parse(\"'[\"+data+\"]'\");\r\nconst x=Object.entries(data[0].return).map((e) => ( { [e[0]]: e[1] } ));\r\n//console.log(data,'data');\r\n//console.log(Object.entries(data[0].return),'llll')\r\n//console.log(x,'cccccccccccccccccccccccccccccccccccccccccc')\r\nclass Orders extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.selestMinion=this.selestMinion.bind(this);\r\n        this.handleClickOpen=this.handleClickOpen.bind(this);\r\n        this.handleClose=this.handleClose.bind(this);\r\n        store.dispatch(saltReturns());\r\n\r\n        this.state = {\r\n            saltReturns: dataTable,\r\n            Returns:null,\r\n            dialogOpen:false,\r\n            minion:\"\",\r\n            data:[],\r\n            flag:false,\r\n        }\r\n       \r\n    }\r\n \r\n    componentWillMount(){\r\n       // console.log('componentWillMount');\r\n        if(store.getState().saltReturns.saltReturns!==null)\r\n        {\r\n            setTimeout(()=>{  \r\n                const start=store.getState().date.start;\r\n                let startTemp=new Date(start.getTime());\r\n            \r\n                startTemp.setHours(0,0,0);\r\n                const end=store.getState().date.end;\r\n                let endTemp=new Date(end.getTime());\r\n            \r\n            // console.log(endTemp,'new Date(end.getTime());')\r\n            // console.log(start,'store.getState().date.start;')\r\n                let saltTemp=store.getState().saltReturns.saltReturns\r\n                // .filter((item)=>{return item.full_ret.fun === \"state.apply\"})\r\n                // .filter((item)=>{\r\n                //     let str=item.jid.slice(0,4)+\"-\"+ String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\r\n                //     let time=new Date(str);\r\n                //     if(time >= startTemp && time<= endTemp){return item;}\r\n                // })\r\n                .map((item)=>{\r\n                    let res=true;\r\n                    //if(item.full_ret.success === false){res=false}\r\n                    let temp =Object.entries(item.return);\r\n                    if(Array.isArray(item.return)){ res=true}\r\n                    else{\r\n                       // console.log(item,'item');\r\n                        let dataTemp=Object.entries(item.return).map((e) => ( { [e[0]]: e[1] } ));\r\n                        let flag=false;\r\n                        dataTemp.forEach(item =>{\r\n                           // console.log(Object.values(item),'Object.values(item)');\r\n                            if((Object.values(item)[0].result===true)&& (flag===false)){res=true}\r\n                            else{res=false;flag=true;}\r\n                        } )\r\n                    }\r\n                    return {\r\n        \r\n                        status:(res=== true)?'Success':'Fail',\r\n                        name:item.minion,\r\n                        date:date(item.jid),\r\n                        id:item._id,\r\n                        time: time(item.jid),\r\n        \r\n                        // return:item.return\r\n                    };}\r\n                )\r\n            \r\n                this.setState({saltReturns:saltTemp});\r\n            // console.log(this.state.saltReturns,'setTimeout(()=>{this.setState({saltReturns:saltTemp});}, 600);');\r\n            }, 500);\r\n            //setTimeout(()=>{;}, 1000);\r\n        }\r\n    }\r\n    selestMinion(event, rowData){\r\n        console.log(\"table - 213\");\r\n        //console.log(rowData, \" equl\");\r\n        if(rowData.status==='Success'){return}\r\n        let res = store.getState().saltReturns.saltReturns\r\n            .filter((item)=>{\r\n            //if((item.full_ret.success===false) && (item._id === rowData.id))\r\n            if((item._id === rowData.id))\r\n\r\n                     { \r\n                         let temp =Object.entries(item.return);\r\n                         if(temp[0][0]===\"0\"){ \r\n                             this.setState({flag:true,data:temp[0]});\r\n                             console.log(\"table - 225\");\r\n                            }\r\n                         else{\r\n                             let res=Object.entries(item.return).map((e) => ( { [e[0]]: e[1] } ));\r\n                             this.setState({data:res})\r\n                             console.log(\"table - 230\");\r\n                             }\r\n                         this.setState({dialogOpen:true,minion:item});\r\n                         console.log(\"table - 230\");\r\n                         return item;\r\n                    }\r\n                \r\n            \r\n            })\r\n\r\n\r\n    }\r\n    handleClickOpen () {\r\n        this.setState({dialogOpen:true});\r\n    };\r\n\r\n    handleClose () {\r\n        this.setState({dialogOpen:false});\r\n    };\r\n    componentWillReceiveProps(nextProps,nextState) {\r\n        //console.log('componentWillReceiveProps');\r\n        // console.log(store.getState(),\";;;;;;;;;;\");\r\n        if(store.getState().saltReturns.saltReturns!==null)\r\n        {\r\n            setTimeout(()=>{  \r\n                const start=store.getState().date.start;\r\n                let startTemp=new Date(start.getTime());\r\n            \r\n                startTemp.setHours(0,0,0);\r\n                const end=store.getState().date.end;\r\n                let endTemp=new Date(end.getTime());\r\n            \r\n            // console.log(endTemp,'new Date(end.getTime());')\r\n            // console.log(start,'store.getState().date.start;')\r\n                let saltTemp=store.getState().saltReturns.saltReturns\r\n                // .filter((item)=>{return item.full_ret.fun === \"state.apply\"})\r\n                // .filter((item)=>{\r\n                //     let str=item.jid.slice(0,4)+\"-\"+ String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\r\n                //     let time=new Date(str);\r\n                //     if(time >= startTemp && time<= endTemp){return item;}\r\n                // })\r\n                .map((item)=>{\r\n                    let res=true;\r\n                    let temp =Object.entries(item.return);\r\n                    if(Array.isArray(item.return)){ res=true}\r\n                    else{\r\n                      //  console.log(item,'item');\r\n                        let dataTemp=Object.entries(item.return).map((e) => ( { [e[0]]: e[1] } ));\r\n                        let flag=false;\r\n                        dataTemp.forEach(item =>{\r\n                           // console.log(Object.values(item),'Object.values(item)');\r\n                            if((Object.values(item)[0].result===true)&& (flag===false)){res=true}\r\n                            else{res=false;flag=true;}\r\n                        } )\r\n                    }\r\n                    return {\r\n        \r\n                        status:(res=== true)?'Success':'Fail',\r\n                        name:item.minion,\r\n                        date:date(item.jid),\r\n                        id:item._id,\r\n                        time: time(item.jid),\r\n        \r\n                        // return:item.return\r\n                    };}\r\n                )\r\n            \r\n                this.setState({saltReturns:saltTemp});\r\n            // console.log(this.state.saltReturns,'setTimeout(()=>{this.setState({saltReturns:saltTemp});}, 600);');\r\n            }, 500);\r\n            //setTimeout(()=>{;}, 1000);\r\n        }\r\n\r\n\r\n\r\n    }\r\n    // componentWillUpdate() {\r\n  \r\n    // }\r\n    render(){\r\n\r\n        return (\r\n            <div>\r\n                <MaterialTable\r\n                    title=\"Minions Table\"\r\n                    columns={dataColumns}\r\n                    data={ this.state.saltReturns}\r\n                    icons={tableIcons}\r\n                    onRowClick={((evt, selectedRow) => this.setState({ selectedRow }))}\r\n\r\n\r\n                    options={{\r\n                        exportButton: true,\r\n                        filtering: true,\r\n\r\n                        //rowStyle: rowData => ({\r\n                        // color: (rowData.name==='su') ? '#daa9d9' : '#ff1a1a'})\r\n\r\n                    }}\r\n                    actions={[\r\n                        {\r\n\r\n                            icon: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n                            tooltip: 'View commands',\r\n                            onClick: (event, rowData) => {this.selestMinion(event, rowData)}\r\n                        }\r\n                    ]\r\n                    }\r\n                />\r\n\r\n                <Dialog\r\n                    open={this.state.dialogOpen}\r\n                    onClose={this.handleClose}\r\n\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                    maxWidth=\"lg\"\r\n                    scroll=\"paper\"\r\n                    aria-labelledby=\"confirmation-dialog-title\"\r\n                >\r\n\r\n                    <DialogTitle id=\"alert-dialog-title\">\r\n\r\n                        <Typography style={{color:\"#ff6666\",fontSize:18} }>\r\n                            {\"Failed \"}\r\n                            {this.state.minion.minion}\r\n                            {\" at date \"}\r\n                            {   (this.state.minion !== undefined )? (date(String(this.state.minion.jid))): \" \"}\r\n                            {' at hour '}\r\n                            {(this.state.minion !== undefined )? (time(String(this.state.minion.jid))): \" \"}\r\n                            {//console.log(this.state.minion,\"comment\")}\r\n                             }\r\n                        </Typography>\r\n                    </DialogTitle>\r\n\r\n\r\n                    <DialogContent dividers>\r\n                    {//if you want to chenge width with \r\n                    }\r\n                        <div style={{minWidth: 1000,}}>\r\n                            <div>\r\n                             \r\n\r\n                              \r\n                                <TreeView\r\n                                style={{\r\n                                   \r\n                                    fontSize:18,\r\n                                }}\r\n                                defaultCollapseIcon={<ExpandMoreIcon />}\r\n                                defaultExpandIcon={<ChevronRightIcon />}\r\n                                >\r\n                                 {this.state.data.map((item,index)=>{\r\n                                        if(this.state.flag===false){\r\n                                            return (\r\n                                                <Typography  className={this.props.classes.TreeItem} > \r\n                                                        <TreeItem \r\n                                                        nodeId={index} \r\n                                                        label={Object.keys(item)[0]} \r\n                                                        style={{\r\n                                                            color:(Object.values(item)[0].result===true)?'#26a852':\"#ff6666\",\r\n                                                            fontSize:18,\r\n                                                        }}\r\n                                                        className={this.props.classes.TreeItemText}> \r\n    \r\n                                                            {console.log(\"table - 394\")}\r\n                                                            \r\n                                                            <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n                                                            comment : \r\n                                                            \r\n                                                            </Typography>\r\n    \r\n                                                            <Typography color=\"textSecondary\" className={this.props.classes.text}>{(Object.values(item)[0]).comment}</Typography>\r\n    \r\n                                                            \r\n                                                            <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n                                                             changes :\r\n                                                            </Typography>\r\n    \r\n                                                            <Typography color=\"textSecondary\" className={this.props.classes.text}>{(String(Object.values(item)[0]).changes)}</Typography>\r\n    \r\n                                                            <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n                                                              _id_ : \r\n                                                            </Typography>\r\n    \r\n                                                            <Typography color=\"textSecondary\" className={this.props.classes.text}>{(Object.values(item)[0])._id_}</Typography>\r\n                                               \r\n                                                        </TreeItem>\r\n                                                    </Typography>\r\n                                                       )\r\n                                        }\r\n                                        else{\r\n                                            if(index===1){\r\n                                                return(\r\n                                                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                                                                  return : {this.state.minion.return}\r\n                                                    </Typography>\r\n                                                )\r\n                                            }\r\n                                           \r\n                                        }\r\n                                           \r\n\r\n                                 })}\r\n                                 </TreeView>\r\n                       \r\n                                <CardActions>\r\n\r\n                                </CardActions>\r\n                            </div>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n                          close\r\n                        </Button>\r\n                    </DialogActions>\r\n\r\n                </Dialog>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        saltReturns: state.saltReturns,\r\n        date: state.date\r\n    }\r\n}\r\nfunction matchDispatchToProps(dispatch){\r\n    return bindActionCreators({saltReturns: saltReturns}, dispatch);\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Orders));","import React from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport store from '../store';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport {SAVE_MINION} from \"../actions/types\";\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nconst styles = theme => ({\r\n  root: {\r\n    maxWidth: 400,\r\n    Width:400,\r\n    margin: theme.spacing(1),\r\n    marginLeft: theme.spacing(0),\r\n  },\r\n  root2: {\r\n    width: 230,\r\n    maxWidth: 360,\r\n    fontSize:12,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n    overflow:'wrap',\r\n    paddingLeft: theme.spacing(2),\r\n   // paddingTop: theme.spacing(2),\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    fontSize: 12,\r\n  },\r\n  container: {\r\n    width: 500,\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    overflow:'wrap'\r\n  },\r\n  minions:{\r\n    height: 240,\r\n    flexGrow: 1,\r\n    maxWidth: 400,\r\n  },\r\n  CardContent:{\r\n    maxWidth: 400,\r\n    width: 400,\r\n  \r\n  },\r\n  CircularProgress:{\r\n     paddingLeft: theme.spacing(20),\r\n    //paddingTop: theme.spacing(),\r\n  },\r\n  TreeItem:{\r\n    color:'#26a852',\r\n  },\r\n});\r\n\r\n\r\nclass MinionCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        \r\n        const commentg= this.props.comment;\r\n       // console.log(this.props.id,'constructor');\r\n       this.state={ \r\n          open: false,\r\n          defer: false,\r\n          click:false,\r\n          comment: commentg,\r\n          listOpen:false,\r\n          open:false,\r\n        };\r\n        this.onClickMinion = this.onClickMinion.bind(this);\r\n        this.handleClickButton = this.handleClickButton.bind(this);\r\n        this.handleClickOpen = this.handleClickOpen.bind(this);\r\n        this. handleClose = this. handleClose.bind(this);\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n      //console.log(nextProps,\"nextProps\")\r\n      if(nextProps.prepared!==this.props.prepared){\r\n\r\n      }\r\n    }\r\n    onClickMinion(){\r\n    \r\n      // console.log(store.getState(),\"store.getState() from minionCard\");\r\n    }\r\n    handleClickButton(){\r\n      this.state.listOpen=!(this.state.listOpen);\r\n  \r\n  \r\n    }\r\n    handleClickOpen(){\r\n      this.setState((prevState) => ({open:!prevState.open}));\r\n      console.log(this.state,\"stste from handleClickOpen\")\r\n    }\r\n    handleClose(){\r\n      this.setState((prevState) => ({open:!prevState.open}));\r\n      this.setState({click:true});\r\n      let array =store.getState().saveMinion.saveMinion;\r\n      \r\n     \r\n      let minions=array.filter((item)=>{\r\n        if(item.id !==this.props.id){return (item)}\r\n      });\r\n      minions=minions.map((item,index)=>{\r\n       return( {...item,id:index+1});\r\n      })\r\n      // minions.unshift(this.state.saveMinion[0]);\r\n      store.dispatch({\r\n          type: SAVE_MINION,\r\n          payload: minions\r\n      });\r\n    }\r\nrender(){\r\n  // id={item.id} minion={item.minions} comment={item.comment}\r\n    const bull = <span className={this.props.classes.bullet}>•</span>;\r\n    console.log(this.props,\"this.props\")\r\n    if(this.state.comment===''){this.state.click =true}\r\n    if(this.state.click === false && this.props.prepared===true){\r\n      return (\r\n     \r\n        <Card className={this.props.classes.root}>\r\n          <CardContent>\r\n  \r\n           \r\n              <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n              Function: {this.props.comment}\r\n              {/*this.props.fun*/}\r\n              </Typography>\r\n              <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n              Parameter: {this.props.Parameter}\r\n              {/*this.props.fun*/}\r\n              </Typography>\r\n        \r\n              <Typography variant=\"h5\" component=\"h2\" color=\"textSecondary\" >\r\n                <div>\r\n                  <div className={this.props.classes.container}>\r\n                                <TreeView\r\n                                className={this.props.classes.root}\r\n                                defaultCollapseIcon={<ExpandMoreIcon />}\r\n                                defaultExpandIcon={<ChevronRightIcon />}\r\n                              >\r\n                        <TreeItem nodeId=\"1\" label=\"See Minions\">\r\n                        {\r\n                            this.props.minion.map((item,index)=>{\r\n                             // console.log(index,\"index\")\r\n                              return(\r\n                                <TreeItem nodeId={index+2} label={item[0]} className={this.props.classes.TreeItem}>\r\n                                    <Typography  color=\"textSecondary\" >\r\n                                  <TreeItem nodeId={index+3} label={item[1]} />\r\n                                  </Typography>\r\n                                  \r\n                                </TreeItem>\r\n                            )\r\n                            })\r\n                          }\r\n                          </TreeItem>\r\n                    </TreeView>\r\n                  </div>\r\n                 </div>\r\n              </Typography>\r\n              \r\n            {/*button*/}\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n        \r\n        <IconButton \r\n        aria-label=\"share\"\r\n        variant=\"outlined\" \r\n        //color=\"primary\" \r\n        onClick={this.handleClickOpen}\r\n          //onClick={this.handleExpandClick}\r\n        color='secondary'\r\n          >\r\n              <DeleteIcon />\r\n        </IconButton>\r\n        <Dialog\r\n        open={this.state.open}\r\n        onClose={this.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        >\r\n  \r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n          Are you sure you want to delete the command from history?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button onClick={this.handleClickOpen} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n          <Button onClick={this.handleClose} color=\"secondary\" autoFocus>\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n        </Dialog>\r\n        {/*\r\n            <IconButton\r\n              className={clsx(this.props.classes.expand, {\r\n                [this.props.classes.expandOpen]: this.state.expanded,\r\n              })}\r\n              onClick={this.handleExpandClick}\r\n              aria-expanded={this.state.expanded}\r\n              aria-label=\"show more\"\r\n            >\r\n              <ExpandMoreIcon />\r\n            </IconButton>\r\n            */}\r\n          </CardActions>\r\n  \r\n        </Card>\r\n       \r\n         \r\n        );\r\n    }\r\n  \r\n      else if (this.props.prepared===false)\r\n      {\r\n        //console.log(\"props from minioncard\")\r\n        //console.log(this.props,\"props from minioncard\")\r\n        return(\r\n          <Card className={this.props.classes.root}>\r\n            \r\n            <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n              Function: {this.props.comment}\r\n              {/*this.props.fun*/}\r\n              </Typography>\r\n              <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n              Parameter: {this.props.Parameter}\r\n              {/*this.props.fun*/}\r\n              </Typography>\r\n           \r\n            <CardContent className={this.props.classes.CardContent}>\r\n              <div className={this.props.classes.CircularProgress}> <CircularProgress /></div>\r\n            \r\n            </CardContent>\r\n          </Card>\r\n        );\r\n      }\r\n      else{return(<div></div>);}\r\n}\r\n  \r\n}\r\n\r\nexport default withStyles(styles)(MinionCard);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../actions/authActions';\r\nimport PropTypes from 'prop-types';\r\nimport store from '../../store';\r\nimport Button from '@material-ui/core/Button';\r\nexport class Logout extends Component {\r\n  static propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n  };\r\n\r\n\r\n  render() {\r\n    // console.log(this.props)\r\n    return (\r\n        <Button  style={{color:'#fff',border:'none'}}  variant='outlined'  onClick={()=> store.dispatch(logout())}>\r\n          Log out\r\n        </Button>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n  null,\r\n  { logout }\r\n)(Logout);","\r\n\r\nimport React, { Component } from \"react\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport MaterialTable from 'material-table';\r\nimport { forwardRef } from 'react';\r\nimport store from '../store';\r\nimport { saveMinion } from '../actions/date';\r\nimport {SAVE_MINION} from \"../actions/types\";\r\nimport axios from 'axios';\r\nimport {\r\n    AddBox,\r\n    ArrowDownward,\r\n    Check,\r\n    ChevronLeft,\r\n    ChevronRight,\r\n    Clear,\r\n    DeleteOutline,\r\n    Edit,\r\n    FilterList,\r\n    FirstPage,\r\n    LastPage,\r\n    Remove,\r\n    SaveAlt,\r\n    Search,\r\n    ViewColumn,\r\n\r\n\r\n}from '@material-ui/icons';\r\nimport { withAlert } from 'react-alert';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport MinionCard from './MinionCard';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { returnErrors } from '../actions/errorActions';\r\nimport { listMinions } from '../actions/date';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) =>  <Edit {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst styles = theme => ({\r\n    MaterialTable:{\r\n        marginLeft: theme.spacing(12),\r\n        marginTop: theme.spacing(1),\r\n        width:450, \r\n    },\r\n    root: {\r\n      padding: '2px 4px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      width: 500,\r\n      height:70,\r\n      marginTop: theme.spacing(1)\r\n    },\r\n    paperParms:{\r\n        padding: '3px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 400,\r\n        height:50,\r\n        marginTop: theme.spacing(3)\r\n    },\r\n   \r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      marginTop: 0,\r\n      \r\n      flex: 1,\r\n    },\r\n    inputparms:{\r\n        marginLeft: theme.spacing(1),\r\n    \r\n        //width: 400,\r\n        flex: 1,\r\n    },\r\n    minionStyle:{\r\n        marginTop: theme.spacing(5),\r\n        width:200\r\n    },\r\n   \r\n    iconButton: {\r\n      padding: 10,\r\n      height:55\r\n    },\r\n    Divider: {\r\n      marginTop: theme.spacing(5),\r\n      height: 50,\r\n      margin: 4,\r\n    },\r\n    iconButtonParms: {\r\n     \r\n        padding: 10,\r\n        height: 10,\r\n        width:4,\r\n      },\r\n      dividerParms: {\r\n        marginTop: theme.spacing(5),\r\n        height: '100%',\r\n        margin: 4,\r\n      },\r\n    msg:{\r\n        width: '100%',\r\n        '& > * + *': {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n    Comments:{\r\n        marginTop: theme.spacing(4),\r\n    },\r\n   \r\n    ButtonGroup: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        \r\n        '& > *': {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n      },\r\n      button: {\r\n       //paddingRight:70,\r\n       height:50,\r\n      // width:60\r\n      },\r\n    \r\n  });\r\n\r\n\r\n\r\n \r\n\r\nclass SaltStack extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.clickOpen = this.clickOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.sentCommand = this.sentCommand.bind(this);\r\n        this.getMinionsFromServer = this.getMinionsFromServer.bind(this);\r\n        this.tokenConfig = this.tokenConfig.bind(this);\r\n        store.dispatch(listMinions());\r\n        this.state={\r\n        alert:false,\r\n        msg:false,\r\n        menu:\"Dashboard\",\r\n        open: false,\r\n        defer: false,\r\n        clickSave:false,\r\n        history:[],\r\n        input:'',\r\n        parms:\"\",\r\n        saveMinion:{},\r\n        countSaveMinion:0,\r\n        warninginput:false,\r\n        warningNoMinionSelected:false,\r\n        err_cmd:\"\",\r\n        err_cmd_flag:false,\r\n        data:[],\r\n        };\r\n        \r\n        \r\n       this.getMinionsFromServer();\r\n    }\r\n    getMinionsFromServer(){\r\n       \r\n        let tokenTemp=this.tokenConfig();\r\n      \r\n        axios.get('/get_connected_minions',tokenTemp)\r\n        .then((res) => {\r\n                let arr=[];\r\n                for(let i=0;i<res.data.result.length;i++){\r\n                   let minion={name:res.data.result[i]}\r\n                   arr.push(minion);\r\n                }             \r\n                this.setState({data:arr})\r\n        })\r\n        .catch(err => {\r\n            console.log(err,\"err get_connected_minions\");\r\n    \r\n           });\r\n        };\r\n        tokenConfig = () => {\r\n            //console.log(\"getstatteeeeeslatl\",store.getState())\r\n            // Get token from localstorage\r\n            const token = store.getState().auth.token;\r\n        \r\n            // Headers\r\n            const config = {\r\n                headers: {\r\n                    \"Content-type\": \"application/json\"\r\n                }\r\n            }\r\n        \r\n            // If token, add to headers\r\n            if(token) {\r\n               config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n            }\r\n        \r\n         return config;\r\n    };\r\n    handleClose = (event, reason) => \r\n    {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n     \r\n        this.setState({msg:false,warninginput:false,warningNoMinionSelected:false});\r\n    };\r\n\r\n    handleClick = () => \r\n    {\r\n        this.state.countSaveMinion--;\r\n        \r\n        if((this.state.input !== '')  &&  (this.state.countSaveMinion===0)){\r\n            this.state.saveMinion.prepared=false;\r\n            setTimeout(()=>{this.setState({msg:false,clickSave:false});}, 2200);\r\n            this.state.saveMinion.comment=this.state.input;\r\n\r\n            let minions =store.getState().saveMinion.saveMinion;\r\n            \r\n            const words = this.state.input.split(' ');\r\n            const parms_send=this.state.parms.split(' ');\r\n           \r\n            let res={\r\n                func:words[0],\r\n                tgt:this.state.saveMinion.minions,\r\n                salt_cmd:this.state.parms===\"\"?\"\":parms_send,\r\n            }\r\n        \r\n           this.state.saveMinion.Parameter=parms_send;\r\n            this.setState({parms:\"\"});\r\n         \r\n            const body = JSON.stringify(res);\r\n            let tokenTemp=this.tokenConfig();\r\n            this.state.history.unshift(this.state.saveMinion);\r\n            minions.unshift(this.state.saveMinion);\r\n            store.dispatch({\r\n                type: SAVE_MINION,\r\n                payload: minions\r\n            });\r\n            \r\n            axios.post('/saltstack_cmd',body, tokenTemp)\r\n            .then((res) => {\r\n                const temp=res.data.res;\r\n                const result = Object.keys(temp).map((key) => [String(key), temp[key]]);\r\n               let buildRes=[];\r\n                result.forEach(minionRes => {\r\n                    minions[0].minions.map((item)=>{\r\n                        if(minionRes[0]===item){\r\n                            buildRes.push([minionRes[0],minionRes[1]])\r\n                            item = buildRes;\r\n                        }\r\n                    \r\n                })\r\n            \r\n                });\r\n                this.state.saveMinion.prepared=true;\r\n                this.state.history.unshift(this.state.saveMinion);\r\n                minions[0].minions=buildRes;\r\n                minions.shift();\r\n                minions.unshift(this.state.saveMinion);\r\n                console.log(minions,\"minions 2\")\r\n                store.dispatch({\r\n                    type: SAVE_MINION,\r\n                    payload: minions\r\n                });\r\n                this.setState({msg:true});\r\n            })\r\n            .catch(err => {\r\n                //console.log(\"err from SaltStack\")\r\n                this.setState({err_cmd:err.response.data.message,err_cmd_flag:true})\r\n                //console.log(this.state,\"opopopopopopoo\")\r\n                setTimeout(()=>{this.setState({err_cmd_flag:false});}, 2200);\r\n                store.dispatch(returnErrors(err.response.data.message, err.response.status, 'CMD_FAIL'));\r\n                // dispatch({\r\n                //     type: LOGIN_FAIL\r\n                // })\r\n            })\r\n        \r\n          \r\n            //console.log(store.getState(),\"store from saltstack\");\r\n            \r\n        }\r\n        \r\n        if(this.state.input === ''){ \r\n            this.setState({warninginput:true});\r\n            setTimeout(()=>{this.setState({warninginput:false});}, 2200);\r\n        }\r\n        if((this.state.countSaveMinion !==0) && (this.state.countSaveMinion!==1) &&(this.state.input !== '')  ){ \r\n            this.setState({warningNoMinionSelected:true});\r\n            setTimeout(()=>{this.setState({warningNoMinionSelected:false});}, 2200);\r\n        }\r\n\r\n        this.setState({input:'',parms:\"\"});\r\n\r\n\r\n      };\r\n   \r\n    clickOpen (rowData){\r\n        //  console.log(rowData,'rowData')\r\n        this.state.countSaveMinion=0;\r\n        this.state.countSaveMinion++;\r\n        const data=rowData.map((row)=>row.name);\r\n        let commntId=(store.getState().saveMinion.saveMinion.length)+1; \r\n        this.state.saveMinion={minions:data,id:commntId,comment:'',prepared:false};\r\n       // this.getMinionsFromServer();\r\n        this.setState({alert:true,clickSave:true,});\r\n        setTimeout(()=>{this.setState({alert:false,});}, 2200);\r\n        \r\n    };\r\n\r\nsentCommand(command){\r\n        \r\n        this.state.countSaveMinion--;\r\n        if( (this.state.countSaveMinion===0)){\r\n\r\n           \r\n            this.state.saveMinion.prepared=false;\r\n\r\n           \r\n            this.state.saveMinion.comment=command;\r\n            \r\n            let minions =store.getState().saveMinion.saveMinion;\r\n            //  console.log(store.getState().saveMinion.saveMinion,\"store.getState().saveMinion.saveMinion\")\r\n           \r\n          \r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n            const words = this.state.input.split(' ');\r\n            const parms_send=this.state.parms.split(' ');\r\n           \r\n            let res={\r\n                func:command,\r\n                tgt:this.state.saveMinion.minions,\r\n                salt_cmd:this.state.parms===\"\"?\"\":parms_send,\r\n            }\r\n            this.state.saveMinion.Parameter=parms_send;\r\n            this.setState({parms:\"\"});\r\n\r\n            const body = JSON.stringify(res);\r\n            let tokenTemp=this.tokenConfig();\r\n            this.state.history.unshift(this.state.saveMinion);\r\n            minions.unshift(this.state.saveMinion);\r\n          \r\n            store.dispatch({\r\n                type: SAVE_MINION,\r\n                payload: minions\r\n            });\r\n            console.log(store.getState(),\"store.getState() first\")\r\n            axios.post('/saltstack_cmd',body, tokenTemp)\r\n            .then((res) => {\r\n                const temp=res.data.res;\r\n                const result = Object.keys(temp).map((key) => [String(key), temp[key]]);\r\n               let buildRes=[];\r\n                result.forEach(minionRes => {\r\n                    minions[0].minions.map((item)=>{\r\n                        if(minionRes[0]===item){\r\n                            buildRes.push([minionRes[0],minionRes[1]])\r\n                            item = buildRes;\r\n                        }\r\n                    \r\n                })\r\n            \r\n                });\r\n                this.state.saveMinion.prepared=true;\r\n                this.state.history.unshift(this.state.saveMinion);\r\n                minions[0].minions=buildRes;\r\n                minions.shift();\r\n                minions.unshift(this.state.saveMinion);\r\n                console.log(minions,\"minions 2\")\r\n                store.dispatch({\r\n                    type: SAVE_MINION,\r\n                    payload: minions\r\n                });\r\n                this.setState({msg:true});\r\n      \r\n\r\n            })\r\n            .catch(err => {\r\n                //console.log(\"err from SaltStack\")\r\n                //this.setState({err_cmd:err.response.data.message,err_cmd_flag:true})\r\n               \r\n                setTimeout(()=>{this.setState({err_cmd_flag:false});}, 4000);\r\n                //store.dispatch(returnErrors(err.response.data.message, err.response.status, 'CMD_FAIL'));\r\n                // dispatch({\r\n                //     type: LOGIN_FAIL\r\n                // })\r\n            })\r\n          \r\n           // console.log(this.state.history,'this.state.history')\r\n            \r\n            setTimeout(()=>{this.setState({msg:false,clickSave:false});}, 2200);\r\n         \r\n        }\r\n      \r\n        if((this.state.countSaveMinion !==0) && (this.state.countSaveMinion!==1)   ){ \r\n            this.setState({warningNoMinionSelected:true});\r\n            setTimeout(()=>{this.setState({warningNoMinionSelected:false});}, 2200);\r\n        }\r\n        this.setState({parms:\"\"});\r\n\r\n    };\r\n\r\n\r\n\r\n  render(){\r\n  \r\n    return (\r\n\r\n<div style={{display: 'flex',flexDirection: 'row',}}>\r\n\r\n<div style={{display: 'flex',flexDirection: 'column',}}>\r\n   \r\n    <Paper component=\"form\" className={this.props.classes.root}>\r\n        <IconButton className={this.props.classes.iconButton} aria-label=\"menu\">\r\n            <MenuIcon />\r\n        </IconButton>\r\n            \r\n        <InputBase\r\n        autoComplete\r\n        autoFocus='true'\r\n        value={this.state.input}\r\n        onChange={(event)=>{this.setState({input:event.target.value})}}\r\n        className={this.props.classes.input}\r\n        placeholder=\"Command Line\"\r\n        inputProps={{ 'aria-label': 'Command Line' }}\r\n        />\r\n        {\r\n            this.state.input!==\"\"?(\r\n                <div>\r\n          \r\n            <IconButton color=\"primary\" className={this.props.classes.iconButton} aria-label=\"directions\" onClick={()=>{this.setState({input:\"\"})}}>\r\n              <ClearIcon />\r\n            </IconButton>\r\n            </div>\r\n            )\r\n            :(<div></div>)\r\n        }\r\n        <Divider className={this.props.classes.divider} orientation=\"vertical\" />     \r\n        <IconButton fontSize=\"small\" color='primary' size='medium' className={this.props.classes.iconButton} aria-label=\"directions\" onClick={this.handleClick}>\r\n            <SendIcon />\r\n        </IconButton>\r\n    </Paper>\r\n\r\n\r\n\r\n\r\n{\r\n    /////////////////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n<div className={this.props.classes.Comments}>\r\n    Parameters\r\n        <Divider light  style={{width:200}}/>\r\n    </div>\r\n\r\n\r\n    <Paper component=\"form\" className={this.props.classes.paperParms}>\r\n    <InputBase\r\n    autoComplete\r\n    autoFocus='true'\r\n    value={this.state.parms}\r\n    onChange={(event)=>{this.setState({parms:event.target.value})}}\r\n    className={this.props.classes.inputparms}\r\n    placeholder=\"Parameters\"\r\n    inputProps={{ 'aria-label': 'Parameters' }}\r\n    />\r\n    {\r\n    //     this.state.parms!==\"\"?(\r\n            \r\n     \r\n    //         <Divider className={this.props.classes.divider} orientation=\"vertical\" />\r\n       \r\n    //     )\r\n    //     :(<div></div>)\r\n    }\r\n  \r\n    {\r\n        this.state.parms!==\"\"?(\r\n            \r\n     \r\n        <IconButton fontSize=\"small\" color=\"primary\" className={this.props.classes.iconButton} aria-label=\"directions\" onClick={()=>{this.setState({parms:\"\"})}}>\r\n        <ClearIcon />\r\n      </IconButton>\r\n       \r\n        )\r\n        :(<div></div>)\r\n    }\r\n    {\r\n//     <Divider orientation=\"vertical\" flexItem/>   \r\n//    <Button\r\n//         variant=\"contained\"\r\n//         color=\"primary\"\r\n//         className={this.props.classes.button}\r\n//         //disabled\r\n//         //endIcon={<SendIcon />}\r\n//       >\r\n//         {//Send\r\n//         }\r\n//      </Button>\r\n    }\r\n\r\n    </Paper>\r\n\r\n\r\n\r\n\r\n    <div className={this.props.classes.Comments}>\r\n        commands\r\n        <Divider light  style={{width:200}}/>\r\n    </div>\r\n\r\n    <div className={this.props.classes.ButtonGroup}>\r\n        <ButtonGroup \r\n            size=\"large\" \r\n            color=\"primary\" \r\n            orientation=\"horizontal\"\r\n            color=\"primary\"\r\n            aria-label=\"vertical contained primary button group\"\r\n            variant=\"text\"\r\n            style={{ marginTop:35,width:380,height:50,}}>\r\n           \r\n           <Button onClick={()=>this.sentCommand('state.apply')}>state.apply</Button>\r\n            <Button onClick={()=>this.sentCommand('test.ping')}>test.ping</Button>\r\n            <Button onClick={()=>this.sentCommand('grains.items')}>grains.items</Button>\r\n\r\n        \r\n\r\n        </ButtonGroup>\r\n      \r\n    </div>\r\n\r\n    <div className={this.props.classes.Divider}>\r\n        History\r\n        <Divider light  style={{width:400}}/>\r\n    </div>\r\n\r\n\r\n    {\r\n        <div style={{ display: 'flex',flexDirection: 'row',flexFlow: 'row wrap',maxWidth:600}}>\r\n        {store.getState().saveMinion.saveMinion.map(item =>{\r\n            return(\r\n                \r\n                  <MinionCard  id={item.id} minion={item.minions} comment={item.comment} prepared={item.prepared} Parameter={item.Parameter}/>\r\n        )})}\r\n        </div>\r\n    }  \r\n\r\n    \r\n    <div className={this.props.classes.Divider}>\r\n        <Divider light  style={{width:400}}/>\r\n    </div>\r\n\r\n\r\n    </div>\r\n<div>\r\n  \r\n\r\n    <div className={this.props.classes.MaterialTable}>\r\n        {\r\n            this.state.alert?\r\n            (   <div className={this.props.classes.msg}>\r\n                   \r\n                        <Alert severity=\"success\">\r\n                                The minions you selected were  — <strong>accepted in the system</strong>\r\n                        </Alert>\r\n                   \r\n                </div>\r\n            ):<div></div>\r\n        }\r\n        <MaterialTable\r\n        \r\n            title='Minions'\r\n            icons={tableIcons}\r\n            columns={[{ title: 'Name', field: 'name' },]}\r\n            data={this.state.data} \r\n            options={{selection: true}}       \r\n            actions=\r\n            {[{\r\n                icon: forwardRef((props, ref) => <SaveIcon color='action' {...props} ref={ref} />),\r\n                tooltip: 'Save Minions',\r\n                onClick: (event, rowData) => {this.clickOpen(rowData)}\r\n            }]}\r\n        />\r\n        {\r\n            this.state.clickSave === true?\r\n                (<div className={this.props.classes.msg}>\r\n                    <Snackbar open={this.state.msg} autoHideDuration={6000} onClose={this.handleClose}>\r\n                        <Alert onClose={this.handleClose} severity=\"success\">\r\n                            The commands you made were received in the system!\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </div>\r\n                ):<div></div>\r\n        }\r\n        {\r\n            this.state.warninginput === true ?\r\n            (   <div className={this.props.classes.msg}>\r\n                <Snackbar open={this.state.warninginput} autoHideDuration={6000} onClose={this.handleClose}>\r\n                    <Alert onClose={this.handleClose} severity=\"warning\">\r\n                          command not sent because     <strong> no command entered   </strong>\r\n                        </Alert>\r\n                  \r\n                    </Snackbar>\r\n                   \r\n                </div>\r\n            )\r\n            :<div></div>\r\n        }\r\n        {\r\n            this.state.warningNoMinionSelected === true ?\r\n            (   <div className={this.props.classes.msg}>\r\n                <Snackbar open={this.state.warningNoMinionSelected} autoHideDuration={6000} onClose={this.handleClose}>\r\n                    <Alert onClose={this.handleClose} severity=\"warning\">\r\n                              command not sent because <strong>no minion selected   </strong>\r\n                        </Alert>\r\n                  \r\n                    </Snackbar>\r\n                   \r\n                </div>\r\n            )\r\n            :<div></div>\r\n        }\r\n          {\r\n            this.state.err_cmd_flag === true ?\r\n            (   <div className={this.props.classes.msg}>\r\n                <Snackbar open={this.state.err_cmd_flag} autoHideDuration={6000} onClose={this.handleClose}>\r\n                    <Alert onClose={this.handleClose} severity=\"error\">\r\n                              command not sent because <strong>Internal Server Error   </strong>\r\n                        </Alert>\r\n                  \r\n                    </Snackbar>\r\n                   \r\n                </div>\r\n            )\r\n            :<div></div>\r\n        }\r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n</div>\r\n</div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(SaltStack);","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport {DATE_SELECT} from \"../actions/types\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {Typography,Button,Grid} from '@material-ui/core';\r\nimport Title from './Title';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {KeyboardDatePicker,MuiPickersUtilsProvider,DatePicker} from \"@material-ui/pickers\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\n//import DateTime from 'react-datetime';\r\nimport {dateSelect} from '../actions/date.js';\r\nimport store from '../store';\r\nimport { saltReturnsForgraph } from '../actions/date';\r\nimport graphDate from '../reducers/graphDate';\r\nimport {GRAPH_DATE_SELECT} from \"../actions/types\";\r\n// <DatePicker\r\n// disableFuture\r\n// openTo=\"year\"\r\n// id=\"date-picker-dialog\"\r\n// margin=\"normal\"\r\n// format=\"dd/MM/yyyy\"\r\n// label=\"Start\"\r\n// views={[\"year\", \"month\", \"date\"]}\r\n// KeyboardButtonProps={{\r\n//   'aria-label': 'change date',\r\n// }}\r\n\r\n// />\r\n\r\n\r\n\r\n\r\n\r\n class SearchTimeGraph extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.dateIsChanged = this.dateIsChanged.bind(this);\r\n    this.state={graphDate:this.props.graphDate.graphDate,};\r\n  \r\n  }\r\n//   shouldComponentUpdate(nextProps, nextState) {\r\n//   return this.state.value != nextState.value;\r\n// }\r\n  \r\n    \r\n  \r\n  handleDateChange (date){\r\n    this.setState({graphDate:date});\r\n  \r\n  //  console.log(this.state,'this.state');\r\n  //  console.log(store.getState(),'store');\r\n   store.dispatch(saltReturnsForgraph());\r\n   setTimeout(() => {\r\n    store.dispatch({\r\n      type: GRAPH_DATE_SELECT,\r\n      payload: {graphDate:date}\r\n     } );\r\n   }, 0);\r\n  \r\n  }\r\n \r\n\r\n  dateIsChanged(){\r\n    //this.setState({graphDate:date});\r\n  //   let date=this.state.graphDate;\r\n  //  store.dispatch({\r\n  //   type: GRAPH_DATE_SELECT,\r\n  //   payload: {graphDate:date}\r\n  //  } );\r\n  //  store.dispatch(saltReturnsForgraph());\r\n\r\n\r\n    // console.log(\"store\",store.getState());\r\n}\r\n \r\n \r\n  render () {\r\n    return (\r\n      <React.Fragment>\r\n        <Typography component=\"p\" variant=\"h4\">\r\n\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid container justify=\"space-around\">\r\n            <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Graph Date\"\r\n            format=\"dd/MM/yyyy\"\r\n            value={this.state.graphDate}\r\n            onChange={(date)=>{this.handleDateChange(date)}}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n\r\n\r\n        \r\n   \r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n\r\n        </Typography>\r\n       \r\n      </React.Fragment>\r\n    );\r\n  }\r\n    \r\n}\r\n\r\n const mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    graphDate: state.graphDate\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SearchTimeGraph);","\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport React, { PureComponent } from 'react';\nimport {\n  BarChart, Bar, Brush, ReferenceLine, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\nimport store from '../store';\nimport axios from 'axios'\nimport { saltReturns } from '../actions/date';\nimport {connect} from 'react-redux';\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n    },\n});\n\nexport const tokenConfig = getState => {\n  // console.log(\"getstatteeeeeslatl\",getState())\n   // Get token from localstorage\n   const token = store.getState().auth.token;\n\n   // Headers\n   const config = {\n       headers: {\n           \"Content-type\": \"multipart/form-data\"\n       }\n   }\n\n   // If token, add to headers\n   if(token) {\n      config.headers[\"Authorization\"] = ` Bearer ${token} `;\n   }\n\nreturn config;\n}\nclass CurrentMonth extends PureComponent {\n    constructor(props) {\n        super(props);\n         this.dataInit = this.dataInit.bind(this);\n         store.dispatch(saltReturns(\"CurrentMonth\"));\n        this.state = {\n            start: new Date(),\n            end:new Date(),\n            data: this.dataInit(),\n            flag:true,\n        };\n      }\n    \n      // componentWillUpdate(){\n      //   this.setState({data:this.dataInit(),flag:false});\n      // }\n     \n      dataInit(){\n        let time_1=new Date().getTime();\n        let year=String(new Date().getFullYear());\n        let dayEnd=String(new Date(year, new Date().getMonth()+1, 0).getDate());\n        dayEnd=parseInt(dayEnd)<10?\"0\"+dayEnd:dayEnd;\n        let satrtCurrentMonth=(new Date().getMonth()+1);\n        satrtCurrentMonth=parseInt( satrtCurrentMonth)<10?\"0\"+ satrtCurrentMonth: satrtCurrentMonth;\n        let Start= year+satrtCurrentMonth+\"01\"+\"000000000000\";\n        let End= year+satrtCurrentMonth+dayEnd+\"235959595959\";\n        //  let startYear=new Date(year,Month,store.getState().date.start.getDate());\n        //  let endYear=store.getState().date.end;\n        //  let index = startYear;\n      // if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\n        let minions=[];\n      // for (let index = startYear; index <= endYear; index.setFullYear(index.getFullYear() + 1)) {\n      \n      \n     \n      //console.log(Start,\"Start\")\n      //console.log(End,\"End\")\n      let url='/api/saltReturns/apply/'+Start+\"/\"+End;\n      //console.log(\"url\" ,url);\n      axios.get(url, tokenConfig(store.getState()))\n      .then((res) => {\n        let dataInit=[];\n        // let temp=new Date(2020,4);\n        let temp=new Date();\n         let mnonthDay =new Date(temp.getFullYear(), temp.getMonth()-1, 0).getDate();\n            for (let i=1;i<=mnonthDay;i++){\n             dataInit.push( { name: String(i), Fail:0, Success:0 });\n         }\n        minions=minions.concat(res.data);\n       // console.log(res.data,\"res.data\")\n       // console.log(minions,\"minions\")\n        if(minions!==null){\n          \n          let funSaltReturns=minions\n          //.filter((item)=>{return item.full_ret.fun === \"state.apply\"})\n        //   .filter((item)=>{\n        //   let str=item.jid.slice(0,4)+\"-\"+String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\n        //   let time=new Date(str);\n        //   if(((time.getTime() >=mnontStart.getTime()))  && (time.getTime() <=mnontEnd.getTime())){return item;}\n        // })\n        .forEach((item) => {\n            let place= (parseInt(item.jid.slice(6,8))-1);\n           // console.log(place,\"day\");\n           let res=true;\n           let flag=0;\n           //if(item.full_ret.success === false){res=false}\n           //let temp =Object.entries(item.return);\n           if(Array.isArray(item.return)){ res=true;   {res === true ?(dataInit[place].Success++):(dataInit[place].Fail++)}}\n           else{\n               //console.log(item,'item');\n              // let flag =0;\n               let dataTemp=Object.entries(item.return).map((e,index,arr) => {\n                 if(e[1].result === false){\n                  dataInit[place].Fail++;\n                  flag=1;\n                  //break;\n                 }\n                if(index===arr.length-1 && flag === 0){\n                  dataInit[place].Success++;\n                }\n              //  if(flag ===1){\n              //   { e[1].result === true ?(dataInit[place].Success++):(dataInit[place].Fail++)}\n              //  }\n             \n              });\n              //  let flag=false;\n              \n            //console.log(Object.entries(item.return),\"Object.entries(item.return)\");\n              //  dataTemp.forEach(item =>{\n              //     // console.log(Object.values(item),'Object.values(item)');\n              //      if((Object.values(item)[0].result===true)&& (flag===false)){res=true}\n              //      else{res=false;flag=true;}\n              //  } )\n           }\n         \n          })\n          let time_2=new Date().getTime();\n          console.log((time_2-time_1),\"Time from month\");\n          }\n          \n      \n        \n       //console.log(dataInit,\"dataInit\");\n         \n          // for (let i=1;i<=mnonthDay;i++){\n          //     dataInit.push( { name: String(i), Fail: i+10*2/(i+1*2), Success: i+5/(i+1)*5 });\n          // }\n         // console.log(dataInit);\n          this.state.data= dataInit;\n          this.forceUpdate();\n        //console.log(\"this.state 1\",this.state)\n\n\n    })\n    .catch(err => {\n        console.log(err,\"error in data\");\n\n       });\n       \n       \n    //     let mnontStart=new Date(temp.getFullYear(), temp.getMonth());\n    // //console.log(mnontStart,\"mnontStart\");\n\n    //     let mnontEnd=new Date(temp.getFullYear(), temp.getMonth(), mnonthDay);\n    //     mnontEnd.setHours(23,59,59);\n       // console.log(mnontEnd,\"mnontEnd\");\n        // console.log(mnontStart,\"gggggggggggggggggggggg\");\n        // console.log(mnontEnd,\"gggggggggggggggggggggg\");\n      \n      \n      }\n      \n    render() {\n     // console.log(\"this.state 2\",this.state)\n        return (\n          <BarChart\n            width={1220}\n            height={500}\n            data={this.state.data}\n            margin={{\n              top: 5, right: 20, left: 10, bottom: 5,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\n            <ReferenceLine y={0} stroke=\"#000\" />\n            <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" />\n            <Bar dataKey=\"Fail\" fill=\"#ff6666\"/>\n            <Bar dataKey=\"Success\" fill=\"#82ca9d\" />\n          </BarChart>\n        );\n      }\n    }\n    \n    const mapStateToProps = (state, ownProps) => {\n      return {\n          saltReturns: state.saltReturns,\n          date: state.date\n      }\n  }\n    export default connect(mapStateToProps)(withStyles(styles)(CurrentMonth));\n\n\n\n\n\n\n\n\n// export default class Example extends PureComponent {\n//   static jsfiddleUrl = 'https://jsfiddle.net/alidingling/mc8r7e6p/';\n\n","\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport React, { PureComponent } from 'react';\nimport {\n  BarChart, Bar, Brush, ReferenceLine, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\nimport store from '../store';\n\nimport { saltReturns } from '../actions/date';\nimport {connect} from 'react-redux';\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n    },\n});\n\n\nclass CurrentYear extends PureComponent {\n    constructor(props) {\n        super(props);\n         this.dataInit = this.dataInit.bind(this);\n         store.dispatch(saltReturns(\"CurrentYear\"));\n        this.state = {\n            start: new Date(),\n            end:new Date(),\n            data: this.dataInit(),\n            flag:true,\n        };\n      }\n    \n      componentWillReceiveProps(nextProps) {\n        if( (((this.props.date.start.toLocaleDateString()!== nextProps.date.start.toLocaleDateString()) || (this.props.date.end.toLocaleDateString()!== nextProps.date.end.toLocaleDateString() ))) \n        && (this.state.flag===true)){\n\n           this.setState({data:this.dataInit()});\n          \n        }\n      }\n      shouldComponentUpdate(nextProps, nextState) {\n        if(this.state.flag===true){\n          this.setState({data:this.dataInit(),flag:false});\n          return true;\n        }\n       return false;\n        \n      }\n     \n      // componentWillUpdate() {\n      //   this.setState({data:this.dataInit()});\n      // }\n      dataInit(){\n        let time_1=new Date().getTime();\n        let dataInit=[];\n        // let temp=new Date(2019,10);\n    \n        dataInit.push( { name: String('January'), Fail:0, Success:0 });\n        dataInit.push( { name: String('February'), Fail:0, Success:0 });\n        dataInit.push( { name: String('March'), Fail:0, Success:0 });\n        dataInit.push( { name: String('April'), Fail:0, Success:0 });\n        dataInit.push( { name: String('May '), Fail:0, Success:0 });\n        dataInit.push( { name: String('June  '), Fail:0, Success:0 });\n        dataInit.push( { name: String('July  '), Fail:0, Success:0 });\n        dataInit.push( { name: String('August '), Fail:0, Success:0 });\n        dataInit.push( { name: String('September '),Fail:0, Success:0 });\n        dataInit.push( { name: String('October '), Fail:0, Success:0 });\n        dataInit.push( { name: String('November  '),Fail:0, Success:0 });\n        dataInit.push( { name: String('December '), Fail:0, Success:0 });\n        \n        if(store.getState().saltReturns.saltReturns!==null){\n\n        \n        let funSaltReturns=store.getState().saltReturns.saltReturns\n        //.filter((item)=>{return item.full_ret.fun === \"state.apply\"})\n        //To check I put the next 6 lines in the comment\n      //   .filter((item)=>{\n      //     let temp=new Date();\n      //   let str=item.jid.slice(0,4)+\"-\"+String(parseInt(item.jid.slice(4,6))-1)+\"-\"+item.jid.slice(6,8);\n      //   let time=new Date(str);\n      //   if(time.getFullYear() === temp.getFullYear()){return item;}\n      // })\n      .forEach((item) => {\n        let str=item.jid.slice(0,4)+\"-\"+String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\n        let time=new Date(str);\n        let place=time.getMonth();\n        let res=true;\n        let flag=0;\n        //if(item.full_ret.success === false){res=false}\n        //let temp =Object.entries(item.return);\n        if(Array.isArray(item.return)){ res=true;   {res === true ?(dataInit[place].Success++):(dataInit[place].Fail++)}}\n        else{\n            //console.log(item,'item');\n           // let flag =0;\n            let dataTemp=Object.entries(item.return).map((e,index,arr) => {\n              if(e[1].result === false && flag===0){\n               dataInit[place].Fail++;\n               flag=1;\n               //break;\n              }\n             if(index===arr.length-1 && flag === 0){\n               dataInit[place].Success++;\n             }\n           //  if(flag ===1){\n           //   { e[1].result === true ?(dataInit[place].Success++):(dataInit[place].Fail++)}\n           //  }\n          \n           });\n           //  let flag=false;\n           \n         //console.log(Object.entries(item.return),\"Object.entries(item.return)\");\n           //  dataTemp.forEach(item =>{\n           //     // console.log(Object.values(item),'Object.values(item)');\n           //      if((Object.values(item)[0].result===true)&& (flag===false)){res=true}\n           //      else{res=false;flag=true;}\n           //  } )\n        }\n\n      })\n        \n    \n      \n      // console.log(dataInit,\"dataInit\");\n       \n        // for (let i=1;i<=mnonthDay;i++){\n        //     dataInit.push( { name: String(i), Fail: i+10*2/(i+1*2), Success: i+5/(i+1)*5 });\n        // }\n        // console.log(dataInit);\n        let time_2=new Date().getTime();\n        console.log((time_2-time_1),\"Time from year\");\n        return dataInit;\n    }\n      }\n   \n    render() {\n        return (\n            <BarChart   \n                width={1220}\n                height={500} \n                data={this.state.data}\n                margin={{top: 5, right: 20, left: 10, bottom: 5,}}\n                >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\n                <ReferenceLine y={0} stroke=\"#000\" />\n              \n                <Bar dataKey=\"Fail\" fill=\"#ff6666\"/>\n                <Bar dataKey=\"Success\" fill=\"#82ca9d\" />\n            </BarChart>\n        \n      \n        );\n      }\n    }\n    \n    const mapStateToProps = (state, ownProps) => {\n      return {\n          saltReturns: state.saltReturns,\n          date: state.date\n      }\n  }\n\n  \n  \n  \nexport default connect(mapStateToProps)(withStyles(styles)(CurrentYear));\n\n\n\n\n\n\n\n\n\n// export default class Example extends PureComponent {\n//   static jsfiddleUrl = 'https://jsfiddle.net/alidingling/mc8r7e6p/';\n\n","\nimport { withStyles } from \"@material-ui/core/styles\";\nimport React, { PureComponent } from 'react';\nimport {\n  BarChart, Bar, Brush, ReferenceLine, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\nimport store from '../store';\nimport { saltReturns } from '../actions/date';\nimport {connect} from 'react-redux';\n\nimport TreeView from '@material-ui/lab/TreeView';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport TreeItem from '@material-ui/lab/TreeItem';\n\n\nconst styles = theme => ({\n    root: {\n        \n        flexGrow: 1,\n        maxWidth: 400,\n      },\n});\n\n\nclass LastThreeMonths extends PureComponent {\n    constructor(props) {\n        super(props);\n         this.dataInitOne = this.dataInitOne.bind(this);\n         this.dataInitTow = this.dataInitTow.bind(this);\n         this.dataInitThree = this.dataInitThree.bind(this);\n         store.dispatch(saltReturns(\"LastThreeMonths\"));\n        //  this.listMonth = this.listMonth.bind(this);\n        this.state = {\n            start: new Date(),\n            end:new Date(),\n            nameOne:'',\n            nameTow:'',\n            nameThree:'',\n            one: this.dataInitOne(),\n            tow: this.dataInitTow(),\n            three: this.dataInitThree(),\n            flag:true,\n         \n        };\n      }\n      componentWillReceiveProps(nextProps) {\n        if( (((this.props.date.start.toLocaleDateString()!== nextProps.date.start.toLocaleDateString()) || (this.props.date.end.toLocaleDateString()!== nextProps.date.end.toLocaleDateString() ))) \n        && (this.state.flag===true)){\n\n           this.setState({one: this.dataInitOne(),\n            tow: this.dataInitTow(),\n            three: this.dataInitThree()});\n          \n        }\n      }\n      shouldComponentUpdate(nextProps, nextState) {\n        if(this.state.flag===true){\n          this.setState({one: this.dataInitOne(),\n            tow: this.dataInitTow(),\n            three: this.dataInitThree(),flag:false});\n          return true;\n        }\n       return false;\n        \n      }\n      dataInitOne(){\n        let dataInit=[];\n        let listMonth=['January','February','March','April',\n        'May','June','July','August','September',\n        'October','November','December'];\n          let temp=new Date();\n         //let temp=new Date(2020,8);\n        let tempMonth=temp.getMonth()-2;\n        if(tempMonth<0){tempMonth+=12}\n        console.log(tempMonth,\"1\");\n        // let temp=new Date(2019,10);\n      // console.log(tempMonth,\"tempMonth\")\n        let monthDay =new Date(temp.getFullYear(), temp.getMonth()-4, 0).getDate();\n      \n        //this.state.nameThree=listMonth[monthDay-2];\n      \n           for (let i=1;i<=monthDay;i++){\n            dataInit.push( { name: String(i), Fail:0, Success:0 });\n        }\n        \n        // let mnontStart=new Date(temp.getFullYear(), temp.getMonth()-3);\n    \n\n        // let mnontEnd=new Date(temp.getFullYear(), temp.getMonth()-3, monthDay);\n        // mnontEnd.setHours(23,59,59);\n\n       // console.log(mnontStart,\"gggggggggggggggggggggg\");\n       // console.log(mnontEnd,\"gggggggggggggggggggggg\");\n        if(store.getState().saltReturns.saltReturns!==null){\n        let funSaltReturns=store.getState().saltReturns.saltReturns\n      //   .filter((item)=>{return item.full_ret.fun === \"state.apply\"})\n        .filter((item)=>{\n      //   let str=item.jid.slice(0,4)+\"-\"+String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\n      //   let time=new Date(str);\n      //  if(((time.getTime() >=mnontStart.getTime()))  && (time.getTime() <=mnontEnd.getTime())){return item;}\n      if(tempMonth===parseInt(item.jid.slice(4,6))){return item;}\n      })\n      .forEach((item,index) => {\n        let place= (parseInt(item.jid.slice(6,8))-1);\n        //  console.log(place,\"day\");\n        let flag=0;\n        let res=true;\n       // if(item.full_ret.success === false){res=false}\n        let temp =Object.entries(item.return);\n        if(Array.isArray(item.return)){ res=true;   {res === true ?(dataInit[place].Success++):(dataInit[place].Fail++)}}\n        else{\n          //console.log(item,'item');\n         // let flag =0;\n          let dataTemp=Object.entries(item.return).map((e,index,arr) => {\n            if(e[1].result === false && flag===0){\n             dataInit[place].Fail++;\n             flag=1;\n             //break;\n            }\n           else if(index===arr.length-1 && flag === 0){\n             dataInit[place].Success++;\n           }\n          else {\n            \n          }\n        \n         });\n \n      }\n\n\n\n\n        })\n\n        }\n        \n        \n    \n      \n    //    console.log(dataInit,\"dataInit\");\n       \n        // for (let i=1;i<=mnonthDay;i++){\n        //     dataInit.push( { name: String(i), Fail: i+10*2/(i+1*2), Success: i+5/(i+1)*5 });\n        // }\n        // console.log(dataInit);\n        return dataInit;\n      \n      }\n\n\n      dataInitTow(){\n        let dataInit=[];\n        let listMonth=['January','February','March','April',\n        'May','June','July','August','September',\n        'October','November','December'];\n        let temp=new Date();\n        //let temp=new Date(2020,8);\n        let tempMonth=temp.getMonth()-1;\n        if(tempMonth<0){tempMonth+=12}\n        console.log(tempMonth,\"2\");\n        // let temp=new Date(2019,10);\n      // console.log(tempMonth,\"tempMonth\")\n        let monthDay =new Date(temp.getFullYear(), temp.getMonth()-3, 0).getDate();\n      \n        //this.state.nameThree=listMonth[monthDay-2];\n      \n           for (let i=1;i<=monthDay;i++){\n            dataInit.push( { name: String(i), Fail:0, Success:0 });\n        }\n        console.log(dataInit,\"dataInit\")\n        // let mnontStart=new Date(temp.getFullYear(), temp.getMonth()-2);\n    \n\n        // let mnontEnd=new Date(temp.getFullYear(), temp.getMonth()-2, monthDay);\n        // mnontEnd.setHours(23,59,59);\n\n       // console.log(mnontStart,\"gggggggggggggggggggggg\");\n        //console.log(mnontEnd,\"gggggggggggggggggggggg\");\n        if(store.getState().saltReturns.saltReturns!==null){\n        let funSaltReturns=store.getState().saltReturns.saltReturns\n      //   .filter((item)=>{return item.full_ret.fun === \"state.apply\"})\n      .filter((item)=>{\n      //   let str=item.jid.slice(0,4)+\"-\"+String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\n      //   let time=new Date(str);\n      //   if(((time.getTime() >=mnontStart.getTime()))  && (time.getTime() <=mnontEnd.getTime())){return item;}\n      if(tempMonth===parseInt(item.jid.slice(4,6))){return item;}\n      })\n      .forEach((item,index) => {\n        let place= (parseInt(item.jid.slice(6,8))-1);\n         // console.log(place,\"day\");\n         let flag=0;\n         let res=true;\n    \n         if(Array.isArray(item.return)){ res=true;   {res === true ?(dataInit[place].Success++):(dataInit[place].Fail++)}}\n         else{\n          //console.log(item,'item');\n         // let flag =0;\n          let dataTemp=Object.entries(item.return).map((e,index,arr) => {\n            if(e[1].result === false && flag===0){\n             dataInit[place].Fail++;\n             flag=1;\n             //break;\n            }\n           if(index===arr.length-1 && flag === 0){\n             console.log(\"place\",place)\n             console.log(\"dataaa\",dataInit)\n             dataInit[place].Success++;\n           }\n      \n        \n         });\n \n      }\n\n\n        })\n\n        }\n        \n        \n    \n      \n    //    console.log(dataInit,\"dataInit\");\n       \n        // for (let i=1;i<=mnonthDay;i++){\n        //     dataInit.push( { name: String(i), Fail: i+10*2/(i+1*2), Success: i+5/(i+1)*5 });\n        // }\n        // console.log(dataInit);\n        return dataInit;\n      \n      }\n\n\n\n\n\n      dataInitThree(){\n        let dataInit=[];\n        let listMonth=['January','February','March','April',\n        'May','June','July','August','September',\n        'October','November','December'];\n        let temp=new Date();\n        //let temp=new Date(2020,8);\n        let tempMonth=temp.getMonth();\n        if(tempMonth<0){tempMonth+=12}\n     console.log(tempMonth,\"3\");\n        // let temp=new Date(2019,10);\n      // console.log(tempMonth,\"tempMonth\")\n        // let temp=new Date(2019,10);\n      \n        let monthDay =new Date(temp.getFullYear(), temp.getMonth()-2, 0).getDate();\n       \n        // this.state.nameThree=this.state.month[monthDay-2];\n        //console.log(this.state.month,\"this.state.month\");\n           for (let i=1;i<=monthDay;i++){\n            dataInit.push( { name: String(i), Fail:0, Success:0 });\n        }\n       \n        // let mnontStart=new Date(temp.getFullYear(), temp.getMonth()-1);\n    \n\n        // let mnontEnd=new Date(temp.getFullYear(), temp.getMonth()-1, monthDay);\n        // mnontEnd.setHours(23,59,59);\n\n        // console.log(mnontStart,\"gggggggggggggggggggggg\");\n        // console.log(mnontEnd,\"gggggggggggggggggggggg\");\n        if(store.getState().saltReturns.saltReturns!==null){\n        let funSaltReturns=store.getState().saltReturns.saltReturns\n         //.filter((item)=>{return item.full_ret.fun === \"state.apply\"})\n       .filter((item)=>{\n      //   let str=item.jid.slice(0,4)+\"-\"+String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\n      //   let time=new Date(str);\n      //   if(((time.getTime() >=mnontStart.getTime()))  && (time.getTime() <=mnontEnd.getTime())){return item;}\n      if(tempMonth===parseInt(item.jid.slice(4,6))){return item;}\n       })\n      .forEach((item,index) => {\n        let place= (parseInt(item.jid.slice(6,8))-1);\n        //   console.log(place,\"day\");\n        let res=true;\n        let flag=0;\n       // if(item.full_ret.success === false){res=false}\n      \n       if(Array.isArray(item.return)){ res=true;   {res === true ?(dataInit[place].Success++):(dataInit[place].Fail++)}}\n       else{\n        //console.log(item,'item');\n       // let flag =0;\n        let dataTemp=Object.entries(item.return).map((e,index,arr) => {\n          if(e[1].result === false && flag===0){\n           dataInit[place].Fail++;\n           flag=1;\n           //break;\n          }\n         if(index===arr.length-1 && flag === 0){\n           dataInit[place].Success++;\n         }\n      \n      \n       });\n      \n       \n     \n    }\n        \n\n\n\n\n\n        })\n\n        }\n        \n        \n    \n      \n      // console.log(dataInit,\"dataInit 3\");\n       \n        // for (let i=1;i<=mnonthDay;i++){\n        //     dataInit.push( { name: String(i), Fail: i+10*2/(i+1*2), Success: i+5/(i+1)*5 });\n        // }\n        // console.log(dataInit);\n        return dataInit;\n      \n      }\n\n\n      componentDidMount(){\n       \n      }\n   \n    render() {\n        let listMonth=['January','February','March','April',\n        'May','June','July','August','September',\n        'October','November','December'];\n        let temp=new Date();\n        let tempMonth=temp.getMonth();\n        if((tempMonth-1)<0){tempMonth+=12;}\n        this.state.nameThree=listMonth[tempMonth-1];\n        if((tempMonth-2)<0){tempMonth+=12;}\n        this.state.nameTow=listMonth[tempMonth-2];\n        if((tempMonth-3)<0){tempMonth+=12;}\n        this.state.nameOne=listMonth[tempMonth-3];\n    \n        return (\n            \n            <TreeView\n            className={this.props.classes.root}\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpandIcon={<ChevronRightIcon />}\n            >\n                <TreeItem nodeId=\"1\" label={this.state.nameOne} >\n                    <BarChart\n                    width={1170}\n                    height={500}\n                    data={this.state.one}\n                    margin={{\n                    top: 5, right: 20, left: 10, bottom: 5,\n                    }}\n                    >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\n                    <ReferenceLine y={0} stroke=\"#000\" />\n                    <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" />\n                    <Bar dataKey=\"Fail\" fill=\"#ff6666\"/>\n                    <Bar dataKey=\"Success\" fill=\"#82ca9d\" />\n                </BarChart>\n                </TreeItem>\n\n                <TreeItem nodeId=\"2\" label={this.state.nameTow}>\n                    <BarChart\n                    width={1170}\n                    height={500}\n                    data={this.state.tow}\n                    margin={{\n                    top: 5, right: 20, left: 10, bottom: 5,\n                    }}\n                    >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\n                    <ReferenceLine y={0} stroke=\"#000\" />\n                    <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" />\n                    <Bar dataKey=\"Fail\" fill=\"#ff6666\"/>\n                    <Bar dataKey=\"Success\" fill=\"#82ca9d\" />\n                    </BarChart>\n                </TreeItem>\n\n\n                <TreeItem nodeId=\"3\" label={this.state.nameThree}>\n                    <BarChart\n                    width={1170}\n                    height={500}\n                    data={this.state.three}\n                    margin={{\n                    top: 5, right: 20, left: 10, bottom: 5,\n                    }}\n                    >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\n                    <ReferenceLine y={0} stroke=\"#000\" />\n                    <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" />\n                    <Bar dataKey=\"Fail\" fill=\"#ff6666\"/>\n                    <Bar dataKey=\"Success\" fill=\"#82ca9d\" />\n                    </BarChart>\n                </TreeItem>\n\n            \n            \n          </TreeView>\n\n          \n       \n        );\n      }\n    }\n    \n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n      saltReturns: state.saltReturns,\n      date: state.date\n  }\n}\n\nexport default connect(mapStateToProps)(withStyles(styles)(LastThreeMonths));\n","import { withStyles } from \"@material-ui/core/styles\";\r\nimport React, { PureComponent } from 'react';\r\nimport store from '../store';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from 'axios';\r\nconst styles = theme => ({\r\n    root: {\r\n        minWidth: 345,\r\n        maxWidth: 400,\r\n        margin:theme.spacing(2.5),\r\n       \r\n      },\r\n      media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n      },\r\n      expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n          duration: theme.transitions.duration.shortest,\r\n        }),\r\n      },\r\n      expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n      },\r\n      avatar: {\r\n        backgroundColor: red[500],\r\n      },\r\n      paragraph:{\r\n          paddingLeft:theme.spacing(7.8),\r\n          wordWrap:'break-word',\r\n      },\r\n});\r\n\r\nconst tokenConfig = getState => {\r\n  // console.log(\"getstatteeeeeslatl\",getState())\r\n   // Get token from localstorage\r\n   const token = getState().auth.token;\r\n\r\n   // Headers\r\n   const config = {\r\n       headers: {\r\n          'Content-Type': 'application/json'\r\n       }\r\n   }\r\n\r\n   // If token, add to headers\r\n   if(token) {\r\n      config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n   }\r\n\r\nreturn config;\r\n}\r\nclass TeamCard extends React.Component {\r\n    constructor(props) {\r\n        super(props); \r\n        //this.handleExpandClick = this.handleExpandClick.bind(this);\r\n        this.deleteIcon = this.deleteIcon.bind(this);\r\n        this.handleClickOpen = this.handleClickOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.state={expanded:false,UpperCase:'',open:false,isDelete:false};\r\n        let strName=this.props.first_name.toUpperCase();\r\n        this.props.first_name !== ''?this.state.UpperCase=this.props.first_name.toUpperCase()[0]:this.state.UpperCase=\"\";\r\n    }\r\n    handleClose(){\r\n      this.setState((prevState) => ({open:!prevState.open}));\r\n      const { password, ReturnPassword,Role,Email,first_name,last_name } = this.state;\r\n      const body = JSON.stringify({first_name:first_name,last_name:last_name,role:Role,email:Email, password:password });\r\n      axios.delete(\"/delete/\"+this.props.id, tokenConfig(store.getState))\r\n      .then((res)=> {\r\n        this.setState({isDelete:true});});\r\n          //  this.props.arr=temp;\r\n    }\r\n    handleClickOpen(){\r\n      this.setState((prevState) => ({open:!prevState.open}));\r\n    }\r\n    deleteIcon(){\r\n\r\n    }\r\n    // handleExpandClick(){\r\n    //       this.setState((prevState) => ({expanded:!prevState.expanded}));\r\n    // }\r\n\r\n\r\n\r\n    render()\r\n    {\r\n      const colors = ['#ff0000', '#00ff00', '#0000ff'];\r\n      const random_color = colors[Math.floor(Math.random() * colors.length)];\r\n      //console.log(this.props);\r\n        return (\r\n      this.state.isDelete===false?\r\n      (<Card className={this.props.classes.root}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"recipe\" className={this.props.classes.avatar}>\r\n              {this.state.UpperCase}\r\n            </Avatar>\r\n          }\r\n      // action={\r\n      //       <IconButton aria-label=\"settings\">\r\n      //         <AccountCircleIcon />\r\n      //       </IconButton>\r\n      //     }first_name\r\n          title={this.props.first_name+' '+this.props.last_name}\r\n          subheader={this.props.role}\r\n        />\r\n      \r\n        <CardContent>\r\n          <Typography paragraph className={this.props.classes.paragraph}>\r\n          Email:{this.props.mail}\r\n          </Typography>\r\n          <Typography paragraph className={this.props.classes.paragraph}>\r\n        {/* number:0549494949*/}\r\n          </Typography>\r\n\r\n        </CardContent>\r\n\r\n        <CardActions disableSpacing>\r\n        \r\n      <IconButton \r\n      aria-label=\"share\"\r\n      variant=\"outlined\" \r\n      //color=\"primary\" \r\n      onClick={this.handleClickOpen}\r\n        //onClick={this.handleExpandClick}\r\n      color='secondary'\r\n        >\r\n            <DeleteIcon />\r\n      </IconButton>\r\n      <Dialog\r\n      open={this.state.open}\r\n      onClose={this.handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n      >\r\n\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n        Are you sure you want to delete a user from the system?\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n      <Button onClick={this.handleClickOpen} color=\"primary\">\r\n        Cancel\r\n      </Button>\r\n        <Button onClick={this.handleClose} color=\"secondary\" autoFocus>\r\n          Delete\r\n        </Button>\r\n      </DialogActions>\r\n      </Dialog>\r\n      {/*\r\n          <IconButton\r\n            className={clsx(this.props.classes.expand, {\r\n              [this.props.classes.expandOpen]: this.state.expanded,\r\n            })}\r\n            onClick={this.handleExpandClick}\r\n            aria-expanded={this.state.expanded}\r\n            aria-label=\"show more\"\r\n          >\r\n            <ExpandMoreIcon />\r\n          </IconButton>\r\n          */}\r\n        </CardActions>\r\n\r\n\r\n        {/*<Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <Typography paragraph>\r\n              Heat\r\n            </Typography>\r\n          </CardContent>\r\n        </Collapse>*/}\r\n      </Card>)\r\n:<div></div>\r\n    \r\n\r\n\r\n          );\r\n        }\r\n    \r\n}\r\n\r\nexport default withStyles(styles)(TeamCard);","\nimport { withStyles } from \"@material-ui/core/styles\";\nimport React, { PureComponent } from 'react';\nimport store from '../store';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Button from '@material-ui/core/Button';\n\nimport {REGISTER_SUCCESS,REGISTER_FAIL} from '../actions/types';\nimport {returnErrors}  from '../actions/errorActions';\n\nimport IconButton from '@material-ui/core/IconButton';\n\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport TeamCard from './TeamCard';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { ContactsOutlined } from \"@material-ui/icons\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { teamList } from '../actions/date';\nimport axios from 'axios';\nconst styles = theme => ({\n    root: {\n      // maxWidth: 1000,\n      // display: 'flex',\n      // flexDirection: 'row',\n      // flexWrap:'warp',\n      //justifyContent:'space-around', \n      display: 'flex',\n      flexDirection: 'row',\n      flexFlow: 'row wrap',\n      maxWidth:1300,\n      justifyContent:'space around'\n\n      },\n      field:{\n        display: 'flex',\n        flexDirection: 'column',\n        maxWidth:250,\n        justifyContent:'space around',\n        marginTop:theme.spacing(0),\n        marginLeft:theme.spacing(55.5),\n      },\n      input:{\n        paddingTop:theme.spacing(2),\n        paddingLeft:theme.spacing(-4)\n      },\n      paragraph:{\n          paddingLeft:theme.spacing(7.8)\n      },\n      fab:{\n        color:'#fff',\n        //cursor: 'pointer',\n        border:'none',\n        outline: 'none',\n        outlineOffset: 'none',\n        marginLeft:theme.spacing(4),\n        marginTop:theme.spacing(4)\n      },\n      button:{\n        marginTop:theme.spacing(6)\n      },\n      form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n      },\n      msg:{\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n    },\n});\n\n const tokenConfig = getState => {\n    // console.log(\"getstatteeeeeslatl\",getState())\n     // Get token from localstorage\n     const token = getState().auth.token;\n \n     // Headers\n     const config = {\n         headers: {\n            'Content-Type': 'application/json'\n         }\n     }\n \n     // If token, add to headers\n     if(token) {\n        config.headers[\"Authorization\"] = ` Bearer ${token} `;\n     }\n \n  return config;\n }\nclass Team extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleExpandClick = this.handleExpandClick.bind(this);\n        this.ClickFab = this.ClickFab.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.signIn = this.signIn.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleClickShowPassword = this.handleClickShowPassword.bind(this);\n        this.handleMouseDownPassword = this.handleMouseDownPassword.bind(this);\n        this.handleClickShowPasswordReturn = this.handleClickShowPasswordReturn.bind(this);\n        this.handleMouseDownPasswordReturn = this.handleMouseDownPasswordReturn.bind(this);\n        this.initTeam = this.initTeam.bind(this);\n        //this.handleCloseAlert = this.handleCloseAlert.bind(this);\n        this.state=\n        {\n          expanded:false,\n          fab:false,\n          first_name:'',\n          last_name:'',\n          Role:'',\n          Email:'',\n          Password:'',\n          ReturnPassword:'',\n          showPasswordReturn:'password',\n          showPassword:'password',\n          errPassword:false,\n          saveCard:false,\n          Team:[],\n          counter:0,\n          err_first_name:false,\n          err_last_name:false,\n          err_Role:false,\n          err_Email:false,\n          err_Password:false,\n          no_add_card:false,\n          \n        };\n        this.initTeam();\n    }\n\n    initTeam(){\n      axios.get('/get_users',tokenConfig(store.getState))\n      .then((res) => { \n       \n        this.setState({Team:res.data});\n      })\n      .catch(err => {\n          console.log(err);\n  \n         });\n   \n      \n    }\n\n    handleClickShowPassword(){\n      this.setState({showPassword:'text'});\n    }\n    handleMouseDownPassword(){\n      this.setState({showPassword:'password'});\n    }\n    handleClickShowPasswordReturn(){\n      this.setState({showPasswordReturn:'text'});\n    }\n    handleMouseDownPasswordReturn(){\n      this.setState({showPasswordReturn:'password'});\n    }\n\n\n\n\n\n\n\n\n\n    handleExpandClick(){\n          this.setState((prevState) => ({expanded:!prevState.expanded}));\n    }\n \n    ClickFab(){\n      this.setState((prevState) => ({\n      fab:!prevState.fab,password:'',\n      first_name:'',\n      lastName:'',\n      Role:'',\n      Email:'',\n      Password:'',\n      ReturnPassword:'',}));\n    \n    }\n   \n    signIn(event){\n      \n      event.preventDefault();\n      const { password, ReturnPassword,Role,Email,first_name,last_name } = this.state;\n      //send cardTeam to server\n      //console.log(\"event.preventDefault()\");\n      const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\n      const emailRegex = new RegExp(\"[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,6}\");    \n      let flag=true;\n      if((strongRegex.test(password)===false) || ( password.length>30)  ){flag=false;this.setState({err_Password:true});setTimeout(()=>{this.setState({err_Password:false});}, 10000);}\n      if(first_name.length>30 ){flag=false;this.setState({err_first_name:true});setTimeout(()=>{this.setState({err_first_name:false});}, 6000);}\n      if(last_name.length>30 ){flag=false;this.setState({err_last_name:true});setTimeout(()=>{this.setState({err_last_name:false});}, 6000);}\n      if(Role.length>30 ){flag=false;this.setState({err_Role:true});setTimeout(()=>{this.setState({err_Role:false});}, 6000);}\n      if((Email.length>50) || (emailRegex.test(this.state.Email.toUpperCase())===false)){flag=false;this.setState({err_Email:true});setTimeout(()=>{this.setState({err_Email:false});}, 6000);}\n      if (password===ReturnPassword){}\n      else\n      {\n        this.setState({errPassword:true});\n        setTimeout(()=>{this.setState({errPassword:false});}, 6000);\n      }\n\n      if((password===ReturnPassword) && (flag===true)){\n\n        this.setState((prevState) => ({fab:false}));\n         \n\n            const body = JSON.stringify({first_name:first_name,last_name:last_name,role:Role,email:Email, password:password });\n            //console.log(body,'body')\n            axios.post(\"/register\", body, tokenConfig(store.getState))\n          .then(res => \n            {\n              this.state.Team.push({first_name:first_name,mail:Email,role:Role,last_name:last_name});\n              this.setState({saveCard:true});\n              setTimeout(()=>{this.setState({saveCard:false});}, 4000);\n            }\n          )\n            .catch(err => {\n            console.log(err)\n            this.setState({no_add_card:true});\n            setTimeout(()=>{this.setState({no_add_card:false});}, 4000);\n            })\n\n            \n\n            this.setState({expanded:false,\n              fab:false,\n              first_name:'',\n              last_name:'',\n              Role:'',\n              Email:'',\n              Password:'',\n              ReturnPassword:'',\n              showPasswordReturn:'password',\n              showPassword:'password',\n              errPassword:false,\n              UnsecuredPassword:false,\n            });\n             \n           \n          \n          \n            setTimeout(()=>{this.initTeam();}, 500);\n         \n      }\n   \n      \n   \n    }\n    // shouldComponentUpdate(nextState) {\n    //   console.log(nextState,\"nextState\")\n    //   if(this.state.Password === nextState.ReturnPassword || nextState.Password === this.state.ReturnPassword){\n    //     console.log(\"7878787\")\n    //     //this.setState((prevState) => ({fab:false}));\n    //   }UnsecuredPassword:false\n    // }\n    handleInputChange(e) {\n  \n      this.setState({ [e.target.name] : e.target.value});\n      // console.log(this.state);\n    }\n    handleClose (event, reason) \n    {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        \n        this.setState({errPassword:false,saveCard:false});\n    }\n    // handleCloseAlert(event){\n      \n    //   this.setState({ [event] : false});\n    //   console.log(this.state[event],)\n    // }\n    // shouldComponentUpdate(nextProps, nextState) {\n    //   console.log(nextState,\"nextState\");\n    //  }\n    // componentWillReceiveProps(){\n    //   this.initTeam();\n    // }\n    // shouldComponentUpdate(){\n    //   this.initTeam();\n    // }\n    // componentWillUpdate(){\n    //  console.log(this.state.counter,'this.state.counter');\n    //   if(this.state.counter<=1)\n    //   { \n        \n    //     axios.get('/get_users',tokenConfig(store.getState))\n    //   .then((res) => { \n       \n    //     this.setState({Team:res.data});\n    //   })\n    //   .catch(err => {\n    //       console.log(err);\n  \n    //      });\n    //      this.setState((prevState) => ({counter:2}));\n    // }}\n     \n    render()\n   \n    {\n      \n      if(this.state.fab === false){\n\n          return(\n\n            <div>\n              \n              \n              <div className={this.props.classes.msg}>\n                <Snackbar open={this.state.saveCard} autoHideDuration={6000} onClose={this.handleClose}>\n                    <Alert onClose={this.handleClose} severity=\"success\">\n                    The system added  <strong>a new staff member   </strong>\n                    </Alert>\n                    </Snackbar>\n                </div>\n\n                <div className={this.props.classes.msg}>\n                <Snackbar open={this.state.no_add_card} autoHideDuration={6000} onClose={this.handleClose}>\n                    <Alert onClose={this.handleClose} severity=\"error\">\n                    The system   <strong> not added a new staff member   </strong>\n                    </Alert>\n                    </Snackbar>\n                </div>\n               \n                <div className={this.props.classes.root}> \n                {\n                \n                  this.state.Team.map((item,arr)=>{\n                  if(this.state.Team.length !== 0){ \n                    \n                    return <TeamCard  arr={arr} first_name={item.first_name}  last_name={item.last_name} role={item.role} mail={item.email} id={item._id}/>\n                  }\n                  \n                })\n              }\n              </div>\n              <Fab color=\"primary\" aria-label=\"add\" className={this.props.classes.fab} onClick={this.ClickFab}>\n              <AddIcon />\n            </Fab>\n           </div>\n          );\n\n      }\n\n      else\n      {\n       \n        return(\n          <div className={this.props.classes.field}>\n          <form className={this.props.classes.form} onSubmit={this.signIn} >\n            <div className={this.props.classes.input}>\n  \n              <TextField\n                className={this.props.classes.margin}\n                id=\"input-with-icon-textfield\"\n                label=\"First Name\"\n                required\n                fullWidth\n                name='first_name'\n                value={this.state.first_name}\n                onChange={this.handleInputChange}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <AccountCircle />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n  \n            </div>\n  \n            {\n              this.state.err_first_name===true?\n              (   <div className={this.props.classes.msg}>\n                \n                  <Alert onClose={() =>{this.setState({err_first_name:false})}} severity=\"error\">\n                  The first name must be less than  <strong>30 characters  </strong>\n                  </Alert>\n                  </div>\n              )\n              :<div></div>\n           }\n            <div className={this.props.classes.input}>\n  \n            <TextField\n              className={this.props.classes.margin}\n              id=\"input-with-icon-textfield\"\n              label=\"Last Name\"\n              fullWidth\n              name='last_name'\n             \n              value={this.state.last_name}\n              onChange={this.handleInputChange}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <AccountCircle />\n                  </InputAdornment>\n                ),\n              }}\n            />\n\n          </div>\n\n\n          {\n            this.state.err_last_name===true?\n            (   <div className={this.props.classes.msg}>\n              \n                <Alert onClose={() =>{this.setState({err_last_name:false})}} severity=\"error\">\n                The last name must be less than  <strong>30 characters  </strong>\n                </Alert>\n                </div>\n            )\n            :<div></div>\n         }\n            <div className={this.props.classes.input}>\n  \n              <TextField\n                className={this.props.classes.margin}\n                id=\"input-with-icon-textfield\"\n                label=\"Email\"\n                required\n                fullWidth\n                name='Email'\n                value={this.state.Email}\n                onChange={this.handleInputChange}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <AccountCircle />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n  \n            </div>\n  \n\n            {\n              this.state.err_Email===true?\n              (   <div className={this.props.classes.msg}>\n                \n                  <Alert onClose={() =>{this.setState({err_Email:false})}} severity=\"error\">\n                   <strong> Invalid mail  </strong>\n                  </Alert>\n                  </div>\n              )\n              :<div></div>\n           }\n  \n            <div className={this.props.classes.input}>\n  \n              <TextField\n                className={this.props.classes.margin}\n                id=\"input-with-icon-textfield\"\n                label=\"Role\"\n                name='Role'\n                fullWidth\n                value={this.state.Role}\n                onChange={this.handleInputChange}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <AccountCircle />\n                    </InputAdornment>\n                  ),\n                }}\n                \n              />\n  \n            </div>\n\n            {\n              this.state.err_Role===true?\n              (   <div className={this.props.classes.msg}>\n                \n                  <Alert onClose={() =>{this.setState({err_Role:false})}} severity=\"error\">\n                  The role name must be less than  <strong>30 characters  </strong>\n                  </Alert>\n                  </div>\n              )\n              :<div></div>\n           }\n            <div className={this.props.classes.input}>\n  \n              <TextField\n                className={this.props.classes.margin}\n                id=\"input-with-icon-textfield\"\n                label=\"password\"\n                //variant=\"outlined\"\n                //margin=\"normal\"\n                required\n                fullWidth\n               \n                name=\"password\"\n                label=\"Password\"\n                type={this.state.showPassword==='text'  ? 'text' : 'password'}\n                value={this.state.password}\n                onChange={this.handleInputChange}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <AccountCircle />\n                    </InputAdornment>\n                  ),\n                  endAdornment:(\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={this.handleClickShowPassword}\n                        onMouseDown={this.handleMouseDownPassword}\n                      >\n                        {this.state.showPassword==='text' ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  )\n                }}\n               \n              />\n           \n\n            </div>\n            {\n              this.state.err_Password===true?\n              (   <div className={this.props.classes.msg}>\n                \n                  <Alert onClose={() =>{this.setState({err_Password:false})}} severity=\"error\">\n                  The password <strong>must </strong>  be at least 8 characters long, and include uppercase and lowercase letters, and special characters\n                       <strong>{\"{ !, @, #, \\, $,%, \\, ^ &, \\, * }\"}  </strong>\n                  </Alert>\n                  </div>\n              )\n              :<div></div>\n           }\n            \n            <div className={this.props.classes.input}>\n  \n            <TextField\n              className={this.props.classes.margin}\n              id=\"input-with-icon-textfield\"\n              label=\"password\"\n              //variant=\"outlined\"\n              //margin=\"normal\"\n              required\n              fullWidth\n              name=\"ReturnPassword\"\n              label=\"Repeat Password\"\n              type={this.state.showPasswordReturn==='text' ? 'text' : 'password'}\n              value={this.state.ReturnPassword}\n                onChange={this.handleInputChange}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <AccountCircle />\n                  </InputAdornment>\n                ),\n                endAdornment:(\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={this.handleClickShowPasswordReturn}\n                      onMouseDown={this.handleMouseDownPasswordReturn}\n                    >\n                      {this.state.showPasswordReturn==='text' ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                )\n              }}\n             \n            />\n  \n          </div>\n\n      \n\n          {\n            this.state.errPassword===true?\n            (   <div className={this.props.classes.msg}>\n              \n                <Alert onClose={() =>{this.setState({errPassword:false})}} severity=\"error\">\n                 Passwords  <strong>unequal   </strong>\n                </Alert>\n                </div>\n            )\n            :<div></div>\n         }\n      \n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n              size=\"small\"\n              fullWidth\n              className={this.props.classes.button}\n             // onClick={this.ClickFab}\n              startIcon={<SaveIcon />}\n            >\n              Save\n              </Button>\n             \n          </form> \n            \n          </div>\n        )\n      }\n   \n    \n    }\n  }\n\nexport default withStyles(styles)(Team);","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nimport Graph from './Component/Graph';\r\nimport SearchTime from './Component/SearchTime';\r\nimport Table from './Component/Table';\r\nimport MinionCard from './Component/MinionCard';\r\nimport { saltReturns } from './actions/date';\r\nimport store from './store';\r\nimport { Logout } from './Component/auth/Logout';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SimCardIcon from '@material-ui/icons/SimCard';\r\n\r\nimport SaltStack from './Component/SaltStack';\r\nimport SearchTimeGraph from './Component/SearchTimeGraph';\r\nimport CurrentMonth from './Component/CurrentMonth';\r\n\r\nimport CurrentYear from './Component/CurrentYear';\r\nimport LastThreeMonths from './Component/LastThreeMonths';\r\nimport Team from './Component/Team';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nimport {\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListSubheader\r\n}from '@material-ui/core/';\r\n\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport { listMinions } from './actions/date';\r\n //while(store.getState().saltReturns.saltReturns===null);\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    paddingRight: theme.spacing(3.5),\r\n    paddingTop:theme.spacing(2),\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  table: {\r\n    // marginLeft:theme.spacing(0),\r\n    // marginTop:theme.spacing(4),\r\n    paddingRight: 3.5,\r\n    paddingTop:1,\r\n    paddingLeft:1,\r\n    paddingBottom: 3,\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  \r\n  },\r\n  fixedHeight: {\r\n    height: 363,\r\n  },\r\n  fixedHeightFirst:{\r\n    marginTop:theme.spacing(2),\r\n    height: 235,\r\n  },\r\n  fixedHeightTow:{\r\n   // marginTop:theme.spacing(2),\r\n    height: 113,\r\n  },\r\n  Logout:{\r\n   \r\n  },\r\n  AccountCircleIcon:{\r\n  \r\n  },\r\n  NotificationsIcon:{\r\n    display:'flex',\r\n    justifyContent:'space-between',\r\n    width:43\r\n  }\r\n});\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      //console.log(store.getState(),\"store from dashboard 1\");\r\n      store.dispatch(saltReturns());\r\n     // store.dispatch(listMinions());\r\n      //console.log(store.getState(),\"store from dashboard 2\");\r\n      this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\r\n      this.handleDrawerClose = this.handleDrawerClose.bind(this);\r\n      this.SelectMenu = this.SelectMenu.bind(this);\r\n      this.state={open:true,menu:\"Dashboard\"};\r\n  }\r\n  \r\n \r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({open:true});\r\n  };\r\n  handleDrawerClose = () => {\r\n    this.setState({open:false});\r\n  };\r\n \r\n  SelectMenu = (str) => {\r\n    this.setState({menu:str});\r\n  };\r\n  render(){  \r\n    const fixedHeightPaper = clsx(this.props.classes.paper, this.props.classes.fixedHeight);\r\n    const fixedHeightPaperFirst = clsx(this.props.classes.paper, this.props.classes.fixedHeightFirst);\r\n    const fixedHeightPaperTow = clsx(this.props.classes.paper, this.props.classes.fixedHeightTow);\r\n    \r\n    if(this.state.menu==='Dashboard')\r\n    {\r\n      return (\r\n        <div className={this.props.classes.root}>\r\n    \r\n          <CssBaseline />\r\n          <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n    \r\n            <Toolbar className={this.props.classes.toolbar}>\r\n          \r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={this.handleDrawerOpen}\r\n                className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n              >\r\n    \r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n                Dashboard\r\n              </Typography>\r\n              \r\n             \r\n\r\n          \r\n\r\n                <Logout />\r\n             \r\n            \r\n            \r\n         \r\n    \r\n            </Toolbar>\r\n          </AppBar>\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            classes={{\r\n              paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n            }}\r\n            open={this.state.open}\r\n          >\r\n            <div className={this.props.classes.toolbarIcon}>\r\n              <IconButton onClick={this.handleDrawerClose}>\r\n                <ChevronLeftIcon />\r\n              </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n    \r\n            <ListItem button\r\n            onClick={()=>{this.SelectMenu('Dashboard')}}\r\n            >\r\n            <ListItemIcon>\r\n              <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dashboard\" />\r\n          </ListItem>\r\n          <ListItem button\r\n          onClick={()=>{this.SelectMenu('Commands')}}\r\n          >\r\n            <ListItemIcon>\r\n            <SimCardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Commands\" />\r\n          </ListItem>\r\n          <ListItem button\r\n          onClick={()=>{this.SelectMenu('Team')}}\r\n          >\r\n            <ListItemIcon>\r\n              <PeopleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Team\" />\r\n          </ListItem>\r\n         \r\n            </List>\r\n            <Divider />\r\n            <ListSubheader inset>Saved reports</ListSubheader>\r\n            <List>\r\n            <ListItem button   onClick={()=>{this.SelectMenu('Current month')}}>\r\n            <ListItemIcon>\r\n              <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Current month\" />\r\n          </ListItem>\r\n          <ListItem button   onClick={()=>{this.SelectMenu('Last three months')}}>\r\n            <ListItemIcon>\r\n              <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Last three months\" />\r\n          </ListItem>\r\n          <ListItem button   onClick={()=>{this.SelectMenu('Current year')}}>\r\n            <ListItemIcon>\r\n              <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Current year\" />\r\n          </ListItem>\r\n            \r\n            \r\n            \r\n            </List>\r\n          </Drawer>\r\n          <main className={this.props.classes.content}>\r\n            <div className={this.props.classes.appBarSpacer} />\r\n            <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n              <Grid container spacing={3}>\r\n                {/* Graph */}\r\n                <Grid item xs={12} md={8} lg={9}>\r\n                  <Paper className={fixedHeightPaper}>\r\n                    <Graph />\r\n                  </Paper>\r\n                </Grid>\r\n                {/* Recent SearchTime */}\r\n                <Grid item xs={12} md={4} lg={3}>\r\n                <Paper className={fixedHeightPaperTow}>\r\n                    < SearchTimeGraph />\r\n                  </Paper>\r\n                  <Paper className={fixedHeightPaperFirst}>\r\n                    <SearchTime />\r\n                  </Paper>\r\n                  \r\n                </Grid>\r\n                {/* Recent Table */}\r\n                <Grid item xs={20}>\r\n                  <div className={this.props.classes.paper}>\r\n                    <Table />\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n       \r\n    \r\n          </main>\r\n    \r\n        </div>\r\n      );\r\n    }\r\n      else if (this.state.menu==='Commands'){\r\n\r\n        return (\r\n          <div className={this.props.classes.root}>\r\n      \r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n      \r\n            <Toolbar className={this.props.classes.toolbar}>\r\n          \r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={this.handleDrawerOpen}\r\n              className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n            >\r\n  \r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n            Commands\r\n            </Typography>\r\n            \r\n           \r\n\r\n           \r\n\r\n              <Logout />\r\n           \r\n          \r\n          \r\n       \r\n  \r\n          </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n              variant=\"permanent\"\r\n              classes={{\r\n                paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n              }}\r\n              open={this.state.open}\r\n            >\r\n              <div className={this.props.classes.toolbarIcon}>\r\n                <IconButton onClick={this.handleDrawerClose}>\r\n                  <ChevronLeftIcon />\r\n                </IconButton>\r\n              </div>\r\n              <Divider />\r\n              <List>\r\n      \r\n              <ListItem button\r\n              onClick={()=>{this.SelectMenu('Dashboard')}}\r\n              >\r\n              <ListItemIcon>\r\n                <DashboardIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Dashboard\" />\r\n            </ListItem>\r\n            <ListItem button\r\n            onClick={()=>{this.SelectMenu('Commands')}}\r\n            >\r\n              <ListItemIcon>\r\n                <SimCardIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Commands\" />\r\n            </ListItem>\r\n            <ListItem button\r\n            onClick={()=>{this.SelectMenu('Team')}}\r\n            >\r\n              <ListItemIcon>\r\n                <PeopleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Team\" />\r\n            </ListItem>\r\n           \r\n              </List>\r\n              <Divider />\r\n\r\n              <ListSubheader inset>Saved reports</ListSubheader>\r\n\r\n              <List>\r\n              <ListItem button   onClick={()=>{this.SelectMenu('Current month')}}>\r\n              <ListItemIcon>\r\n                <AssignmentIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Current month\" />\r\n            </ListItem>\r\n            <ListItem button   onClick={()=>{this.SelectMenu('Last three months')}}>\r\n              <ListItemIcon>\r\n                <AssignmentIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Last three months\" />\r\n            </ListItem>\r\n            <ListItem button   onClick={()=>{this.SelectMenu('Current year')}}>\r\n              <ListItemIcon>\r\n                <AssignmentIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Current year\" />\r\n            </ListItem>\r\n              \r\n              \r\n              \r\n              </List>\r\n\r\n\r\n\r\n\r\n\r\n            </Drawer>\r\n\r\n            <main className={this.props.classes.content}>\r\n              <div className={this.props.classes.appBarSpacer} />\r\n              <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n\r\n              <Grid item  xs >\r\n              <div className={this.props.classes.table}>\r\n                  <SaltStack/>\r\n              </div>\r\n   \r\n                </Grid>\r\n\r\n              </Container>\r\n            </main>\r\n      \r\n          </div>\r\n        );}\r\n\r\n\r\n\r\n        else if (this.state.menu==='Current month'){\r\n\r\n          return (\r\n            <div className={this.props.classes.root}>\r\n        \r\n              <CssBaseline />\r\n              <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n        \r\n              <Toolbar className={this.props.classes.toolbar}>\r\n            \r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={this.handleDrawerOpen}\r\n                className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n              >\r\n    \r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n              Current month\r\n              </Typography>\r\n              \r\n             \r\n  \r\n  \r\n                <Logout />\r\n             \r\n            \r\n            \r\n         \r\n    \r\n            </Toolbar>\r\n              </AppBar>\r\n              <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                  paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n                }}\r\n                open={this.state.open}\r\n              >\r\n                <div className={this.props.classes.toolbarIcon}>\r\n                  <IconButton onClick={this.handleDrawerClose}>\r\n                    <ChevronLeftIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n        \r\n                <ListItem button\r\n                onClick={()=>{this.SelectMenu('Dashboard')}}\r\n                >\r\n                <ListItemIcon>\r\n                  <DashboardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Dashboard\" />\r\n              </ListItem>\r\n              <ListItem button\r\n              onClick={()=>{this.SelectMenu('Commands')}}\r\n              >\r\n                <ListItemIcon>\r\n                  <SimCardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Commands\" />\r\n              </ListItem>\r\n              <ListItem button\r\n              onClick={()=>{this.SelectMenu('Team')}}\r\n              >\r\n                <ListItemIcon>\r\n                  <PeopleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Team\" />\r\n              </ListItem>\r\n              \r\n                </List>\r\n                <Divider />\r\n  \r\n                <ListSubheader inset>Saved reports</ListSubheader>\r\n  \r\n                <List>\r\n                <ListItem button   onClick={()=>{this.SelectMenu('Current month')}}>\r\n                <ListItemIcon>\r\n                  <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Current month\" />\r\n              </ListItem>\r\n              <ListItem button   onClick={()=>{this.SelectMenu('Last three months')}}>\r\n                <ListItemIcon>\r\n                  <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Last three months\" />\r\n              </ListItem>\r\n              <ListItem button   onClick={()=>{this.SelectMenu('Current year')}}>\r\n                <ListItemIcon>\r\n                  <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Current year\" />\r\n              </ListItem>\r\n                \r\n                \r\n                \r\n                </List>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n              </Drawer>\r\n  \r\n              <main className={this.props.classes.content}>\r\n                <div className={this.props.classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n  \r\n                <Grid item  xs >\r\n                <div className={this.props.classes.table}>\r\n                    <CurrentMonth/>\r\n                </div>\r\n     \r\n                  </Grid>\r\n  \r\n                </Container>\r\n              </main>\r\n        \r\n            </div>\r\n          );\r\n              }\r\n\r\n              \r\n        else if (this.state.menu==='Current year'){\r\n\r\n          return (\r\n            <div className={this.props.classes.root}>\r\n        \r\n              <CssBaseline />\r\n              <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n        \r\n              <Toolbar className={this.props.classes.toolbar}>\r\n            \r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={this.handleDrawerOpen}\r\n                className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n              >\r\n    \r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n              Current year\r\n              </Typography>\r\n              \r\n             \r\n  \r\n          \r\n  \r\n                <Logout />\r\n             \r\n            \r\n            \r\n         \r\n    \r\n            </Toolbar>\r\n              </AppBar>\r\n              <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                  paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n                }}\r\n                open={this.state.open}\r\n              >\r\n                <div className={this.props.classes.toolbarIcon}>\r\n                  <IconButton onClick={this.handleDrawerClose}>\r\n                    <ChevronLeftIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n        \r\n                <ListItem button\r\n                onClick={()=>{this.SelectMenu('Dashboard')}}\r\n                >\r\n                <ListItemIcon>\r\n                  <DashboardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Dashboard\" />\r\n              </ListItem>\r\n              <ListItem button\r\n              onClick={()=>{this.SelectMenu('Commands')}}\r\n              >\r\n                <ListItemIcon>\r\n                  <SimCardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Commands\" />\r\n              </ListItem>\r\n              <ListItem button\r\n              onClick={()=>{this.SelectMenu('Team')}}\r\n              >\r\n                <ListItemIcon>\r\n                  <PeopleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Team\" />\r\n              </ListItem>\r\n             \r\n                </List>\r\n                <Divider />\r\n  \r\n                <ListSubheader inset>Saved reports</ListSubheader>\r\n  \r\n                <List>\r\n                <ListItem button   onClick={()=>{this.SelectMenu('Current month')}}>\r\n                <ListItemIcon>\r\n                  <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Current month\" />\r\n              </ListItem>\r\n              <ListItem button   onClick={()=>{this.SelectMenu('Last three months')}}>\r\n                <ListItemIcon>\r\n                  <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Last three months\" />\r\n              </ListItem>\r\n              <ListItem button   onClick={()=>{this.SelectMenu('Current year')}}>\r\n                <ListItemIcon>\r\n                  <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Current year\" />\r\n              </ListItem>\r\n                \r\n                \r\n                \r\n                </List>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n              </Drawer>\r\n  \r\n              <main className={this.props.classes.content}>\r\n                <div className={this.props.classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n  \r\n                <Grid item  xs >\r\n                <div className={this.props.classes.table}>\r\n                    <CurrentYear/>\r\n                </div>\r\n     \r\n                  </Grid>\r\n  \r\n                </Container>\r\n              </main>\r\n        \r\n            </div>\r\n          );\r\n              }\r\n\r\n             \r\n              \r\n\r\n              else if (this.state.menu==='Last three months'){\r\n\r\n                return (\r\n                  <div className={this.props.classes.root}>\r\n              \r\n                    <CssBaseline />\r\n                    <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n              \r\n                    <Toolbar className={this.props.classes.toolbar}>\r\n                  \r\n                    <IconButton\r\n                      edge=\"start\"\r\n                      color=\"inherit\"\r\n                      aria-label=\"open drawer\"\r\n                      onClick={this.handleDrawerOpen}\r\n                      className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n                    >\r\n          \r\n                      <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n                    Last three months\r\n                    </Typography>\r\n                    \r\n                   \r\n        \r\n                 \r\n        \r\n                      <Logout />\r\n                   \r\n                  \r\n                  \r\n               \r\n          \r\n                  </Toolbar>\r\n                    </AppBar>\r\n                    <Drawer\r\n                      variant=\"permanent\"\r\n                      classes={{\r\n                        paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n                      }}\r\n                      open={this.state.open}\r\n                    >\r\n                      <div className={this.props.classes.toolbarIcon}>\r\n                        <IconButton onClick={this.handleDrawerClose}>\r\n                          <ChevronLeftIcon />\r\n                        </IconButton>\r\n                      </div>\r\n                      <Divider />\r\n                      <List>\r\n              \r\n                      <ListItem button\r\n                      onClick={()=>{this.SelectMenu('Dashboard')}}\r\n                      >\r\n                      <ListItemIcon>\r\n                        <DashboardIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Dashboard\" />\r\n                    </ListItem>\r\n                    <ListItem button\r\n                    onClick={()=>{this.SelectMenu('Commands')}}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <SimCardIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Commands\" />\r\n                    </ListItem>\r\n                    <ListItem button\r\n                    onClick={()=>{this.SelectMenu('Team')}}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <PeopleIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Team\" />\r\n                    </ListItem>\r\n                  \r\n                  \r\n                      </List>\r\n                      <Divider />\r\n        \r\n                      <ListSubheader inset>Saved reports</ListSubheader>\r\n        \r\n                      <List>\r\n                      <ListItem button   onClick={()=>{this.SelectMenu('Current month')}}>\r\n                      <ListItemIcon>\r\n                        <AssignmentIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Current month\" />\r\n                    </ListItem>\r\n                    <ListItem button   onClick={()=>{this.SelectMenu('Last three months')}}>\r\n                      <ListItemIcon>\r\n                        <AssignmentIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Last three months\" />\r\n                    </ListItem>\r\n                    <ListItem button   onClick={()=>{this.SelectMenu('Current year')}}>\r\n                      <ListItemIcon>\r\n                        <AssignmentIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Current year\" />\r\n                    </ListItem>\r\n                      \r\n                      \r\n                      \r\n                      </List>\r\n        \r\n        \r\n        \r\n        \r\n        \r\n                    </Drawer>\r\n        \r\n                    <main className={this.props.classes.content}>\r\n                      <div className={this.props.classes.appBarSpacer} />\r\n                      <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n        \r\n                      <Grid item  xs >\r\n                      <div className={this.props.classes.table}>\r\n                          <LastThreeMonths/>\r\n                      </div>\r\n           \r\n                        </Grid>\r\n        \r\n                      </Container>\r\n                    </main>\r\n              \r\n                  </div>\r\n                );\r\n                    }\r\n                    \r\n              else if (this.state.menu==='Team'){\r\n\r\n                return (\r\n                  <div className={this.props.classes.root}>\r\n              \r\n                    <CssBaseline />\r\n                    <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n              \r\n                    <Toolbar className={this.props.classes.toolbar}>\r\n                  \r\n                    <IconButton\r\n                      edge=\"start\"\r\n                      color=\"inherit\"\r\n                      aria-label=\"open drawer\"\r\n                      onClick={this.handleDrawerOpen}\r\n                      className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n                    >\r\n          \r\n                      <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n                    Team\r\n                    </Typography>\r\n                    \r\n                   \r\n        \r\n                     \r\n        \r\n                      <Logout />\r\n                   \r\n                  \r\n                  \r\n               \r\n          \r\n                  </Toolbar>\r\n                    </AppBar>\r\n                    <Drawer\r\n                      variant=\"permanent\"\r\n                      classes={{\r\n                        paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n                      }}\r\n                      open={this.state.open}\r\n                    >\r\n                      <div className={this.props.classes.toolbarIcon}>\r\n                        <IconButton onClick={this.handleDrawerClose}>\r\n                          <ChevronLeftIcon />\r\n                        </IconButton>\r\n                      </div>\r\n                      <Divider />\r\n                      <List>\r\n              \r\n                      <ListItem button\r\n                      onClick={()=>{this.SelectMenu('Dashboard')}}\r\n                      >\r\n                      <ListItemIcon>\r\n                        <DashboardIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Dashboard\" />\r\n                    </ListItem>\r\n                    <ListItem button\r\n                    onClick={()=>{this.SelectMenu('Commands')}}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <SimCardIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Commands\" />\r\n                    </ListItem>\r\n                    <ListItem button\r\n                    onClick={()=>{this.SelectMenu('Team')}}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <PeopleIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Team\" />\r\n                    </ListItem>\r\n                   \r\n                      </List>\r\n                      <Divider />\r\n        \r\n                      <ListSubheader inset>Saved reports</ListSubheader>\r\n        \r\n                      <List>\r\n                      <ListItem button   onClick={()=>{this.SelectMenu('Current month')}}>\r\n                      <ListItemIcon>\r\n                        <AssignmentIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Current month\" />\r\n                    </ListItem>\r\n                    <ListItem button   onClick={()=>{this.SelectMenu('Last three months')}}>\r\n                      <ListItemIcon>\r\n                        <AssignmentIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Last three months\" />\r\n                    </ListItem>\r\n                    <ListItem button   onClick={()=>{this.SelectMenu('Current year')}}>\r\n                      <ListItemIcon>\r\n                        <AssignmentIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Current year\" />\r\n                    </ListItem>\r\n                      \r\n                      \r\n                      \r\n                      </List>\r\n        \r\n        \r\n        \r\n        \r\n        \r\n                    </Drawer>\r\n        \r\n                    <main className={this.props.classes.content}>\r\n                      <div className={this.props.classes.appBarSpacer} />\r\n                      <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n        \r\n                      <Grid item  xs >\r\n                      <div className={this.props.classes.table}>\r\n                          <Team/>\r\n                      </div>\r\n           \r\n                        </Grid>\r\n        \r\n                      </Container>\r\n                    </main>\r\n              \r\n                  </div>\r\n                );\r\n                    }\r\n              \r\n              \r\n}\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Dashboard);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass ForgotPassword extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.resetPass = this.resetPass.bind(this);\r\n    this.state = {\r\n      email: { value: null, error: false, helperText: null },\r\n      msg: null\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    reset_password: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n  \r\n\r\n  resetPass(event){\r\n    event.preventDefault();\r\n    if (this.emailInput.value === \"\") {\r\n      this.setState({\r\n        email: {\r\n          value: this.emailInput.value,\r\n          error: true,\r\n          helperText: \"Your email must be specified.\"\r\n        }\r\n      });\r\n      this.emailInput.focus();\r\n    }\r\n    else{\r\n    \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const email = this.emailInput.value\r\n        // Request body\r\n        const body = JSON.stringify({ email });\r\n    \r\n        axios.post('/forgot_password', body, config)\r\n        .then(res =>{\r\n            this.setState({ msg: res.message })\r\n            }\r\n          \r\n        )\r\n        .catch(err => {\r\n            this.setState({ msg: err.message })\r\n      \r\n        })\r\n        \r\n     }\r\n    \r\n    \r\n    }\r\n\r\n\r\n  render(){\r\n    const { classes } = this.props;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n             Enter Your Email Address\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={this.resetPass} >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              required\r\n              inputRef={input => (this.emailInput = input)}\r\n              error={this.state.email.error}\r\n              helperText={this.state.email.helperText}\r\n            />\r\n       <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n             Reset Password\r\n            </Button>\r\n\r\n            {this.state.msg  ? (\r\n            <Alert severity=\"error\">{this.state.msg}</Alert>\r\n              ) : (\r\n              null\r\n              )}\r\n             <Grid item xs>\r\n                <Link onClick={this.props.handler} variant=\"body2\">\r\n                  Back to login\r\n                </Link>\r\n              </Grid>\r\n          </form>\r\n        </div>\r\n       \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(\r\n)(withStyles(styles)(ForgotPassword))","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass ChangePasswordForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updatePass = this.updatePass.bind(this);\r\n    this.state = {\r\n      email: { value: null, error: false, helperText: null },\r\n      old_password1: { value: null, error: false, helperText: null },\r\n      old_password2: { value: null, error: false, helperText: null },\r\n      new_password: { value: null, error: false, helperText: null },\r\n      msg: null\r\n    };\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error } = this.props;\r\n    if (error !== prevProps.error) {\r\n      // Check for register error\r\n      if (error.id === 'Weak Password') {\r\n        this.setState({ msg: error.msg.msg });\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  updatePass(event){\r\n    event.preventDefault();\r\n    if (this.emailInput.value === \"\") {\r\n      this.setState({\r\n        email: {\r\n          value: this.emailInput.value,\r\n          error: true,\r\n          helperText: \"Your email must be specified.\"\r\n        }\r\n      });\r\n      this.emailInput.focus();\r\n    }\r\n    else{\r\n    \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n         const user = {\r\n              email: this.emailInput.value,\r\n              old_password1: this.old_password1.value,\r\n              old_password2: this.old_password2.value,\r\n              new_password: this.new_password.value,\r\n\r\n            };\r\n\r\n\r\n        // Request body\r\n        const body = JSON.stringify({ user });\r\n    \r\n        axios.post('/forgot_password', body, config)\r\n        .then(res =>{\r\n            this.setState({ msg: res.message })\r\n            }\r\n          \r\n        )\r\n        .catch(err => {\r\n            this.setState({ msg: err.message })\r\n      \r\n        })\r\n        \r\n     }\r\n  }\r\n\r\n\r\n  render(){\r\n    const { classes } = this.props;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Update Password\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={this.signIn} >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              required\r\n              inputRef={input => (this.emailInput = input)}\r\n              error={this.state.email.error}\r\n              helperText={this.state.email.helperText}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password1\"\r\n              label=\"Password1\"\r\n              type=\"password1\"\r\n              id=\"password1\"\r\n              autoComplete=\"current-password\"\r\n              inputRef={input => (this.passwordInput = input)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password2\"\r\n              label=\"Password2\"\r\n              type=\"password2\"\r\n              id=\"password2\"\r\n              autoComplete=\"current-password\"\r\n              inputRef={input => (this.passwordInput = input)}\r\n            />\r\n           \r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Update Password\r\n            </Button>\r\n\r\n            {this.state.msg  ? (\r\n            <Alert severity=\"error\">{this.state.msg}</Alert>\r\n              ) : (\r\n              null\r\n              )}\r\n              \r\n              <Grid item xs>\r\n                <Link onClick={this.props.handler} variant=\"body2\">\r\n                  Back to login\r\n                </Link>\r\n              </Grid>\r\n            \r\n          </form>\r\n        </div>\r\n        \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n)(withStyles(styles)(ChangePasswordForm))","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { login } from '../../actions/authActions';\r\nimport { clearErrors } from '../../actions/errorActions';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { StoreTwoTone } from '@material-ui/icons';\r\nimport store from '../../store';\r\nimport { Route } from 'react-router-dom';\r\nimport ForgotPasswordForm from './ForgotPasswordForm';\r\nimport ChangePasswordForm from './ChangePasswordForm';\r\n\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.signIn = this.signIn.bind(this);\r\n    this.handler = this.handler.bind(this);\r\n    this.state = {\r\n      email: { value: null, error: false, helperText: null },\r\n      password: { value: null, error: false, helperText: null },\r\n      msg: null\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, isAuthenticated } = this.props;\r\n    if (error !== prevProps.error) {\r\n      // Check for register error\r\n      if (error.id === 'LOGIN_FAIL') {\r\n        this.setState({ msg: error.msg });\r\n        setTimeout(function(){\r\n          this.setState({msg:null});\r\n          }.bind(this),3000);  // clear error after 3 seconds\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n   handler(){\r\n     this.setState(\r\n      {screen: 'login'}\r\n     )\r\n   }\r\n  \r\n\r\n   signIn(event){\r\n    event.preventDefault();\r\n    if (this.emailInput.value === \"\") {\r\n      this.setState({\r\n        email: {\r\n          value: this.emailInput.value,\r\n          error: true,\r\n          helperText: \"Your email must be specified.\"\r\n        }\r\n      });\r\n      this.emailInput.focus();\r\n    }\r\n    else{\r\n      const user = {\r\n        email: this.emailInput.value,\r\n        password: this.passwordInput.value,\r\n       };\r\n  \r\n      const log = this.props.login(user);\r\n      console.log(log)\r\n      this.props.history.push('/'); \r\n    }\r\n\r\n  }\r\n  \r\n\r\n  render(){\r\n    if (this.state.screen === 'forgot')\r\n      return <ForgotPasswordForm handler={this.handler}/>\r\n    if (this.state.screen === 'change')\r\n      return <ChangePasswordForm handler={this.handler}/>\r\n\r\n    const { classes } = this.props;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={this.signIn} >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              required\r\n              inputRef={input => (this.emailInput = input)}\r\n              error={this.state.email.error}\r\n              helperText={this.state.email.helperText}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              inputRef={input => (this.passwordInput = input)}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n\r\n            {this.state.msg  ? (\r\n            <Alert severity=\"error\">{this.state.msg}</Alert>\r\n              ) : (\r\n              null\r\n              )}\r\n\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link onClick={() => this.setState({screen:'forgot'})} variant=\"body2\">\r\n                {\"Reset Your Password\"}\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link onClick={() => this.setState({screen:'change'})} variant=\"body2\">\r\n                  {\"Do you want to update your password?\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { login, clearErrors }\r\n)(withStyles(styles)(LoginForm))","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport * as authActions from '../../actions/authActions'\r\nimport Dashboard from '../../Dashboard';\r\nimport LoginForm from '../auth/LoginForm';\r\nimport ChangePasswordForm from '../auth/ChangePasswordForm';\r\nimport PropTypes from 'prop-types';\r\nimport ForgotPasswordForm from '../auth/ForgotPasswordForm';\r\n\r\nclass Routes extends Component {\r\n\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n    // Similar to componentDidMount and componentDidUpdate:\r\n  render() {\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <PrivateRoute exact path=\"/\" component={Dashboard} authed={this.props.auth.isAuthenticated} />\r\n          <Route exact path=\"/login\" component={LoginForm} />\r\n\r\n\r\n        </div>\r\n      </BrowserRouter>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, authed, ...rest }) => (\r\n  // console.log(\"private routhh\", authed),\r\n  <Route\r\n    {...rest}\r\n    render={props => (\r\n      authed\r\n        ? <Component {...props} />\r\n        : <LoginForm {...props}/>\r\n    )}\r\n  />\r\n);\r\n\r\n\r\nconst mapStateToProps = state => ({ auth: state.auth });\r\n\r\nexport default connect(mapStateToProps, authActions)(Routes);\r\n","import React, { Component } from 'react';\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './App.css';\r\nimport Routes from './Component/routers/Routes';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    // console.log(\"rendering\")\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(\"dispatchhhhh from App\")\r\n    //store.dispatch(loadUser());\r\n    //console.log(store.getState(),\"state from app\");\r\n\r\n\r\n  }\r\n\r\n\r\n  static propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n  };\r\n\r\n\r\n  render() {\r\n     return (\r\n      <Routes />\r\n     )\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Dashboard from './Dashboard';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore } from 'redux';\r\nimport appReducer from './reducers/index';\r\nimport {Provider} from 'react-redux';\r\nimport App from './App';\r\nimport store from './store';\r\n\r\n// const store = createStore(appReducer);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n   , document.getElementById('root'),\r\n  );\r\n\r\n\r\n// ReactDOM.render( <Provider store={store}>\r\n//    <Dashboard />\r\n// </Provider> , document.getElementById('root'));\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();"],"sourceRoot":""}