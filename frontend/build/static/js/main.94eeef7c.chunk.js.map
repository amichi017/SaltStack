{"version":3,"sources":["reducers/errorReducer.js","reducers/authReducer.js","reducers/reducersDate.js","reducers/saltReturns.js","reducers/saveMinion.js","reducers/listMinions.js","reducers/index.js","actions/types.js","actions/errorActions.js","actions/authActions.js","store.js","actions/date.js","Component/Title.js","Component/Graph.js","Component/SearchTime.js","Component/Table.js","Component/MinionCard.js","Component/auth/Logout.js","Component/SaltStack.js","Component/TeamCard.js","Component/Team.js","Dashboard.js","serviceWorker.js","Component/auth/ForgotPasswordForm.js","Component/auth/ChangePasswordForm.js","Component/auth/LoginForm.js","Component/routers/Routes.js","App.js","index.js"],"names":["initialState","msg","status","id","token","isAuthenticated","isLoading","user","start","Date","end","saltReturns","saveMinion","listMinions","appReducer","combineReducers","state","action","type","payload","date","auth","localStorage","setItem","access_token","removeItem","error","returnErrors","loadUser","dispatch","getState","axios","get","tokenConfig","then","res","data","catch","err","response","register","first_name","last_name","email","password","body","JSON","stringify","post","headers","console","log","login","message","logout","config","middleWare","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","str","toDateString","MonthStart","String","parseInt","getMonth","yearStart","getFullYear","DayStart","getDate","Start","MonthEnd","yearEnd","DayEnd","End","minions","year","dayEnd","satrtCurrentMonth","satrtMonth","endtLastThreeMonths","url","concat","Title","props","Typography","component","variant","color","gutterBottom","children","createData","time","Success","Fail","amount","demoOnClick","e","parseNumber","hower","slice","Chart","graphIsPrepared","nextProps","this","toLocaleDateString","setState","tempArray","Succeeded","EndStart","filter","item","jid","forEach","Array","isArray","return","dataTemp","Object","entries","map","flag","values","result","startTemp","endTemp","getTime","temp","Fragment","style","paddingLeft","onClick","margin","top","right","bottom","left","dataKey","stroke","React","PureComponent","connect","withStyles","theme","root","display","marginLeft","spacing","marginTop","Deposits","handleDateChangeStart","bind","handleDateChangeEnd","dateIsChanged","booleanStart","booleanEnd","utils","DateFnsUtils","Grid","container","justify","label","format","value","onChange","KeyboardButtonProps","flex","paddingTop","Button","endIcon","Component","ownProps","minet","month","day","tableIcons","Add","forwardRef","ref","AddBox","Check","Clear","Delete","Edit","DetailPanel","ChevronRight","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ArrowDownward","ThirdStateCheck","Remove","ViewColumn","dataColumns","title","field","cellStyle","x","dataTable","Orders","selestMinion","handleClickOpen","handleClose","Returns","dialogOpen","minion","setTimeout","setHours","saltTemp","name","_id","event","rowData","nextState","columns","icons","onRowClick","evt","selectedRow","options","exportButton","filtering","actions","icon","tooltip","Dialog","open","onClose","aria-describedby","maxWidth","scroll","aria-labelledby","DialogTitle","fontSize","undefined","DialogContent","dividers","minWidth","DialogActions","autoFocus","height","flexGrow","text","TreeItem","TreeItemText","MinionCard","onClickMinion","handleClickButton","commentg","comment","defer","click","listOpen","index","classes","bullet","Card","className","CardContent","List","root2","ListItem","button","ListItemIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","nested","CardActions","width","backgroundColor","palette","background","paper","transform","overflow","pos","marginBottom","flexWrap","Logout","border","SaltStack","reason","warninginput","warningNoMinionSelected","handleClick","countSaveMinion","input","clickSave","history","unshift","words","split","parms_send","parms","func","tgt","salt_cmd","tokenTemp","clickOpen","sentCommand","getMinionsFromServer","i","length","push","alert","menu","arr","row","commntId","command","flexDirection","Paper","IconButton","iconButton","aria-label","InputBase","autoComplete","target","placeholder","inputProps","Divider","divider","orientation","size","Comments","light","paperParms","inputparms","ButtonGroup","flexFlow","MaterialTable","Alert","severity","selection","Snackbar","autoHideDuration","padding","alignItems","minionStyle","iconButtonParms","dividerParms","TeamCard","deleteIcon","expanded","UpperCase","isDelete","toUpperCase","prevState","Role","ReturnPassword","Email","role","delete","colors","Math","floor","random","CardHeader","avatar","Avatar","subheader","paragraph","mail","disableSpacing","DialogContentText","media","expand","transition","transitions","create","duration","shortest","expandOpen","red","wordWrap","Team","handleExpandClick","ClickFab","signIn","handleInputChange","handleClickShowPassword","handleMouseDownPassword","handleClickShowPasswordReturn","handleMouseDownPasswordReturn","initTeam","fab","Password","showPasswordReturn","showPassword","errPassword","saveCard","counter","err_first_name","err_last_name","err_Role","err_Email","err_Password","no_add_card","lastName","preventDefault","strongRegex","RegExp","emailRegex","test","UnsecuredPassword","Fab","form","onSubmit","TextField","required","fullWidth","InputProps","startAdornment","InputAdornment","position","endAdornment","onMouseDown","startIcon","justifyContent","outline","outlineOffset","Dashboard","handleDrawerOpen","handleDrawerClose","SelectMenu","fixedHeightPaper","clsx","fixedHeight","CssBaseline","AppBar","appBar","appBarShift","Toolbar","toolbar","edge","menuButton","menuButtonHidden","noWrap","Drawer","drawerPaper","drawerPaperClose","toolbarIcon","content","appBarSpacer","Container","xs","md","lg","Graph","SearchTime","Table","table","paddingRight","mixins","zIndex","drawer","easing","sharp","leavingScreen","enteringScreen","marginRight","whiteSpace","overflowX","breakpoints","up","paddingBottom","AccountCircleIcon","NotificationsIcon","Boolean","location","hostname","match","ForgotPassword","resetPass","helperText","emailInput","focus","submit","Link","handler","secondary","main","ChangePasswordForm","updatePass","old_password1","old_password2","new_password","prevProps","inputRef","passwordInput","LoginForm","screen","ForgotPasswordForm","FormControlLabel","control","Checkbox","clearErrors","Routes","exact","path","authed","PrivateRoute","rest","render","authActions","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.94eeef7c.chunk.js","sourcesContent":["import {GET_ERRORS, CLEAR_ERRORS} from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    msg: {},\r\n    status: null,\r\n    id: null\r\n}\r\n\r\n\r\nexport default function(state=initialState, action) {\r\n\r\n    switch(action.type){\r\n        case GET_ERRORS:\r\n            return {\r\n                msg: action.payload.msg,\r\n                status: action.payload.status,\r\n                id: action.payload.id\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                msg: {},\r\n                status: null,\r\n                id: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    isAuthenticated: null,\r\n    isLoading: false,\r\n    user: null,\r\n\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: action.payload\r\n            };\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', action.payload.access_token);\r\n            return {\r\n                token: action.payload.access_token,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n            };\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n        case REGISTER_FAIL:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                isLoading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"," import {DATE_SELECT} from '../actions/types';\r\n\r\n\r\n const initialState = {\r\n\r\n     start: new Date(),\r\n     end: new Date(),\r\n\r\n\r\n};\r\n\r\n export default function(state=initialState, action) {\r\n//console.log(\"state\",state);\r\n  switch(action.type){\r\n      case DATE_SELECT:\r\n        return {\r\n                start:action.payload.start,\r\n                end:action.payload.end,\r\n\r\n              };\r\n\r\n\r\n        default:\r\n               return state;\r\n  }\r\n\r\n }\r\n\r\n\r\n","\r\n import {SALT_RETURNS} from '../actions/types';\r\n\r\n\r\n const initialState = {\r\n    saltReturns:null,\r\n};\r\n\r\nexport default function(state=initialState, action) { \r\n//console.log(\"SALT_RETURNS\",action.payload);\r\nswitch(action.type){\r\n    case SALT_RETURNS:\r\n    return {\r\n        saltReturns:action.payload,\r\n    };\r\n    default:\r\n        return state;\r\n }\r\n}","\r\nimport {SAVE_MINION} from '../actions/types';\r\n\r\n\r\n const initialState = {\r\n    saveMinion:[],\r\n};\r\n\r\nexport default function(state=initialState, action) { \r\n //console.log(\"SALT_RETURNS\",action.payload);\r\nswitch(action.type){\r\n    case SAVE_MINION:\r\n    return {\r\n        saveMinion:action.payload,\r\n    };\r\n    default:\r\n        return state;\r\n }\r\n}","\r\nimport {LIST_MINIONS} from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n   listMinions:[],\r\n};\r\n\r\nexport default function(state=initialState, action) { \r\n    //console.log(action.payload,'action.payload')\r\nswitch(action.type){\r\n   case LIST_MINIONS:\r\n    return {\r\n        listMinions:action.payload,\r\n    };\r\n   default:\r\n       return state;\r\n}\r\n}","import {combineReducers} from 'redux';\r\nimport errorReducer from './errorReducer';\r\nimport authReducer from './authReducer';\r\nimport reducerDate from './reducersDate';\r\nimport saltReturns  from './saltReturns';\r\nimport saveMinion  from './saveMinion';\r\nimport listMinions  from './listMinions';\r\n\r\nconst appReducer = combineReducers({\r\n  saltReturns:saltReturns,\r\n  date: reducerDate,\r\n  auth: authReducer,\r\n  error: errorReducer,\r\n  saveMinion:saveMinion,\r\n  listMinions:listMinions,\r\n  \r\n\r\n});\r\n\r\nexport default appReducer;\r\n","export const USER_LOADING = \"USER_LOADING\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\nexport const DATE_SELECT = \"DATE_SELECT\";\r\nexport const SALT_RETURNS = \"SALT_RETURNS\";\r\nexport const SAVE_MINION = \"SAVE_MINION\";\r\nexport const LIST_MINIONS = \"LIST_MINIONS\";\r\nexport const TEAM_LIST = \"TEAM_LIST\";","import { GET_ERRORS, CLEAR_ERRORS} from './types';\r\n\r\n// Return errors\r\nexport const returnErrors = (msg, status, id = null) => {\r\n    // console.log(msg,status)\r\n    return {\r\n        type: GET_ERRORS,\r\n        payload: { msg, status, id}\r\n    };\r\n};\r\n\r\n// Clear errors\r\nexport const clearErrors = () => {\r\n    return {\r\n        type: CLEAR_ERRORS\r\n    };\r\n};","import axios from 'axios';\r\nimport { returnErrors } from './errorActions';\r\n\r\nimport {\r\nAUTH_ERROR,\r\nLOGIN_SUCCESS,\r\nLOGIN_FAIL,\r\nLOGOUT_SUCCESS,\r\nREGISTER_SUCCESS,\r\nREGISTER_FAIL,\r\nUSER_LOADING,\r\nUSER_LOADED\r\n} from './types';\r\n\r\n\r\n\r\n// Check token & load user\r\nexport const loadUser = () => (dispatch, getState) => {\r\n    // User loading\r\n    dispatch({ type: USER_LOADING });\r\n    axios\r\n      .get('/auth/user', tokenConfig(getState))\r\n      .then(res =>\r\n        dispatch({\r\n          type: USER_LOADED,\r\n          payload: res.data\r\n        })\r\n      )\r\n      .catch(err => {\r\n        if(err.response){\r\n            dispatch(returnErrors(err.response.data, err.response.status));\r\n            dispatch({\r\n                type: AUTH_ERROR\r\n              });\r\n        }\r\n      });\r\n  };\r\n\r\n\r\nexport const register = ({ first_name, last_name, email, password }) => dispatch => {\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    // Request body\r\n    const body = JSON.stringify({first_name, last_name, email, password });\r\n     \r\n    axios.post('/register', body, config)\r\n    .then(res => dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data\r\n    }))\r\n    .catch(err => {\r\n        console.log(err)\r\n        dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        })\r\n    })\r\n}\r\n\r\nexport const login = ({ email, password }) => dispatch => {\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    // Request body\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    axios.post('/auth', body, config)\r\n    .then(res => dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n            \r\n    }))\r\n    .catch(err => {\r\n        dispatch(returnErrors(err.response.data.message, err.response.status, 'LOGIN_FAIL'));\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    })\r\n}\r\n\r\n\r\n// Logout User\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT_SUCCESS\r\n    })\r\n  };\r\n\r\n  \r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n       // Get token from localstorage\r\n       const token = getState().auth.token;\r\n  \r\n       // Headers\r\n       const config = {\r\n           headers: {\r\n               \"Content-type\": \"application/json\"\r\n           }\r\n       }\r\n   \r\n       // If token, add to headers\r\n       if(token) {\r\n          config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n       }\r\n\r\n    return config;\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nimport authReducer from './reducers/authReducer';\r\nimport { loadUser } from './actions/authActions';\r\n\r\nconst initialState = {};\r\n\r\nconst middleWare = [thunk];\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeEnhancers(applyMiddleware(...middleWare))\r\n);\r\n\r\n// store.dispatch(loadUser());\r\nexport default store;","import axios from 'axios';\r\nimport store from '../store'\r\n import { DATE_SELECT, SALT_RETURNS,LIST_MINIONS,TEAM_LIST} from './types';\r\n import data from '../Component/test.json';\r\n // Date is select\r\n export const dateSelect = (start , end) => {\r\n\r\n     return  {\r\n                 type: DATE_SELECT,\r\n                 payload:{start,end}\r\n              };\r\n     // console.log(\"start \",start);\r\n     // console.log(\"end \",end);\r\n\r\n }\r\n export const listMinions =  () => (dispatch, getState) => {\r\n\r\n    axios.get('/get_connected_minions',tokenConfig(getState))\r\n    .then((res) => {\r\n            let minions=[];\r\n            for(let i=0;i<res.data.result.length;i++){\r\n               let minion={name:res.data.result[i]};\r\n               minions.push(minion);\r\n            }\r\n            //console.log(minions,\"minions\");   \r\n            store.dispatch({\r\n                type: TEAM_LIST,\r\n                payload: minions\r\n            });\r\n    })\r\n    .catch(err => {\r\n        console.log(err,\"err get_connected_minions\");\r\n\r\n       });\r\n    // console.log(\"start \",start);\r\n    // console.log(\"end \",end);\r\n\r\n}\r\nexport const teamList =  () => (dispatch, getState) => {\r\n\r\n    axios.get('/get_users',tokenConfig(getState))\r\n    .then((res) => { \r\n            store.dispatch({\r\n                type: TEAM_LIST,\r\n                payload: res.data\r\n            });\r\n    })\r\n    .catch(err => {\r\n        console.log(err);\r\n\r\n       });\r\n    // console.log(\"start \",start);\r\n    // console.log(\"end \",end);\r\n\r\n}\r\n//  // Clear date\r\n//   export const saltReturns =  () => (dispatch, getState) => {\r\n\r\n//     const time =new Date().toDateString();\r\n//     let Month= String(parseInt(store.getState().date.start.getMonth()));\r\n//     Month=parseInt(Month)<10?\"0\"+Month:Month;\r\n//     let year=String(store.getState().date.start.getFullYear());\r\n\r\n\r\n//     let startYear=new Date(year,Month,store.getState().date.start.getDate());\r\n//     let endYear=store.getState().date.end;\r\n\r\n//     console.log(startYear,\"startYear\");\r\n//     console.log(endYear,\"endYear\");\r\n\r\n\r\n//  if(store.getState().auth.token !== null){   }  // console.log(\"ppppppppppppppppp\");}\r\n\r\n//    let data=[];\r\n\r\n// //  for (let index = startYear; index <= endYear; index.setFullYear(index.getFullYear() + 1)) {\r\n//     let index = startYear\r\n//     let url='/api/saltReturns/apply/'+index.getFullYear();\r\n//     console.log(\"url\" ,url);\r\n//     axios.get(url, tokenConfig(getState))\r\n//     .then((res) => {\r\n//         console.log(\"res.data\" ,res.data);\r\n//         store.dispatch({\r\n//             type: SALT_RETURNS,\r\n//             payload: res.data\r\n//         })\r\n\r\n//     })\r\n//     .catch(err => {\r\n//         console.log(err,\"error in data\");\r\n\r\n//        });\r\n//  //}\r\n\r\n// console.log(store.getState(),\"the store from date \");\r\n// };\r\n //Clear date\r\n export const saltReturns =  (str) => (dispatch, getState) => {\r\n     //console.log(\"----------------------storeeeee--------------\\n\",store)\r\n     const time =new Date().toDateString();\r\n        let MonthStart= String(parseInt(store.getState().date.start.getMonth()+1));\r\n        MonthStart=parseInt(MonthStart)<10?\"0\"+MonthStart:MonthStart;\r\n        let yearStart=String(store.getState().date.start.getFullYear());\r\n        let DayStart=store.getState().date.start.getDate();\r\n        let Start=yearStart+String(MonthStart)+String(DayStart)+\"000000000000\"\r\n\r\n        let MonthEnd= String(parseInt(store.getState().date.end.getMonth())+1);\r\n        MonthEnd=parseInt(MonthEnd)<10?\"0\"+MonthEnd:MonthEnd;\r\n        let yearEnd=String(store.getState().date.end.getFullYear());\r\n        let DayEnd=store.getState().date.end.getDate()\r\n        //let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"000000000000\"\r\n        let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"235959595959\"\r\n        //  let startYear=new Date(year,Month,store.getState().date.start.getDate());\r\n        //  let endYear=store.getState().date.end;\r\n        //  let index = startYear;\r\n // if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\r\n        let minions=[];\r\n// for (let index = startYear; index <= endYear; index.setFullYear(index.getFullYear() + 1)) {\r\n   \r\n     if(str === \"CurrentYear\"){\r\n        \r\n       \r\n        let year=String(new Date().getFullYear());\r\n        let dayEnd=String(new Date(year, 12, 0).getDate());\r\n\r\n        Start= year+\"0101\"+\"000000000000\";\r\n        End= year+\"12\"+dayEnd+\"235959595959\";\r\n     }\r\n     else if(str === \"CurrentMonth\"){\r\n        \r\n       \r\n        let year=String(new Date().getFullYear());\r\n        let dayEnd=String(new Date(year, new Date().getMonth()+1, 0).getDate());\r\n        let satrtCurrentMonth=(new Date().getMonth()+1);\r\n        satrtCurrentMonth=parseInt( satrtCurrentMonth)<10?\"0\"+ satrtCurrentMonth: satrtCurrentMonth;\r\n        Start= year+satrtCurrentMonth+\"01\"+\"000000000000\";\r\n        End= year+satrtCurrentMonth+dayEnd+\"235959595959\";\r\n     }\r\n     else if(str === \"LastThreeMonths\"){\r\n        \r\n       \r\n        let year=String(new Date().getFullYear());\r\n        let dayEnd=String(new Date(year, new Date().getMonth(), 0).getDate());\r\n        let satrtMonth=new Date(2020, new Date().getMonth()-2, 1).getMonth();\r\n        satrtMonth=parseInt(satrtMonth)<10?\"0\"+satrtMonth:satrtMonth;\r\n        let endtLastThreeMonths=String(new Date().getMonth());\r\n        endtLastThreeMonths=parseInt( endtLastThreeMonths)<10?\"0\"+ endtLastThreeMonths: endtLastThreeMonths;\r\n        Start= year+satrtMonth+\"01\"+\"000000000000\";\r\n        End= year+endtLastThreeMonths+dayEnd+\"235959595959\";\r\n     }\r\n     console.log(Start,\"Start\")\r\n     console.log(End,\"End\")\r\n     let url='/api/saltReturns/apply/'+Start+\"/\"+End;\r\n     //console.log(\"url\" ,url);\r\n     axios.get(url, tokenConfig(getState))\r\n    .then((res) => {\r\n\r\n        minions=minions.concat(res.data);\r\n        console.log(minions);\r\n       /// if(index === endYear){console.log(res,\"res \");}\r\n        store.dispatch({\r\n            type: SALT_RETURNS,\r\n            payload: minions\r\n        })\r\n        // console.log(res,\"res\");\r\n    })\r\n    .catch(err => {\r\n        console.log(err,\"error in data\");\r\n\r\n       });\r\n   // }\r\n\r\n\r\n       //console.log(store.getState(),\"the store \");\r\n       //console.log(minions,\"minions \");\r\n};\r\n\r\n\r\n\r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n   // console.log(\"getstatteeeeeslatl\",getState())\r\n    // Get token from localstorage\r\n    const token = getState().auth.token;\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"multipart/form-data\"\r\n        }\r\n    }\r\n\r\n    // If token, add to headers\r\n    if(token) {\r\n       config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n    }\r\n\r\n return config;\r\n}\r\n\r\n\r\n\r\n\r\n// export const saltReturns =  () => (dispatch, getState) => {\r\n\r\n//     const time =new Date().toDateString();\r\n\r\n// // if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\r\n//     axios.get('/api/saltReturns/apply/2020', tokenConfig(getState))\r\n//    .then((res) => {\r\n\r\n//        // console.log(res,\"res\");\r\n//    store.dispatch({\r\n//        type: SALT_RETURNS,\r\n//        payload: res.data\r\n//    })})\r\n//    .catch(err => {\r\n//        console.log(err,\"error in data\");\r\n\r\n//       });\r\n\r\n//       console.log(store.getState(),\"the store \");\r\n// };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};","import React from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {dateSelect} from '../actions/date';\r\nimport { LineChart,\r\n         Line,\r\n         XAxis,\r\n         YAxis,\r\n         Label,\r\n         ResponsiveContainer,\r\n         Tooltip,\r\n         Legend,\r\n         CartesianGrid  \r\n} from 'recharts';\r\nimport store from '../store';\r\nimport Title from './Title';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { saltReturns } from '../actions/date';\r\nimport { Store } from '@material-ui/icons';\r\n// import SaltData from'../demo/jsonPars.json';\r\n// Generate Sales Data\r\n\r\n\r\nconst time =(str)=>{\r\n  const year =str.slice(0,4);\r\n  const month =String(parseInt(str.slice(4,6)));\r\n  const day =str.slice(6,8);\r\n  const hower= str.slice(8,10);\r\n  //console.log(month,'montg from graph');\r\n  const minet=str.slice(10,12);\r\n  return String(hower)+\":\"+String(minet);\r\n\r\n}\r\nfunction createData(time,Success,Fail, amount) {\r\n  return { time,Success,Fail, amount };\r\n}\r\n\r\nconst INIT_DATA = [\r\n  createData('00:00',0,0, 0),\r\n  createData('03:00',0,0, 0),\r\n  createData('06:00',0,0, 0),\r\n  createData('09:00',0,0, 0),\r\n  createData('12:00',0,0, 0),\r\n  createData('15:00',0,0, 0),\r\n  createData('18:00',0,0, 0),\r\n  createData('21:00',0,0, 0),\r\n  createData('24:00',0,0, 0),\r\n];\r\nconst demoOnClick= (e)=>{\r\n  // if(e){if(e.activeLabel){console.log(e.activeLabel);}}\r\n};\r\nconst parseNumber= (str)=>{\r\n  let hower= parseInt(str.slice(8,10));\r\n  if(hower<=3){return \"03:00\"};\r\n  if(hower<=6){return \"06:00\"};\r\n  if(hower<=9){return \"09:00\"};\r\n  if(hower<=12){return \"12:00\"};\r\n  if(hower<=15){return \"15:00\"};\r\n  if(hower<=18){return \"18:00\"};\r\n  if(hower<=21){return \"21:00\"};\r\n  if(hower<=24){return \"24:00\"};\r\n  return \"00:00\";\r\n \r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    marginLeft: theme.spacing(50),\r\n    marginTop:theme.spacing(11),\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n});\r\n\r\n class Chart extends React.PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  \r\n    this.state = {\r\n      start: new Date(),\r\n      end:new Date(),\r\n      graphIsPrepared:true,\r\n      data:  [{ time:\"00:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"03:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"06:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"09:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"12:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"15:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"18:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"21:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"24:00\",Success:0,Fail:0, amount:0 },]\r\n  };\r\n}\r\n\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if( (((this.props.date.start.toLocaleDateString()!== nextProps.date.start.toLocaleDateString()) || (this.props.date.end.toLocaleDateString()!== nextProps.date.end.toLocaleDateString() )))){\r\n      this.setState({start:nextProps.date.start,end:nextProps.date.end});\r\n      const start=store.getState().date.start;\r\n      const end=store.getState().date.end;\r\n      this.setState({graphIsPrepared:false})\r\n      let tempArray=[\r\n        { time:\"00:00\",Succeeded:0,Fail:0, amount:0 },\r\n        { time:\"03:00\",Succeeded:0,Fail:0, amount:0 },\r\n        { time:\"06:00\",Succeeded:0,Fail:0, amount:0 },\r\n        { time:\"09:00\",Succeeded:0,Fail:0, amount:0 },\r\n        { time:\"12:00\",Succeeded:0,Fail:0, amount:0 },\r\n        { time:\"15:00\",Succeeded:0,Fail:0, amount:0 },\r\n        { time:\"18:00\",Succeeded:0,Fail:0, amount:0 },\r\n        { time:\"21:00\",Succeeded:0,Fail:0, amount:0 },\r\n        { time:\"24:00\",Succeeded:0,Fail:0, amount:0 },\r\n      ];\r\n      if(nextProps.saltReturns.saltReturns!==null)\r\n      {\r\n        let MonthEnd= String(parseInt(store.getState().date.end.getMonth())+1);\r\n        MonthEnd=parseInt(MonthEnd)<10?\"0\"+MonthEnd:MonthEnd;\r\n        let yearEnd=String(store.getState().date.end.getFullYear());\r\n        let DayEnd=store.getState().date.end.getDate()\r\n        DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n        let EndStart=parseInt(yearEnd+String(MonthEnd)+String(DayEnd)+\"000000000000\");\r\n\r\n        let End=parseInt(yearEnd+String(MonthEnd)+String(DayEnd)+\"235959595959\")\r\n      //   console.log(store.getState(),'data from graph conponent');\r\n      // console.log(EndStart,\"EndStart\")\r\n      // console.log(End,\"End\")\r\n       nextProps.saltReturns.saltReturns\r\n       //.filter((item)=>{return item.full_ret.fun === \"state.apply\"})\r\n       .filter((item)=>{\r\n          // let str=item.jid.slice(0,4)+\"-\"+String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\r\n          // //let time=new Date(str);\r\n          // // if(time >= start && time<= end){return item;}\r\n          // let time=new Date(str);\r\n          // let startTemp=new Date(end.getTime());\r\n          // let endTemp=new Date(end.getTime());\r\n          // startTemp.setHours(0,0,0);\r\n          // endTemp.setHours(23,59,59);\r\n          // if(((time.getTime() >=startTemp.getTime()))  && (time.getTime() <=endTemp.getTime())){return item;}\r\n          if(parseInt(item.jid)>=EndStart && parseInt(item.jid)<=End){return item}\r\n        })\r\n        .forEach(item => {\r\n          let res=true;\r\n         // if(item.full_ret.success === false){res=false}\r\n         // let temp =Object.entries(item.return);\r\n       //  console.log(item,\"itemitemitemitemitemitemitemitem\")\r\n          if(Array.isArray(item.return)){ res=true}\r\n          else{\r\n             // console.log(item,'item');\r\n              let dataTemp=Object.entries(item.return).map((e) => ( { [e[0]]: e[1] } ));\r\n              let flag=false;\r\n              dataTemp.forEach(item =>{\r\n                  //console.log(Object.values(item),'Object.values(item)');\r\n                  if((Object.values(item)[0].result===true)&& (flag===false)){res=true}\r\n                  else{res=false;flag=true;}\r\n              } )\r\n          }\r\n        if(parseNumber(item.jid)===\"03:00\")\r\n        { res === true ?(tempArray[1].Success++):(tempArray[1].Fail++)};\r\n        if(parseNumber(item.jid)===\"06:00\")\r\n        { res === true ?(tempArray[2].Success++):(tempArray[2].Fail++)};\r\n        if(parseNumber(item.jid)===\"09:00\")\r\n        { res === true ?(tempArray[3].Success++):(tempArray[3].Fail++)};\r\n        if(parseNumber(item.jid)===\"12:00\")\r\n        { res === true ?(tempArray[4].Success++):(tempArray[4].Fail++)};\r\n        if(parseNumber(item.jid)===\"15:00\")\r\n        { res === true ?(tempArray[5].Success++):(tempArray[5].Fail++)};\r\n        if(parseNumber(item.jid)===\"18:00\")\r\n        { res === true ?(tempArray[6].Success++):(tempArray[6].Fail++)};\r\n        if(parseNumber(item.jid)===\"21:00\")\r\n        { res === true ?(tempArray[7].Success++):(tempArray[7].Fail++)};\r\n        if(parseNumber(item.jid)===\"24:00\")\r\n        { res === true ?(tempArray[8].Success++):(tempArray[8].Fail++)};\r\n       \r\n        \r\n        });\r\n      }\r\n        this.state.data=tempArray;\r\n        // console.log(this.state,\"this.state\")\r\n        //console.log(this.state.data,\"this.state.data                             \");\r\n      //  console.log(\"state                               \",store.getState());\r\n    }\r\n    \r\n      const startTemp=store.getState().date.start;\r\n      const endTemp=store.getState().date.end;\r\n      if((startTemp.getTime()> endTemp.getTime())){\r\n      let temp=[\r\n        { time:\"00:00\",Succeeded:0,Fail:0, amount:0 },\r\n        { time:\"03:00\",Succeeded:0,Fail:0, amount:0 },\r\n        { time:\"06:00\",Succeeded:0,Fail:0, amount:0 },\r\n        { time:\"09:00\",Succeeded:0,Fail:0, amount:0 },\r\n        { time:\"12:00\",Succeeded:0,Fail:0, amount:0 },\r\n        { time:\"15:00\",Succeeded:0,Fail:0, amount:0 },\r\n        { time:\"18:00\",Succeeded:0,Fail:0, amount:0 },\r\n        { time:\"21:00\",Succeeded:0,Fail:0, amount:0 },\r\n        { time:\"24:00\",Succeeded:0,Fail:0, amount:0 },\r\n      ];\r\n      this.setState({graphIsPrepared:true})\r\n      this.state.data=temp;\r\n    }\r\n  }\r\n\r\n  componentWillUpdate() {\r\n    this.setState({graphIsPrepared:false})\r\n    const start=store.getState().date.start;\r\n    const end=store.getState().date.end;\r\n   // console.log(store.getState());\r\n    // while (store.getState().saltReturns.saltReturns === null) {  }\r\n   let temp=  \r\n   [{ time:\"00:00\",Success:0,Fail:0, amount:0 },\r\n   { time:\"03:00\",Success:0,Fail:0, amount:0 },\r\n   { time:\"06:00\",Success:0,Fail:0, amount:0 },\r\n   { time:\"09:00\",Success:0,Fail:0, amount:0 },\r\n   { time:\"12:00\",Success:0,Fail:0, amount:0 },\r\n   { time:\"15:00\",Success:0,Fail:0, amount:0 },\r\n   { time:\"18:00\",Success:0,Fail:0, amount:0 },\r\n   { time:\"21:00\",Success:0,Fail:0, amount:0 },\r\n   { time:\"24:00\",Success:0,Fail:0, amount:0 },];\r\n\r\n   if( store.getState().saltReturns.saltReturns!==null)\r\n   {\r\n    let MonthEnd= String(parseInt(store.getState().date.end.getMonth())+1);\r\n    MonthEnd=parseInt(MonthEnd)<10?\"0\"+MonthEnd:MonthEnd;\r\n    let yearEnd=String(store.getState().date.end.getFullYear());\r\n    let DayEnd=store.getState().date.end.getDate()\r\n    DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n    let EndStart=parseInt(yearEnd+String(MonthEnd)+String(DayEnd)+\"000000000000\");\r\n\r\n    let End=parseInt(yearEnd+String(MonthEnd)+String(DayEnd)+\"235959595959\")\r\n    store.getState().saltReturns.saltReturns\r\n  //   .filter((item)=>{return item.full_ret.fun === \"state.apply\"})\r\n   .filter((item)=>{\r\n  //   let str=item.jid.slice(0,4)+\"-\"+String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\r\n  //   // let time=new Date(str);\r\n  //   // // if(time >= start && time<= end){return item;}\r\n    \r\n  //   let time=new Date(str);\r\n  //   let startTemp=new Date(end.getTime());\r\n  //   let endTemp=new Date(end.getTime());\r\n  //   startTemp.setHours(0,0,0);\r\n  //   endTemp.setHours(23,59,59);\r\n  //   if(((time.getTime() >=startTemp.getTime()))  && (time.getTime() <=endTemp.getTime())){return item;}\r\n  if(parseInt(item.jid)>=EndStart && parseInt(item.jid)<=End){return item}\r\n   })\r\n  .forEach(item => {\r\n    let res=true;\r\n   // if(item.full_ret.success === false){res=false}\r\n    //let temp =Object.entries(item.return);\r\n    if(Array.isArray(item.return)){ res=true}\r\n    else{\r\n        //console.log(item,'item');\r\n        let dataTemp=Object.entries(item.return).map((e) => ( { [e[0]]: e[1] } ));\r\n        let flag=false;\r\n        dataTemp.forEach(item =>{\r\n           // console.log(Object.values(item),'Object.values(item)');\r\n            if((Object.values(item)[0].result===true)&& (flag===false)){res=true}\r\n            else{res=false;flag=true;}\r\n        } )\r\n    }\r\n  if(parseNumber(item.jid)===\"03:00\")\r\n  { res === true ?(temp[1].Success++):(temp[1].Fail++)};\r\n  if(parseNumber(item.jid)===\"06:00\")\r\n  { res === true ?(temp[2].Success++):(temp[2].Fail++)};\r\n  if(parseNumber(item.jid)===\"09:00\")\r\n  { res === true ?(temp[3].Success++):(temp[3].Fail++)};\r\n  if(parseNumber(item.jid)===\"12:00\")\r\n  { res === true ?(temp[4].Success++):(temp[4].Fail++)};\r\n  if(parseNumber(item.jid)===\"15:00\")\r\n  { res === true ?(temp[5].Success++):(temp[5].Fail++)};\r\n  if(parseNumber(item.jid)===\"18:00\")\r\n  { res === true ?(temp[6].Success++):(temp[6].Fail++)};\r\n  if(parseNumber(item.jid)===\"21:00\")\r\n  { res === true ?(temp[7].Success++):(temp[7].Fail++)};\r\n  if(parseNumber(item.jid)===\"24:00\")\r\n  { res === true ?(temp[8].Success++):(temp[8].Fail++)};\r\n  });\r\n  \r\n  }\r\n   \r\n \r\n  this.state.data= temp;\r\n//  console.log(this.state.data,\"this.state.data                             \");\r\n  const startTemp=store.getState().date.start;\r\n  const endTemp=store.getState().date.end;\r\n  if((startTemp.getTime()> endTemp.getTime())){\r\n  let temp=[\r\n    { time:\"00:00\",Succeeded:0,Fail:0, amount:0 },\r\n    { time:\"03:00\",Succeeded:0,Fail:0, amount:0 },\r\n    { time:\"06:00\",Succeeded:0,Fail:0, amount:0 },\r\n    { time:\"09:00\",Succeeded:0,Fail:0, amount:0 },\r\n    { time:\"12:00\",Succeeded:0,Fail:0, amount:0 },\r\n    { time:\"15:00\",Succeeded:0,Fail:0, amount:0 },\r\n    { time:\"18:00\",Succeeded:0,Fail:0, amount:0 },\r\n    { time:\"21:00\",Succeeded:0,Fail:0, amount:0 },\r\n    { time:\"24:00\",Succeeded:0,Fail:0, amount:0 },\r\n  ];\r\n \r\n  this.state.data=temp;\r\n}\r\nthis.setState({graphIsPrepared:true})\r\n //console.log(this.state.graphIsPrepared,\"ooooooooooooooooooooooo\")\r\n}\r\n  render(){\r\n   // console.log(this.state.graphIsPrepared,\"pppppppppppppppp\")\r\n      return(\r\n        <React.Fragment>\r\n        {/*<Title style={{paddingLeft:5}}>{(this.state.start.toLocaleDateString() === this.state.end.toLocaleDateString())?this.state.start.toLocaleDateString():this.state.start.toLocaleDateString() + ' - '+ this.state.end.toLocaleDateString()}</Title>*/}\r\n         {<Title style={{paddingLeft:5}}> {this.state.end.toLocaleDateString()}</Title>}\r\n        <ResponsiveContainer>\r\n            <LineChart\r\n              onClick={demoOnClick}\r\n              data={ this.state.data}\r\n              margin={{top: 16,right: 16,bottom: 0,left: 24,}}>\r\n            <XAxis dataKey=\"time\" /><YAxis >{/* <Label angle={270} position=\"left\" style={{ textAnchor: 'middle' }}>(A/T)</Label>*/ }   \r\n            </YAxis>\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"Fail\" stroke=\"#ff6666\" onClick={demoOnClick} />\r\n            <Line type=\"monotone\" dataKey=\"Success\" stroke=\"#82ca9d\"  onClick={demoOnClick}/>\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </React.Fragment>\r\n      )\r\n    \r\n }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    saltReturns: state.saltReturns,\r\n    date: state.date \r\n  }\r\n}\r\n\r\nfunction matchDispatchToProps(dispatch){\r\n  return bindActionCreators({dateSelect: dateSelect}, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Chart));","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport {DATE_SELECT} from \"../actions/types\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {Typography,Button,Grid} from '@material-ui/core';\r\nimport Title from './Title';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {KeyboardDatePicker,MuiPickersUtilsProvider,DatePicker} from \"@material-ui/pickers\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\n//import DateTime from 'react-datetime';\r\nimport {dateSelect} from '../actions/date.js';\r\nimport store from '../store';\r\nimport { saltReturns } from '../actions/date';\r\n// <DatePicker\r\n// disableFuture\r\n// openTo=\"year\"\r\n// id=\"date-picker-dialog\"\r\n// margin=\"normal\"\r\n// format=\"dd/MM/yyyy\"\r\n// label=\"Start\"\r\n// views={[\"year\", \"month\", \"date\"]}\r\n// KeyboardButtonProps={{\r\n//   'aria-label': 'change date',\r\n// }}\r\n\r\n// />\r\n\r\n\r\n\r\n\r\n\r\n class Deposits extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDateChangeStart = this.handleDateChangeStart.bind(this);\r\n    this.handleDateChangeEnd = this.handleDateChangeEnd.bind(this);\r\n    this.dateIsChanged = this.dateIsChanged.bind(this);\r\n  \r\n    this.state={start:this.props.date.start , end:this.props.date.end ,date:null};\r\n  \r\n  }\r\n//   shouldComponentUpdate(nextProps, nextState) {\r\n//   return this.state.value != nextState.value;\r\n// }\r\n  handleDateChangeStart(date){\r\n    this.setState({booleanStart:true,start:date});\r\n  }\r\n    \r\n  \r\n  handleDateChangeEnd (date){\r\n   this.setState({booleanEnd:true,end:date});\r\n  }\r\n \r\n  dateIsChanged(){\r\n      let start=this.state.start;\r\n      let end=this.state.end;\r\n     \r\n      store.dispatch({\r\n        type: DATE_SELECT,\r\n        payload: {start:start,end:end}\r\n       } );\r\n       store.dispatch(saltReturns());\r\n\r\n\r\n      // console.log(\"store\",store.getState());\r\n  }\r\n \r\n  //onChange = date => this.setState({ date })\r\n \r\n  render () {\r\n    return (\r\n      <React.Fragment>\r\n        <Typography component=\"p\" variant=\"h4\">\r\n\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid container justify=\"space-around\">\r\n            <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Start Date\"\r\n            format=\"dd/MM/yyyy\"\r\n            value={this.state.start}\r\n            onChange={(date)=>{this.handleDateChangeStart(date)}}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n\r\n          <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"End Date\"\r\n          format=\"dd/MM/yyyy\"\r\n          value={this.state.end}\r\n          onChange={(date)=>{this.handleDateChangeEnd(date)}}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n      \r\n      <Typography style={{flex: 1,paddingTop:15}}>\r\n      \r\n       \r\n       \r\n        <Button\r\n        variant=\"outlined\" color=\"primary\"\r\n        onClick={this.dateIsChanged}\r\n        endIcon={ <SearchIcon>Search</SearchIcon>}\r\n      >\r\n      Search\r\n      </Button>\r\n      </Typography>\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n\r\n        </Typography>\r\n       \r\n      </React.Fragment>\r\n    );\r\n  }\r\n    \r\n}\r\n\r\n const mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    date: state.date\r\n  }\r\n}\r\nfunction matchDispatchToProps(dispatch){\r\n  return bindActionCreators({dateSelect: dateSelect}, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps)(Deposits);","import axios from 'axios';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport React, { Component } from \"react\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport MaterialTable from 'material-table';\r\nimport {SALT_RETURNS} from \"../actions/types\";\r\nimport store from '../store';\r\nimport { saltReturns } from '../actions/date';\r\nimport { forwardRef } from 'react';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n    Typography,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    AddBox,\r\n    ArrowDownward,\r\n    Check,\r\n    ChevronLeft,\r\n    ChevronRight,\r\n    Clear,\r\n    DeleteOutline,\r\n    Edit,\r\n    FilterList,\r\n    FirstPage,\r\n    LastPage,\r\n    Remove,\r\n    SaveAlt,\r\n    Search,\r\n    ViewColumn,\r\n\r\n\r\n}from '@material-ui/icons';\r\n//import data from './f.json';\r\nimport data from '../Component/test.json';\r\n\r\nconst time =(str)=>{\r\n    const hower= str.slice(8,10);\r\n    const minet=str.slice(10,12);\r\n    return String(hower)+\":\"+String(minet);\r\n\r\n}\r\n\r\nconst  date=(str)=>{\r\n    const year =str.slice(0,4);\r\n    const month =String(parseInt(str.slice(4,6)));\r\n    const day =str.slice(6,8);\r\n   \r\n    return String(day)+\"/\"+String(month)+\"/\"+String(year);\r\n\r\n}\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) =>  <Edit {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\nconst dataColumns =[\r\n    { title: 'status', field: 'status',\r\n        //type: 'boolean'\r\n        cellStyle: x=>({\r\n            color:(x==='Success')?'#208000':'#ff0000'})\r\n\r\n    },\r\n    { title: 'Name', field: 'name',\r\n    },\r\n    { title: 'Date', field: 'date' },\r\n    { title: 'Time', field: 'time',\r\n        //type: 'time'\r\n    },\r\n\r\n\r\n\r\n]\r\n\r\nconst dataTable=[]\r\nconst styles = theme => ({\r\n    root:{\r\n        height: 240,\r\n        flexGrow: 1,\r\n        maxWidth: 900,\r\n        fontSize: 20,\r\n        \r\n    },\r\n  //  TreeStyle: ,\r\n      text:{\r\n        paddingLeft: theme.spacing(6),\r\n        fontSize: 16,\r\n       \r\n\r\n      },\r\n      title:{\r\n        fontSize: 16,\r\n        paddingLeft:theme.spacing(2)\r\n      },\r\n      TreeItem:{\r\n        marginTop:theme.spacing(3.5),\r\n        flexGrow: 1,\r\n        maxWidth: 950,\r\n        fontSize: 18,\r\n      },\r\n      TreeItemText:{\r\n        fontSize: 18,\r\n      },\r\n      \r\n});\r\n//console.log(data,'cccccccccccccccccccccccccccccccccccccccccc')\r\n// const m=JSON.parse(\"'[\"+data+\"]'\");\r\nconst x=Object.entries(data[0].return).map((e) => ( { [e[0]]: e[1] } ));\r\n//console.log(data,'data');\r\n//console.log(Object.entries(data[0].return),'llll')\r\n//console.log(x,'cccccccccccccccccccccccccccccccccccccccccc')\r\nclass Orders extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.selestMinion=this.selestMinion.bind(this);\r\n        this.handleClickOpen=this.handleClickOpen.bind(this);\r\n        this.handleClose=this.handleClose.bind(this);\r\n        store.dispatch(saltReturns());\r\n\r\n        this.state = {\r\n            saltReturns: dataTable,\r\n            Returns:null,\r\n            dialogOpen:false,\r\n            minion:\"\",\r\n            data:[],\r\n            flag:false,\r\n        }\r\n       \r\n    }\r\n \r\n    componentWillMount(){\r\n       // console.log('componentWillMount');\r\n        if(store.getState().saltReturns.saltReturns!==null)\r\n        {\r\n            setTimeout(()=>{  \r\n                const start=store.getState().date.start;\r\n                let startTemp=new Date(start.getTime());\r\n            \r\n                startTemp.setHours(0,0,0);\r\n                const end=store.getState().date.end;\r\n                let endTemp=new Date(end.getTime());\r\n            \r\n            // console.log(endTemp,'new Date(end.getTime());')\r\n            // console.log(start,'store.getState().date.start;')\r\n                let saltTemp=store.getState().saltReturns.saltReturns\r\n                // .filter((item)=>{return item.full_ret.fun === \"state.apply\"})\r\n                // .filter((item)=>{\r\n                //     let str=item.jid.slice(0,4)+\"-\"+ String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\r\n                //     let time=new Date(str);\r\n                //     if(time >= startTemp && time<= endTemp){return item;}\r\n                // })\r\n                .map((item)=>{\r\n                    let res=true;\r\n                    //if(item.full_ret.success === false){res=false}\r\n                    let temp =Object.entries(item.return);\r\n                    if(Array.isArray(item.return)){ res=true}\r\n                    else{\r\n                       // console.log(item,'item');\r\n                        let dataTemp=Object.entries(item.return).map((e) => ( { [e[0]]: e[1] } ));\r\n                        let flag=false;\r\n                        dataTemp.forEach(item =>{\r\n                           // console.log(Object.values(item),'Object.values(item)');\r\n                            if((Object.values(item)[0].result===true)&& (flag===false)){res=true}\r\n                            else{res=false;flag=true;}\r\n                        } )\r\n                    }\r\n                    return {\r\n        \r\n                        status:(res=== true)?'Success':'Fail',\r\n                        name:item.minion,\r\n                        date:date(item.jid),\r\n                        id:item._id,\r\n                        time: time(item.jid),\r\n        \r\n                        // return:item.return\r\n                    };}\r\n                )\r\n            \r\n                this.setState({saltReturns:saltTemp});\r\n            // console.log(this.state.saltReturns,'setTimeout(()=>{this.setState({saltReturns:saltTemp});}, 600);');\r\n            }, 500);\r\n            //setTimeout(()=>{;}, 1000);\r\n        }\r\n    }\r\n    selestMinion(event, rowData){\r\n      //  console.log(\"selestMinion\");\r\n      if(rowData.status==='Success'){return}\r\n         store.getState().saltReturns.saltReturns\r\n            .filter((item)=>{\r\n            if( (item._id === rowData.id)){\r\n\r\n\r\n                         this.setState({dialogOpen:true,minion:item});\r\n\r\n                         return item;\r\n                    }\r\n                \r\n            \r\n            })\r\n\r\n\r\n    }\r\n    handleClickOpen () {\r\n        this.setState({dialogOpen:true});\r\n    };\r\n\r\n    handleClose () {\r\n        this.setState({dialogOpen:false});\r\n    };\r\n    componentWillReceiveProps(nextProps,nextState) {\r\n        //console.log('componentWillReceiveProps');\r\n        // console.log(store.getState(),\";;;;;;;;;;\");\r\n        if(store.getState().saltReturns.saltReturns!==null)\r\n        {\r\n            setTimeout(()=>{  \r\n                const start=store.getState().date.start;\r\n                let startTemp=new Date(start.getTime());\r\n            \r\n                startTemp.setHours(0,0,0);\r\n                const end=store.getState().date.end;\r\n                let endTemp=new Date(end.getTime());\r\n            \r\n            // console.log(endTemp,'new Date(end.getTime());')\r\n            // console.log(start,'store.getState().date.start;')\r\n                let saltTemp=store.getState().saltReturns.saltReturns\r\n                // .filter((item)=>{return item.full_ret.fun === \"state.apply\"})\r\n                // .filter((item)=>{\r\n                //     let str=item.jid.slice(0,4)+\"-\"+ String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\r\n                //     let time=new Date(str);\r\n                //     if(time >= startTemp && time<= endTemp){return item;}\r\n                // })\r\n                .map((item)=>{\r\n                    let res=true;\r\n                    let temp =Object.entries(item.return);\r\n                    if(Array.isArray(item.return)){ res=true}\r\n                    else{\r\n                      //  console.log(item,'item');\r\n                        let dataTemp=Object.entries(item.return).map((e) => ( { [e[0]]: e[1] } ));\r\n                        let flag=false;\r\n                        dataTemp.forEach(item =>{\r\n                           // console.log(Object.values(item),'Object.values(item)');\r\n                            if((Object.values(item)[0].result===true)&& (flag===false)){res=true}\r\n                            else{res=false;flag=true;}\r\n                        } )\r\n                    }\r\n                    return {\r\n        \r\n                        status:(res=== true)?'Success':'Fail',\r\n                        name:item.minion,\r\n                        date:date(item.jid),\r\n                        id:item._id,\r\n                        time: time(item.jid),\r\n        \r\n                        // return:item.return\r\n                    };}\r\n                )\r\n            \r\n                this.setState({saltReturns:saltTemp});\r\n            // console.log(this.state.saltReturns,'setTimeout(()=>{this.setState({saltReturns:saltTemp});}, 600);');\r\n            }, 500);\r\n            //setTimeout(()=>{;}, 1000);\r\n        }\r\n\r\n\r\n\r\n    }\r\n    // componentWillUpdate() {\r\n  \r\n    // }\r\n    render(){\r\n\r\n        return (\r\n            <div>\r\n                <MaterialTable\r\n                    title=\"Minions Table\"\r\n                    columns={dataColumns}\r\n                    data={ this.state.saltReturns}\r\n                    icons={tableIcons}\r\n                    onRowClick={((evt, selectedRow) => this.setState({ selectedRow }))}\r\n\r\n\r\n                    options={{\r\n                        exportButton: true,\r\n                        filtering: true,\r\n\r\n                        //rowStyle: rowData => ({\r\n                        // color: (rowData.name==='su') ? '#daa9d9' : '#ff1a1a'})\r\n\r\n                    }}\r\n                    actions={[\r\n                        {\r\n\r\n                            icon: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n                            tooltip: 'Save User',\r\n                            onClick: (event, rowData) => {this.selestMinion(event, rowData)}\r\n                        }\r\n                    ]\r\n                    }\r\n                />\r\n\r\n                <Dialog\r\n                    open={this.state.dialogOpen}\r\n                    onClose={this.handleClose}\r\n\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                    maxWidth=\"lg\"\r\n                    scroll=\"paper\"\r\n                    aria-labelledby=\"confirmation-dialog-title\"\r\n                >\r\n\r\n                    <DialogTitle id=\"alert-dialog-title\">\r\n\r\n                    <Typography style={{color:\"#ff6666\",fontSize:18} }>\r\n                            {\"Failed \"}\r\n                            {this.state.minion.minion}\r\n                            {\" at date \"}\r\n                            {   (this.state.minion !== undefined )? (date(String(this.state.minion.jid))): \" \"}\r\n                            {' at hour '}\r\n                            {(this.state.minion !== undefined )? (time(String(this.state.minion.jid))): \" \"}\r\n                            {//console.log(this.state.minion,\"comment\")}\r\n                             }\r\n                        </Typography>\r\n                    </DialogTitle>\r\n\r\n\r\n                    <DialogContent dividers>\r\n                    {//if you want to chenge width with \r\n                    }\r\n                        <div style={{minWidth: 1000,}}>\r\n                            {\r\n                                <Typography>\r\n                                   id : {this.state.minion._id}\r\n                                </Typography>\r\n                            }\r\n                             \r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n                          close\r\n                        </Button>\r\n                    </DialogActions>\r\n\r\n                </Dialog>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        saltReturns: state.saltReturns,\r\n        date: state.date\r\n    }\r\n}\r\nfunction matchDispatchToProps(dispatch){\r\n    return bindActionCreators({saltReturns: saltReturns}, dispatch);\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Orders));","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport store from '../store';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport {SAVE_MINION} from \"../actions/types\";\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    maxWidth: 260,\r\n   \r\n    margin: theme.spacing(1),\r\n    marginLeft: theme.spacing(0),\r\n  },\r\n  root2: {\r\n    width: 230,\r\n    maxWidth: 360,\r\n    fontSize:12,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n    overflow:'wrap'\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    fontSize: 12,\r\n  },\r\n  container: {\r\n    width: 300,\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\n\r\nclass MinionCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.onClickMinion = this.onClickMinion.bind(this);\r\n        this.handleClickButton = this.handleClickButton.bind(this);\r\n        const commentg= this.props.comment;\r\n       // console.log(this.props.id,'constructor');\r\n       this.state={ \r\n          open: false,\r\n          defer: false,\r\n          click:false,\r\n          comment: commentg,\r\n          listOpen:false\r\n        };\r\n    }\r\n    onClickMinion(){\r\n       this.setState({click:true});\r\n       let array =store.getState().saveMinion.saveMinion;\r\n       \r\n      \r\n       let minions=array.filter((item)=>{\r\n         if(item.id !==this.props.id){return (item)}\r\n       });\r\n       minions=minions.map((item,index)=>{\r\n        return( {...item,id:index+1});\r\n       })\r\n       // minions.unshift(this.state.saveMinion[0]);\r\n       store.dispatch({\r\n           type: SAVE_MINION,\r\n           payload: minions\r\n       });\r\n      // console.log(store.getState(),\"store.getState() from minionCard\");\r\n    }\r\n    handleClickButton(){\r\n      this.state.listOpen=!(this.state.listOpen);\r\n  \r\n  \r\n    }\r\nrender(){\r\n  // id={item.id} minion={item.minions} comment={item.comment}\r\n    const bull = <span className={this.props.classes.bullet}>•</span>;\r\n    if(this.state.comment===''){this.state.click =true}\r\n    if(this.state.click === false)\r\n    return (\r\n     \r\n      <Card className={this.props.classes.root}>\r\n        <CardContent>\r\n\r\n          <Button onClick={()=>{this.onClickMinion()}}>\r\n            <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n            fun: {this.props.comment}\r\n            {/*this.props.fun*/}\r\n            </Typography>\r\n          </Button>\r\n\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <div>\r\n                <div className={this.props.classes.container}>\r\n                  <List\r\n                      component=\"nav\"\r\n                      aria-labelledby=\"nested-list-subheader\"\r\n                      className={this.props.classes.root2}\r\n                    >\r\n                    <ListItem \r\n                      button   \r\n                      onClick={() =>\r\n                        this.setState({\r\n                        listOpen: !this.state.listOpen,\r\n                        })}\r\n                      >\r\n                      <ListItemIcon>\r\n                        <DashboardIcon />\r\n                      </ListItemIcon>\r\n                      \r\n                      <ListItemText primary=\"See minions\" />\r\n                          {this.state.listOpen ? <ExpandLess /> : <ExpandMore />}\r\n                      </ListItem>\r\n                      {\r\n                          this.props.minion.map((item)=>{\r\n                            return(\r\n                            <Collapse in={this.state.listOpen} timeout=\"auto\" unmountOnExit>\r\n                            <List component=\"div\" disablePadding>\r\n                              <ListItem  className={this.props.classes.nested}>\r\n                                  <ListItemIcon>\r\n                                      <StarBorder />\r\n                                  </ListItemIcon>\r\n                                  <ListItemText primary={item} />\r\n                              </ListItem>\r\n                            </List>\r\n                          </Collapse>\r\n                          )\r\n                          })\r\n                        }\r\n                  </List>\r\n                </div>\r\n               </div>\r\n            </Typography>\r\n            \r\n          {/*button*/}\r\n          </CardContent>\r\n          <CardActions>\r\n           \r\n        </CardActions>\r\n      </Card>\r\n     \r\n       \r\n      );\r\n      else{return(<div></div>);}\r\n}\r\n  \r\n}\r\n\r\nexport default withStyles(styles)(MinionCard);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../actions/authActions';\r\nimport PropTypes from 'prop-types';\r\nimport store from '../../store';\r\nimport Button from '@material-ui/core/Button';\r\nexport class Logout extends Component {\r\n  static propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n  };\r\n\r\n\r\n  render() {\r\n    // console.log(this.props)\r\n    return (\r\n        <Button  style={{color:'#fff',border:'none'}}  variant='outlined'  onClick={()=> store.dispatch(logout())}>\r\n          Log out\r\n        </Button>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n  null,\r\n  { logout }\r\n)(Logout);","\r\n\r\nimport React, { Component } from \"react\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport MaterialTable from 'material-table';\r\nimport { forwardRef } from 'react';\r\nimport store from '../store';\r\nimport { saveMinion } from '../actions/date';\r\nimport {SAVE_MINION} from \"../actions/types\";\r\nimport axios from 'axios';\r\nimport {\r\n    AddBox,\r\n    ArrowDownward,\r\n    Check,\r\n    ChevronLeft,\r\n    ChevronRight,\r\n    Clear,\r\n    DeleteOutline,\r\n    Edit,\r\n    FilterList,\r\n    FirstPage,\r\n    LastPage,\r\n    Remove,\r\n    SaveAlt,\r\n    Search,\r\n    ViewColumn,\r\n\r\n\r\n}from '@material-ui/icons';\r\nimport { withAlert } from 'react-alert';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport MinionCard from './MinionCard';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { returnErrors } from '../actions/errorActions';\r\nimport { listMinions } from '../actions/date';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) =>  <Edit {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst styles = theme => ({\r\n    MaterialTable:{\r\n        marginLeft: theme.spacing(12),\r\n        marginTop: theme.spacing(1.5),\r\n        width:450, \r\n    },\r\n    root: {\r\n      padding: '2px 4px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      width: 500,\r\n      height:70,\r\n      marginTop: theme.spacing(1)\r\n    },\r\n    paperParms:{\r\n        padding: '3px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 400,\r\n        height:50,\r\n        marginTop: theme.spacing(3)\r\n    },\r\n   \r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      marginTop: 0,\r\n      \r\n      flex: 1,\r\n    },\r\n    inputparms:{\r\n        marginLeft: theme.spacing(1),\r\n    \r\n        //width: 400,\r\n        flex: 1,\r\n    },\r\n    minionStyle:{\r\n        marginTop: theme.spacing(5),\r\n        width:200\r\n    },\r\n   \r\n    iconButton: {\r\n      padding: 10,\r\n      height:55\r\n    },\r\n    Divider: {\r\n      marginTop: theme.spacing(5),\r\n      height: 50,\r\n      margin: 4,\r\n    },\r\n    iconButtonParms: {\r\n     \r\n        padding: 10,\r\n        height: 10,\r\n        width:4,\r\n      },\r\n      dividerParms: {\r\n        marginTop: theme.spacing(5),\r\n        height: '100%',\r\n        margin: 4,\r\n      },\r\n    msg:{\r\n        width: '100%',\r\n        '& > * + *': {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n    Comments:{\r\n        marginTop: theme.spacing(4),\r\n    },\r\n   \r\n    ButtonGroup: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        \r\n        '& > *': {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n      },\r\n      button: {\r\n       //paddingRight:70,\r\n       height:50,\r\n      // width:60\r\n      },\r\n    \r\n  });\r\n\r\n\r\n\r\n \r\n\r\nclass SaltStack extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.clickOpen = this.clickOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.sentCommand = this.sentCommand.bind(this);\r\n        this.getMinionsFromServer = this.getMinionsFromServer.bind(this);\r\n        this.tokenConfig = this.tokenConfig.bind(this);\r\n        store.dispatch(listMinions());\r\n       // console.log(store.getState(),\"vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv\");\r\n        this.state={\r\n        alert:false,\r\n        msg:false,\r\n        menu:\"Dashboard\",\r\n        open: false,\r\n        defer: false,\r\n        clickSave:false,\r\n        history:[],\r\n        input:'',\r\n        parms:\"\",\r\n        saveMinion:{},\r\n        countSaveMinion:0,\r\n        warninginput:false,\r\n        warningNoMinionSelected:false,\r\n        data:[],\r\n        };\r\n        \r\n        \r\n       this.getMinionsFromServer();\r\n    }\r\n    getMinionsFromServer(){\r\n       \r\n        let tokenTemp=this.tokenConfig();\r\n      \r\n        axios.get('/get_connected_minions',tokenTemp)\r\n        .then((res) => {\r\n                let arr=[];\r\n                for(let i=0;i<res.data.result.length;i++){\r\n                   let minion={name:res.data.result[i]}\r\n                   arr.push(minion);\r\n                }             \r\n                this.setState({data:arr})\r\n        })\r\n        .catch(err => {\r\n            console.log(err,\"err get_connected_minions\");\r\n    \r\n           });\r\n        };\r\n        tokenConfig = () => {\r\n            //console.log(\"getstatteeeeeslatl\",store.getState())\r\n            // Get token from localstorage\r\n            const token = store.getState().auth.token;\r\n        \r\n            // Headers\r\n            const config = {\r\n                headers: {\r\n                    \"Content-type\": \"application/json\"\r\n                }\r\n            }\r\n        \r\n            // If token, add to headers\r\n            if(token) {\r\n               config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n            }\r\n        \r\n         return config;\r\n    };\r\n    handleClose = (event, reason) => \r\n    {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n     \r\n        this.setState({msg:false,warninginput:false,warningNoMinionSelected:false});\r\n    };\r\n\r\n    handleClick = () => \r\n    {\r\n        this.state.countSaveMinion--;\r\n        \r\n        if((this.state.input !== '')  &&  (this.state.countSaveMinion===0)){\r\n            this.setState({msg:true});\r\n            setTimeout(()=>{this.setState({msg:false,clickSave:false});}, 2200);\r\n            this.state.saveMinion.comment=this.state.input;\r\n            this.state.history.unshift(this.state.saveMinion);\r\n            let minions =store.getState().saveMinion.saveMinion;\r\n            minions.unshift(this.state.saveMinion);\r\n            const words = this.state.input.split(' ');\r\n            const parms_send=this.state.parms.split(' ');\r\n            // for (let index = 2; index < words.length; index++) {\r\n            //     parms.push(words[index]);\r\n                \r\n            // }\r\n        //    let tgt=[];\r\n        //    if(words[1]===\"\"){tgt=this.state.saveMinion.minions}\r\n        //    else if(words[1]===\"'*'\"){tgt=[\"all minions\"]}//all minions\r\n        //    else {\r\n        //     for (let index = 0; index < words[1].length; index++) {\r\n        //         tgt.push(words[1][index]);\r\n                \r\n        //     }\r\n        //    }\r\n           \r\n            // minions.unshift(this.state.saveMinion[0]);\r\n           \r\n            let res={\r\n                func:words[0],\r\n                tgt:this.state.saveMinion.minions,\r\n                salt_cmd:this.state.parms===\"\"?\"\":parms_send,\r\n            }\r\n           // console.log(res,'res');\r\n            this.setState({parms:\"\"});\r\n            const body = JSON.stringify(res);\r\n            let tokenTemp=this.tokenConfig();\r\n            axios.post('/saltstack_cmd',body, tokenTemp)\r\n            .then((res) => {\r\n            })\r\n            .catch(err => {\r\n                console.log(\"err from SaltStack\")\r\n                store.dispatch(returnErrors(err.response.data.message, err.response.status, 'CMD_FAIL'));\r\n                // dispatch({\r\n                //     type: LOGIN_FAIL\r\n                // })\r\n            })\r\n            store.dispatch({\r\n                type: SAVE_MINION,\r\n                payload: minions\r\n            });\r\n            store.dispatch({\r\n                type: SAVE_MINION,\r\n                payload: minions\r\n            });\r\n            //console.log(store.getState(),\"store from saltstack\");\r\n            \r\n        }\r\n        \r\n        if(this.state.input === ''){ \r\n            this.setState({warninginput:true});\r\n            setTimeout(()=>{this.setState({warninginput:false});}, 2200);\r\n        }\r\n        if((this.state.countSaveMinion !==0) && (this.state.countSaveMinion!==1) &&(this.state.input !== '')  ){ \r\n            this.setState({warningNoMinionSelected:true});\r\n            setTimeout(()=>{this.setState({warningNoMinionSelected:false});}, 2200);\r\n        }\r\n\r\n        this.setState({input:'',parms:\"\"});\r\n\r\n\r\n      };\r\n   \r\n    clickOpen (rowData){\r\n        //  console.log(rowData,'rowData')\r\n        this.state.countSaveMinion=0;\r\n        this.state.countSaveMinion++;\r\n        const data=rowData.map((row)=>row.name);\r\n        let commntId=(store.getState().saveMinion.saveMinion.length)+1; \r\n        this.state.saveMinion={minions:data,id:commntId,comment:''};\r\n        //this.getMinionsFromServer();\r\n        this.setState({alert:true,clickSave:true,});\r\n        setTimeout(()=>{this.setState({alert:false,});}, 2200);\r\n        \r\n    };\r\n\r\n    sentCommand(command){\r\n        \r\n        this.state.countSaveMinion--;\r\n        if( (this.state.countSaveMinion===0)){\r\n\r\n           \r\n           \r\n            this.state.saveMinion.comment=command;\r\n            this.state.history.unshift(this.state.saveMinion);\r\n            let minions =store.getState().saveMinion.saveMinion;\r\n            //  console.log(store.getState().saveMinion.saveMinion,\"store.getState().saveMinion.saveMinion\")\r\n            minions.unshift(this.state.saveMinion);\r\n          \r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n            const words = this.state.input.split(' ');\r\n            const parms_send=this.state.parms.split(' ');\r\n            // for (let index = 2; index < words.length; index++) {\r\n            //     parms.push(words[index]);\r\n                \r\n            // }\r\n        //    let tgt=[];\r\n        //    if(words[1]===\"\"){tgt=this.state.saveMinion.minions}\r\n        //    else if(words[1]===\"'*'\"){tgt=[\"all minions\"]}//all minions\r\n        //    else {\r\n        //     for (let index = 0; index < words[1].length; index++) {\r\n        //         tgt.push(words[1][index]);\r\n                \r\n        //     }\r\n        //    }\r\n           \r\n            // minions.unshift(this.state.saveMinion[0]);\r\n           \r\n            let res={\r\n                func:command,\r\n                tgt:this.state.saveMinion.minions,\r\n                salt_cmd:this.state.parms===\"\"?\"\":parms_send,\r\n            }\r\n            this.setState({parms:\"\"});\r\n          //  console.log(res,'res');\r\n            // Request body\r\n           // console.log(JSON.stringify(this.state.saveMinion),\"JSON.stringify(this.state.saveMinion)\");\r\n           // console.log(this.state.saveMinion,\"this.state.saveMinion\");\r\n            const body = JSON.stringify(res);\r\n            let tokenTemp=this.tokenConfig();\r\n            axios.post('/saltstack_cmd',body, tokenTemp)\r\n            .then((res) => {\r\n            })\r\n            .catch(err => {\r\n                //console.log(\"err from SaltStack\")\r\n                store.dispatch(returnErrors(err.response.data.message, err.response.status, 'CMD_FAIL'));\r\n                // dispatch({\r\n                //     type: LOGIN_FAIL\r\n                // })\r\n            })\r\n            store.dispatch({\r\n                type: SAVE_MINION,\r\n                payload: minions\r\n            });\r\n           // console.log(this.state.history,'this.state.history')\r\n            this.setState({msg:true});\r\n            setTimeout(()=>{this.setState({msg:false,clickSave:false});}, 2200);\r\n         \r\n        }\r\n      \r\n        if((this.state.countSaveMinion !==0) && (this.state.countSaveMinion!==1)   ){ \r\n            this.setState({warningNoMinionSelected:true});\r\n            setTimeout(()=>{this.setState({warningNoMinionSelected:false});}, 2200);\r\n        }\r\n        this.setState({parms:\"\"});\r\n\r\n    };\r\n\r\n\r\n\r\n  render(){\r\n  \r\n    return (\r\n\r\n<div style={{display: 'flex',flexDirection: 'row',}}>\r\n\r\n<div style={{display: 'flex',flexDirection: 'column',}}>\r\n   \r\n    <Paper component=\"form\" className={this.props.classes.root}>\r\n        <IconButton className={this.props.classes.iconButton} aria-label=\"menu\">\r\n            <MenuIcon />\r\n        </IconButton>\r\n            \r\n        <InputBase\r\n        autoComplete\r\n        autoFocus='true'\r\n        value={this.state.input}\r\n        onChange={(event)=>{this.setState({input:event.target.value})}}\r\n        className={this.props.classes.input}\r\n        placeholder=\"Command Line\"\r\n        inputProps={{ 'aria-label': 'Command Line' }}\r\n        />\r\n        {\r\n            this.state.input!==\"\"?(\r\n                <div>\r\n          \r\n            <IconButton color=\"primary\" className={this.props.classes.iconButton} aria-label=\"directions\" onClick={()=>{this.setState({input:\"\"})}}>\r\n              <ClearIcon />\r\n            </IconButton>\r\n            </div>\r\n            )\r\n            :(<div></div>)\r\n        }\r\n        <Divider className={this.props.classes.divider} orientation=\"vertical\" />     \r\n        <IconButton fontSize=\"small\" color='primary' size='medium' className={this.props.classes.iconButton} aria-label=\"directions\" onClick={this.handleClick}>\r\n            <SendIcon />\r\n        </IconButton>\r\n    </Paper>\r\n\r\n\r\n\r\n\r\n{\r\n    /////////////////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n<div className={this.props.classes.Comments}>\r\n    Parameters\r\n        <Divider light  style={{width:200}}/>\r\n    </div>\r\n\r\n\r\n    <Paper component=\"form\" className={this.props.classes.paperParms}>\r\n    <InputBase\r\n    autoComplete\r\n    autoFocus='true'\r\n    value={this.state.parms}\r\n    onChange={(event)=>{this.setState({parms:event.target.value})}}\r\n    className={this.props.classes.inputparms}\r\n    placeholder=\"Parameters\"\r\n    inputProps={{ 'aria-label': 'Parameters' }}\r\n    />\r\n    {\r\n    //     this.state.parms!==\"\"?(\r\n            \r\n     \r\n    //         <Divider className={this.props.classes.divider} orientation=\"vertical\" />\r\n       \r\n    //     )\r\n    //     :(<div></div>)\r\n    }\r\n  \r\n    {\r\n        this.state.parms!==\"\"?(\r\n            \r\n     \r\n        <IconButton fontSize=\"small\" color=\"primary\" className={this.props.classes.iconButton} aria-label=\"directions\" onClick={()=>{this.setState({parms:\"\"})}}>\r\n        <ClearIcon />\r\n      </IconButton>\r\n       \r\n        )\r\n        :(<div></div>)\r\n    }\r\n    {\r\n//     <Divider orientation=\"vertical\" flexItem/>   \r\n//    <Button\r\n//         variant=\"contained\"\r\n//         color=\"primary\"\r\n//         className={this.props.classes.button}\r\n//         //disabled\r\n//         //endIcon={<SendIcon />}\r\n//       >\r\n//         {//Send\r\n//         }\r\n//      </Button>\r\n    }\r\n\r\n    </Paper>\r\n\r\n\r\n\r\n\r\n    <div className={this.props.classes.Comments}>\r\n        commands\r\n        <Divider light  style={{width:200}}/>\r\n    </div>\r\n\r\n    <div className={this.props.classes.ButtonGroup}>\r\n        <ButtonGroup \r\n            size=\"large\" \r\n            color=\"primary\" \r\n            orientation=\"horizontal\"\r\n            color=\"primary\"\r\n            aria-label=\"vertical contained primary button group\"\r\n            variant=\"text\"\r\n            style={{ marginTop:35,width:380,height:50,}}>\r\n           \r\n         \r\n\r\n            <Button onClick={()=>this.sentCommand('cmd.run')}>cmd.run</Button>\r\n            <Button onClick={()=>this.sentCommand('state.fun')}>state.fun</Button>\r\n            <Button onClick={()=>this.sentCommand('cd')}>cd</Button>\r\n\r\n        </ButtonGroup>\r\n\r\n       {\r\n           /* <ButtonGroup \r\n            size=\"large\" \r\n            color=\"primary\" \r\n            orientation=\"horizontal\"\r\n            color=\"primary\"\r\n            aria-label=\"vertical contained primary button group\"\r\n            variant=\"text\"\r\n            style={{ marginTop:15,width:380,height:50,}}>\r\n\r\n            <Button onClick={()=>this.sentCommand('state.apply')}>state.apply</Button>\r\n            <Button onClick={()=>this.sentCommand('state.fun')}>state.fun</Button>\r\n            <Button onClick={()=>this.sentCommand('cd')}>cd</Button>\r\n                            \r\n        </ButtonGroup>\r\n\r\n        <ButtonGroup size=\"large\" \r\n            color=\"primary\" \r\n            orientation=\"horizontal\"\r\n            color=\"primary\"\r\n            aria-label=\"vertical contained primary button group\"\r\n            variant=\"text\"\r\n            style={{ marginTop:15,width:380,height:50,}}>\r\n\r\n            <Button onClick={()=>this.sentCommand('state.apply')}>state.apply</Button>\r\n            <Button onClick={()=>this.sentCommand('state.fun')}>state.fun</Button>\r\n            <Button onClick={()=>this.sentCommand('cd')}>cd</Button>\r\n        </ButtonGroup>\r\n    */}\r\n    </div>\r\n\r\n    <div className={this.props.classes.Divider}>\r\n        History\r\n        <Divider light  style={{width:400}}/>\r\n    </div>\r\n\r\n\r\n    {\r\n        <div style={{ display: 'flex',flexDirection: 'row',flexFlow: 'row wrap',maxWidth:600}}>\r\n        {store.getState().saveMinion.saveMinion.map(item =>{\r\n            return(\r\n                \r\n                  <MinionCard  id={item.id} minion={item.minions} comment={item.comment} />\r\n        )})}\r\n        </div>\r\n    }  \r\n\r\n    \r\n    <div className={this.props.classes.Divider}>\r\n        <Divider light  style={{width:400}}/>\r\n    </div>\r\n\r\n\r\n    </div>\r\n<div>\r\n  \r\n\r\n    <div className={this.props.classes.MaterialTable}>\r\n        {\r\n            this.state.alert?\r\n            (   <div className={this.props.classes.msg}>\r\n                   \r\n                        <Alert severity=\"success\">\r\n                                The minions you selected were  — <strong>accepted in the system</strong>\r\n                        </Alert>\r\n                   \r\n                </div>\r\n            ):<div></div>\r\n        }\r\n        <MaterialTable\r\n        \r\n            title='Minions'\r\n            icons={tableIcons}\r\n            columns={[{ title: 'Name', field: 'name' },]}\r\n            data={this.state.data} \r\n            options={{selection: true}}       \r\n            actions=\r\n            {[{\r\n                icon: forwardRef((props, ref) => <SaveIcon color='action' {...props} ref={ref} />),\r\n                tooltip: 'Save Minions',\r\n                onClick: (event, rowData) => {this.clickOpen(rowData)}\r\n            }]}\r\n        />\r\n     \r\n        {\r\n            this.state.clickSave === true?\r\n                (<div className={this.props.classes.msg}>\r\n                    <Snackbar open={this.state.msg} autoHideDuration={6000} onClose={this.handleClose}>\r\n                        <Alert onClose={this.handleClose} severity=\"success\">\r\n                            The commands you made were received in the system!\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </div>\r\n                ):<div></div>\r\n        }\r\n        {\r\n            this.state.warninginput === true ?\r\n            (   <div className={this.props.classes.msg}>\r\n                <Snackbar open={this.state.warninginput} autoHideDuration={6000} onClose={this.handleClose}>\r\n                    <Alert onClose={this.handleClose} severity=\"warning\">\r\n                          command not sent because     <strong> no command entered   </strong>\r\n                        </Alert>\r\n                  \r\n                    </Snackbar>\r\n                   \r\n                </div>\r\n            )\r\n            :<div></div>\r\n        }\r\n        {\r\n            this.state.warningNoMinionSelected === true ?\r\n            (   <div className={this.props.classes.msg}>\r\n                <Snackbar open={this.state.warningNoMinionSelected} autoHideDuration={6000} onClose={this.handleClose}>\r\n                    <Alert onClose={this.handleClose} severity=\"warning\">\r\n                              command not sent because <strong>no minion selected   </strong>\r\n                        </Alert>\r\n                  \r\n                    </Snackbar>\r\n                   \r\n                </div>\r\n            )\r\n            :<div></div>\r\n        }\r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n</div>\r\n</div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(SaltStack);","import { withStyles } from \"@material-ui/core/styles\";\r\nimport React, { PureComponent } from 'react';\r\nimport store from '../store';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from 'axios';\r\nconst styles = theme => ({\r\n    root: {\r\n        minWidth: 345,\r\n        maxWidth: 400,\r\n        margin:theme.spacing(2.5),\r\n       \r\n      },\r\n      media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n      },\r\n      expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n          duration: theme.transitions.duration.shortest,\r\n        }),\r\n      },\r\n      expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n      },\r\n      avatar: {\r\n        backgroundColor: red[500],\r\n      },\r\n      paragraph:{\r\n          paddingLeft:theme.spacing(7.8),\r\n          wordWrap:'break-word',\r\n      },\r\n});\r\n\r\nconst tokenConfig = getState => {\r\n  // console.log(\"getstatteeeeeslatl\",getState())\r\n   // Get token from localstorage\r\n   const token = getState().auth.token;\r\n\r\n   // Headers\r\n   const config = {\r\n       headers: {\r\n          'Content-Type': 'application/json'\r\n       }\r\n   }\r\n\r\n   // If token, add to headers\r\n   if(token) {\r\n      config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n   }\r\n\r\nreturn config;\r\n}\r\nclass TeamCard extends React.Component {\r\n    constructor(props) {\r\n        super(props); \r\n        //this.handleExpandClick = this.handleExpandClick.bind(this);\r\n        this.deleteIcon = this.deleteIcon.bind(this);\r\n        this.handleClickOpen = this.handleClickOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.state={expanded:false,UpperCase:'',open:false,isDelete:false};\r\n        let strName=this.props.first_name.toUpperCase();\r\n        this.props.first_name !== ''?this.state.UpperCase=this.props.first_name.toUpperCase()[0]:this.state.UpperCase=\"\";\r\n    }\r\n    handleClose(){\r\n      this.setState((prevState) => ({open:!prevState.open}));\r\n      const { password, ReturnPassword,Role,Email,first_name,last_name } = this.state;\r\n      const body = JSON.stringify({first_name:first_name,last_name:last_name,role:Role,email:Email, password:password });\r\n      axios.delete(\"/delete/\"+this.props.id, tokenConfig(store.getState))\r\n      .then((res)=> {\r\n        this.setState({isDelete:true});});\r\n          //  this.props.arr=temp;\r\n    }\r\n    handleClickOpen(){\r\n      this.setState((prevState) => ({open:!prevState.open}));\r\n    }\r\n    deleteIcon(){\r\n\r\n    }\r\n    // handleExpandClick(){\r\n    //       this.setState((prevState) => ({expanded:!prevState.expanded}));\r\n    // }\r\n\r\n\r\n\r\n    render()\r\n    {\r\n      const colors = ['#ff0000', '#00ff00', '#0000ff'];\r\n      const random_color = colors[Math.floor(Math.random() * colors.length)];\r\n      //console.log(this.props);\r\n        return (\r\n      this.state.isDelete===false?\r\n      (<Card className={this.props.classes.root}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"recipe\" className={this.props.classes.avatar}>\r\n              {this.state.UpperCase}\r\n            </Avatar>\r\n          }\r\n      // action={\r\n      //       <IconButton aria-label=\"settings\">\r\n      //         <AccountCircleIcon />\r\n      //       </IconButton>\r\n      //     }first_name\r\n          title={this.props.first_name+' '+this.props.last_name}\r\n          subheader={this.props.role}\r\n        />\r\n      \r\n        <CardContent>\r\n          <Typography paragraph className={this.props.classes.paragraph}>\r\n          Email:{this.props.mail}\r\n          </Typography>\r\n          <Typography paragraph className={this.props.classes.paragraph}>\r\n        {/* number:0549494949*/}\r\n          </Typography>\r\n\r\n        </CardContent>\r\n\r\n        <CardActions disableSpacing>\r\n        \r\n      <IconButton \r\n      aria-label=\"share\"\r\n      variant=\"outlined\" \r\n      //color=\"primary\" \r\n      onClick={this.handleClickOpen}\r\n        //onClick={this.handleExpandClick}\r\n      color='secondary'\r\n        >\r\n            <DeleteIcon />\r\n      </IconButton>\r\n      <Dialog\r\n      open={this.state.open}\r\n      onClose={this.handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n      >\r\n\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n        Are you sure you want to delete a user from the system?\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n      <Button onClick={this.handleClickOpen} color=\"primary\">\r\n        Disagree\r\n      </Button>\r\n        <Button onClick={this.handleClose} color=\"secondary\" autoFocus>\r\n          Delete\r\n        </Button>\r\n      </DialogActions>\r\n      </Dialog>\r\n      {/*\r\n          <IconButton\r\n            className={clsx(this.props.classes.expand, {\r\n              [this.props.classes.expandOpen]: this.state.expanded,\r\n            })}\r\n            onClick={this.handleExpandClick}\r\n            aria-expanded={this.state.expanded}\r\n            aria-label=\"show more\"\r\n          >\r\n            <ExpandMoreIcon />\r\n          </IconButton>\r\n          */}\r\n        </CardActions>\r\n\r\n\r\n        {/*<Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <Typography paragraph>\r\n              Heat\r\n            </Typography>\r\n          </CardContent>\r\n        </Collapse>*/}\r\n      </Card>)\r\n:<div></div>\r\n    \r\n\r\n\r\n          );\r\n        }\r\n    \r\n}\r\n\r\nexport default withStyles(styles)(TeamCard);","\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport React, { PureComponent } from 'react';\r\nimport store from '../store';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {REGISTER_SUCCESS,REGISTER_FAIL} from '../actions/types';\r\nimport {returnErrors}  from '../actions/errorActions';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport TeamCard from './TeamCard';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { ContactsOutlined } from \"@material-ui/icons\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { teamList } from '../actions/date';\r\nimport axios from 'axios';\r\nconst styles = theme => ({\r\n    root: {\r\n      // maxWidth: 1000,\r\n      // display: 'flex',\r\n      // flexDirection: 'row',\r\n      // flexWrap:'warp',\r\n      //justifyContent:'space-around', \r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      flexFlow: 'row wrap',\r\n      maxWidth:1300,\r\n      justifyContent:'space around'\r\n\r\n      },\r\n      field:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        maxWidth:250,\r\n        justifyContent:'space around',\r\n        marginTop:theme.spacing(0),\r\n        marginLeft:theme.spacing(55.5),\r\n      },\r\n      input:{\r\n        paddingTop:theme.spacing(2),\r\n        paddingLeft:theme.spacing(-4)\r\n      },\r\n      paragraph:{\r\n          paddingLeft:theme.spacing(7.8)\r\n      },\r\n      fab:{\r\n        color:'#fff',\r\n        //cursor: 'pointer',\r\n        border:'none',\r\n        outline: 'none',\r\n        outlineOffset: 'none',\r\n        marginLeft:theme.spacing(4),\r\n        marginTop:theme.spacing(4)\r\n      },\r\n      button:{\r\n        marginTop:theme.spacing(6)\r\n      },\r\n      form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n      },\r\n      msg:{\r\n        width: '100%',\r\n        '& > * + *': {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n});\r\n\r\n const tokenConfig = getState => {\r\n    // console.log(\"getstatteeeeeslatl\",getState())\r\n     // Get token from localstorage\r\n     const token = getState().auth.token;\r\n \r\n     // Headers\r\n     const config = {\r\n         headers: {\r\n            'Content-Type': 'application/json'\r\n         }\r\n     }\r\n \r\n     // If token, add to headers\r\n     if(token) {\r\n        config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n     }\r\n \r\n  return config;\r\n }\r\nclass Team extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleExpandClick = this.handleExpandClick.bind(this);\r\n        this.ClickFab = this.ClickFab.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.signIn = this.signIn.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleClickShowPassword = this.handleClickShowPassword.bind(this);\r\n        this.handleMouseDownPassword = this.handleMouseDownPassword.bind(this);\r\n        this.handleClickShowPasswordReturn = this.handleClickShowPasswordReturn.bind(this);\r\n        this.handleMouseDownPasswordReturn = this.handleMouseDownPasswordReturn.bind(this);\r\n        this.initTeam = this.initTeam.bind(this);\r\n        //this.handleCloseAlert = this.handleCloseAlert.bind(this);\r\n        this.state=\r\n        {\r\n          expanded:false,\r\n          fab:false,\r\n          first_name:'',\r\n          last_name:'',\r\n          Role:'',\r\n          Email:'',\r\n          Password:'',\r\n          ReturnPassword:'',\r\n          showPasswordReturn:'password',\r\n          showPassword:'password',\r\n          errPassword:false,\r\n          saveCard:false,\r\n          Team:[],\r\n          counter:0,\r\n          err_first_name:false,\r\n          err_last_name:false,\r\n          err_Role:false,\r\n          err_Email:false,\r\n          err_Password:false,\r\n          no_add_card:false,\r\n          \r\n        };\r\n        this.initTeam();\r\n    }\r\n\r\n    initTeam(){\r\n      axios.get('/get_users',tokenConfig(store.getState))\r\n      .then((res) => { \r\n       \r\n        this.setState({Team:res.data});\r\n      })\r\n      .catch(err => {\r\n          console.log(err);\r\n  \r\n         });\r\n   \r\n      \r\n    }\r\n\r\n    handleClickShowPassword(){\r\n      this.setState({showPassword:'text'});\r\n    }\r\n    handleMouseDownPassword(){\r\n      this.setState({showPassword:'password'});\r\n    }\r\n    handleClickShowPasswordReturn(){\r\n      this.setState({showPasswordReturn:'text'});\r\n    }\r\n    handleMouseDownPasswordReturn(){\r\n      this.setState({showPasswordReturn:'password'});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    handleExpandClick(){\r\n          this.setState((prevState) => ({expanded:!prevState.expanded}));\r\n    }\r\n \r\n    ClickFab(){\r\n      this.setState((prevState) => ({\r\n      fab:!prevState.fab,password:'',\r\n      first_name:'',\r\n      lastName:'',\r\n      Role:'',\r\n      Email:'',\r\n      Password:'',\r\n      ReturnPassword:'',}));\r\n    \r\n    }\r\n   \r\n    signIn(event){\r\n      \r\n      event.preventDefault();\r\n      const { password, ReturnPassword,Role,Email,first_name,last_name } = this.state;\r\n      //send cardTeam to server\r\n      //console.log(\"event.preventDefault()\");\r\n      const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\r\n      const emailRegex = new RegExp(\"[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,6}\");    \r\n      let flag=true;\r\n      if((strongRegex.test(password)===false) || ( password.length>30)  ){flag=false;this.setState({err_Password:true});setTimeout(()=>{this.setState({err_Password:false});}, 10000);}\r\n      if(first_name.length>30 ){flag=false;this.setState({err_first_name:true});setTimeout(()=>{this.setState({err_first_name:false});}, 6000);}\r\n      if(last_name.length>30 ){flag=false;this.setState({err_last_name:true});setTimeout(()=>{this.setState({err_last_name:false});}, 6000);}\r\n      if(Role.length>30 ){flag=false;this.setState({err_Role:true});setTimeout(()=>{this.setState({err_Role:false});}, 6000);}\r\n      if((Email.length>50) || (emailRegex.test(this.state.Email.toUpperCase())===false)){flag=false;this.setState({err_Email:true});setTimeout(()=>{this.setState({err_Email:false});}, 6000);}\r\n      if (password===ReturnPassword){}\r\n      else\r\n      {\r\n        this.setState({errPassword:true});\r\n        setTimeout(()=>{this.setState({errPassword:false});}, 6000);\r\n      }\r\n\r\n      if((password===ReturnPassword) && (flag===true)){\r\n\r\n        this.setState((prevState) => ({fab:false}));\r\n         \r\n\r\n            const body = JSON.stringify({first_name:first_name,last_name:last_name,role:Role,email:Email, password:password });\r\n            //console.log(body,'body')\r\n            axios.post(\"/register\", body, tokenConfig(store.getState))\r\n          .then(res => \r\n            {\r\n              this.state.Team.push({first_name:first_name,mail:Email,role:Role,last_name:last_name});\r\n              this.setState({saveCard:true});\r\n              setTimeout(()=>{this.setState({saveCard:false});}, 4000);\r\n            }\r\n          )\r\n            .catch(err => {\r\n            console.log(err)\r\n            this.setState({no_add_card:true});\r\n            setTimeout(()=>{this.setState({no_add_card:false});}, 4000);\r\n            })\r\n\r\n            \r\n\r\n            this.setState({expanded:false,\r\n              fab:false,\r\n              first_name:'',\r\n              last_name:'',\r\n              Role:'',\r\n              Email:'',\r\n              Password:'',\r\n              ReturnPassword:'',\r\n              showPasswordReturn:'password',\r\n              showPassword:'password',\r\n              errPassword:false,\r\n              UnsecuredPassword:false,\r\n            });\r\n             \r\n           \r\n          \r\n          \r\n            setTimeout(()=>{this.initTeam();}, 500);\r\n         \r\n      }\r\n   \r\n      \r\n   \r\n    }\r\n    // shouldComponentUpdate(nextState) {\r\n    //   console.log(nextState,\"nextState\")\r\n    //   if(this.state.Password === nextState.ReturnPassword || nextState.Password === this.state.ReturnPassword){\r\n    //     console.log(\"7878787\")\r\n    //     //this.setState((prevState) => ({fab:false}));\r\n    //   }UnsecuredPassword:false\r\n    // }\r\n    handleInputChange(e) {\r\n  \r\n      this.setState({ [e.target.name] : e.target.value});\r\n      // console.log(this.state);\r\n    }\r\n    handleClose (event, reason) \r\n    {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        \r\n        this.setState({errPassword:false,saveCard:false});\r\n    }\r\n    // handleCloseAlert(event){\r\n      \r\n    //   this.setState({ [event] : false});\r\n    //   console.log(this.state[event],)\r\n    // }\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //   console.log(nextState,\"nextState\");\r\n    //  }\r\n    // componentWillReceiveProps(){\r\n    //   this.initTeam();\r\n    // }\r\n    // shouldComponentUpdate(){\r\n    //   this.initTeam();\r\n    // }\r\n    // componentWillUpdate(){\r\n    //  console.log(this.state.counter,'this.state.counter');\r\n    //   if(this.state.counter<=1)\r\n    //   { \r\n        \r\n    //     axios.get('http://127.0.0.1:5000/get_users',tokenConfig(store.getState))\r\n    //   .then((res) => { \r\n       \r\n    //     this.setState({Team:res.data});\r\n    //   })\r\n    //   .catch(err => {\r\n    //       console.log(err);\r\n  \r\n    //      });\r\n    //      this.setState((prevState) => ({counter:2}));\r\n    // }}\r\n     \r\n    render()\r\n   \r\n    {\r\n      \r\n      if(this.state.fab === false){\r\n\r\n          return(\r\n\r\n            <div>\r\n              \r\n              \r\n              <div className={this.props.classes.msg}>\r\n                <Snackbar open={this.state.saveCard} autoHideDuration={6000} onClose={this.handleClose}>\r\n                    <Alert onClose={this.handleClose} severity=\"success\">\r\n                    The system added  <strong>a new staff member   </strong>\r\n                    </Alert>\r\n                    </Snackbar>\r\n                </div>\r\n\r\n                <div className={this.props.classes.msg}>\r\n                <Snackbar open={this.state.no_add_card} autoHideDuration={6000} onClose={this.handleClose}>\r\n                    <Alert onClose={this.handleClose} severity=\"error\">\r\n                    The system   <strong> not added a new staff member   </strong>\r\n                    </Alert>\r\n                    </Snackbar>\r\n                </div>\r\n               \r\n                <div className={this.props.classes.root}> \r\n                {\r\n                \r\n                  this.state.Team.map((item,arr)=>{\r\n                  if(this.state.Team.length !== 0){ \r\n                    \r\n                    return <TeamCard  arr={arr} first_name={item.first_name}  last_name={item.last_name} role={item.role} mail={item.email} id={item._id}/>\r\n                  }\r\n                  \r\n                })\r\n              }\r\n              </div>\r\n              <Fab color=\"primary\" aria-label=\"add\" className={this.props.classes.fab} onClick={this.ClickFab}>\r\n              <AddIcon />\r\n            </Fab>\r\n           </div>\r\n          );\r\n\r\n      }\r\n\r\n      else\r\n      {\r\n       \r\n        return(\r\n          <div className={this.props.classes.field}>\r\n          <form className={this.props.classes.form} onSubmit={this.signIn} >\r\n            <div className={this.props.classes.input}>\r\n  \r\n              <TextField\r\n                className={this.props.classes.margin}\r\n                id=\"input-with-icon-textfield\"\r\n                label=\"First Name\"\r\n                required\r\n                fullWidth\r\n                name='first_name'\r\n                value={this.state.first_name}\r\n                onChange={this.handleInputChange}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <AccountCircle />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n  \r\n            </div>\r\n  \r\n            {\r\n              this.state.err_first_name===true?\r\n              (   <div className={this.props.classes.msg}>\r\n                \r\n                  <Alert onClose={() =>{this.setState({err_first_name:false})}} severity=\"error\">\r\n                  The first name must be less than  <strong>30 characters  </strong>\r\n                  </Alert>\r\n                  </div>\r\n              )\r\n              :<div></div>\r\n           }\r\n            <div className={this.props.classes.input}>\r\n  \r\n            <TextField\r\n              className={this.props.classes.margin}\r\n              id=\"input-with-icon-textfield\"\r\n              label=\"Last Name\"\r\n              fullWidth\r\n              name='last_name'\r\n             \r\n              value={this.state.last_name}\r\n              onChange={this.handleInputChange}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <AccountCircle />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n\r\n          </div>\r\n\r\n\r\n          {\r\n            this.state.err_last_name===true?\r\n            (   <div className={this.props.classes.msg}>\r\n              \r\n                <Alert onClose={() =>{this.setState({err_last_name:false})}} severity=\"error\">\r\n                The last name must be less than  <strong>30 characters  </strong>\r\n                </Alert>\r\n                </div>\r\n            )\r\n            :<div></div>\r\n         }\r\n            <div className={this.props.classes.input}>\r\n  \r\n              <TextField\r\n                className={this.props.classes.margin}\r\n                id=\"input-with-icon-textfield\"\r\n                label=\"Email\"\r\n                required\r\n                fullWidth\r\n                name='Email'\r\n                value={this.state.Email}\r\n                onChange={this.handleInputChange}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <AccountCircle />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n  \r\n            </div>\r\n  \r\n\r\n            {\r\n              this.state.err_Email===true?\r\n              (   <div className={this.props.classes.msg}>\r\n                \r\n                  <Alert onClose={() =>{this.setState({err_Email:false})}} severity=\"error\">\r\n                   <strong> Invalid mail  </strong>\r\n                  </Alert>\r\n                  </div>\r\n              )\r\n              :<div></div>\r\n           }\r\n  \r\n            <div className={this.props.classes.input}>\r\n  \r\n              <TextField\r\n                className={this.props.classes.margin}\r\n                id=\"input-with-icon-textfield\"\r\n                label=\"Role\"\r\n                name='Role'\r\n                fullWidth\r\n                value={this.state.Role}\r\n                onChange={this.handleInputChange}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <AccountCircle />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                \r\n              />\r\n  \r\n            </div>\r\n\r\n            {\r\n              this.state.err_Role===true?\r\n              (   <div className={this.props.classes.msg}>\r\n                \r\n                  <Alert onClose={() =>{this.setState({err_Role:false})}} severity=\"error\">\r\n                  The role name must be less than  <strong>30 characters  </strong>\r\n                  </Alert>\r\n                  </div>\r\n              )\r\n              :<div></div>\r\n           }\r\n            <div className={this.props.classes.input}>\r\n  \r\n              <TextField\r\n                className={this.props.classes.margin}\r\n                id=\"input-with-icon-textfield\"\r\n                label=\"password\"\r\n                //variant=\"outlined\"\r\n                //margin=\"normal\"\r\n                required\r\n                fullWidth\r\n               \r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type={this.state.showPassword==='text'  ? 'text' : 'password'}\r\n                value={this.state.password}\r\n                onChange={this.handleInputChange}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <AccountCircle />\r\n                    </InputAdornment>\r\n                  ),\r\n                  endAdornment:(\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={this.handleClickShowPassword}\r\n                        onMouseDown={this.handleMouseDownPassword}\r\n                      >\r\n                        {this.state.showPassword==='text' ? <Visibility /> : <VisibilityOff />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n               \r\n              />\r\n           \r\n\r\n            </div>\r\n            {\r\n              this.state.err_Password===true?\r\n              (   <div className={this.props.classes.msg}>\r\n                \r\n                  <Alert onClose={() =>{this.setState({err_Password:false})}} severity=\"error\">\r\n                  The password <strong>must </strong>  be at least 8 characters long, and include uppercase and lowercase letters, and special characters\r\n                       <strong>{\"{ !, @, #, \\, $,%, \\, ^ &, \\, * }\"}  </strong>\r\n                  </Alert>\r\n                  </div>\r\n              )\r\n              :<div></div>\r\n           }\r\n            \r\n            <div className={this.props.classes.input}>\r\n  \r\n            <TextField\r\n              className={this.props.classes.margin}\r\n              id=\"input-with-icon-textfield\"\r\n              label=\"password\"\r\n              //variant=\"outlined\"\r\n              //margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"ReturnPassword\"\r\n              label=\"Return Password\"\r\n              type={this.state.showPasswordReturn==='text' ? 'text' : 'password'}\r\n              value={this.state.ReturnPassword}\r\n                onChange={this.handleInputChange}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <AccountCircle />\r\n                  </InputAdornment>\r\n                ),\r\n                endAdornment:(\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={this.handleClickShowPasswordReturn}\r\n                      onMouseDown={this.handleMouseDownPasswordReturn}\r\n                    >\r\n                      {this.state.showPasswordReturn==='text' ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n             \r\n            />\r\n  \r\n          </div>\r\n\r\n      \r\n\r\n          {\r\n            this.state.errPassword===true?\r\n            (   <div className={this.props.classes.msg}>\r\n              \r\n                <Alert onClose={() =>{this.setState({errPassword:false})}} severity=\"error\">\r\n                 Passwords  <strong>unequal   </strong>\r\n                </Alert>\r\n                </div>\r\n            )\r\n            :<div></div>\r\n         }\r\n      \r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              size=\"small\"\r\n              fullWidth\r\n              className={this.props.classes.button}\r\n             // onClick={this.ClickFab}\r\n              startIcon={<SaveIcon />}\r\n            >\r\n              Save\r\n              </Button>\r\n             \r\n          </form> \r\n            \r\n          </div>\r\n        )\r\n      }\r\n   \r\n    \r\n    }\r\n  }\r\n\r\nexport default withStyles(styles)(Team);","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nimport Graph from './Component/Graph';\r\nimport SearchTime from './Component/SearchTime';\r\nimport Table from './Component/Table';\r\nimport MinionCard from './Component/MinionCard';\r\nimport { saltReturns } from './actions/date';\r\nimport store from './store';\r\nimport { Logout } from './Component/auth/Logout';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SimCardIcon from '@material-ui/icons/SimCard';\r\n\r\nimport SaltStack from './Component/SaltStack';\r\n\r\nimport Team from './Component/Team';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nimport {\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListSubheader\r\n}from '@material-ui/core/';\r\n\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport { listMinions } from './actions/date';\r\n //while(store.getState().saltReturns.saltReturns===null);\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    paddingRight: theme.spacing(3.5),\r\n    paddingTop:theme.spacing(2),\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  table: {\r\n    // marginLeft:theme.spacing(0),\r\n    // marginTop:theme.spacing(4),\r\n    paddingRight: 3.5,\r\n    paddingTop:1,\r\n    paddingLeft:1,\r\n    paddingBottom: 3,\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  \r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  Logout:{\r\n   \r\n  },\r\n  AccountCircleIcon:{\r\n  \r\n  },\r\n  NotificationsIcon:{\r\n    display:'flex',\r\n    justifyContent:'space-between',\r\n    width:43\r\n  }\r\n});\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      //console.log(store.getState(),\"store from dashboard 1\");\r\n      store.dispatch(saltReturns());\r\n     // store.dispatch(listMinions());\r\n      //console.log(store.getState(),\"store from dashboard 2\");\r\n      this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\r\n      this.handleDrawerClose = this.handleDrawerClose.bind(this);\r\n      this.SelectMenu = this.SelectMenu.bind(this);\r\n      this.state={open:true,menu:\"Dashboard\"};\r\n  }\r\n  \r\n \r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({open:true});\r\n  };\r\n  handleDrawerClose = () => {\r\n    this.setState({open:false});\r\n  };\r\n \r\n  SelectMenu = (str) => {\r\n    this.setState({menu:str});\r\n  };\r\n  render(){  \r\n    const fixedHeightPaper = clsx(this.props.classes.paper, this.props.classes.fixedHeight);\r\n\r\n    if(this.state.menu==='Dashboard')\r\n    {\r\n      return (\r\n        <div className={this.props.classes.root}>\r\n    \r\n          <CssBaseline />\r\n          <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n    \r\n            <Toolbar className={this.props.classes.toolbar}>\r\n          \r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={this.handleDrawerOpen}\r\n                className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n              >\r\n    \r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n                Dashboard\r\n              </Typography>\r\n              \r\n             \r\n\r\n          \r\n\r\n                <Logout />\r\n             \r\n            \r\n            \r\n         \r\n    \r\n            </Toolbar>\r\n          </AppBar>\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            classes={{\r\n              paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n            }}\r\n            open={this.state.open}\r\n          >\r\n            <div className={this.props.classes.toolbarIcon}>\r\n              <IconButton onClick={this.handleDrawerClose}>\r\n                <ChevronLeftIcon />\r\n              </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n    \r\n            <ListItem button\r\n            onClick={()=>{this.SelectMenu('Dashboard')}}\r\n            >\r\n            <ListItemIcon>\r\n              <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dashboard\" />\r\n          </ListItem>\r\n          <ListItem button\r\n          onClick={()=>{this.SelectMenu('SaltStack')}}\r\n          >\r\n            <ListItemIcon>\r\n            <SimCardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"SaltStack\" />\r\n          </ListItem>\r\n          <ListItem button\r\n          onClick={()=>{this.SelectMenu('Team')}}\r\n          >\r\n            <ListItemIcon>\r\n              <PeopleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Team\" />\r\n          </ListItem>\r\n         \r\n            </List>\r\n           \r\n          </Drawer>\r\n          <main className={this.props.classes.content}>\r\n            <div className={this.props.classes.appBarSpacer} />\r\n            <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n              <Grid container spacing={3}>\r\n                {/* Graph */}\r\n                <Grid item xs={12} md={8} lg={9}>\r\n                  <Paper className={fixedHeightPaper}>\r\n                    <Graph />\r\n                  </Paper>\r\n                </Grid>\r\n                {/* Recent SearchTime */}\r\n                <Grid item xs={12} md={4} lg={3}>\r\n                  <Paper className={fixedHeightPaper}>\r\n                    <SearchTime />\r\n                  </Paper>\r\n                </Grid>\r\n                {/* Recent Table */}\r\n                <Grid item xs={20}>\r\n                  <div className={this.props.classes.paper}>\r\n                    <Table />\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n       \r\n    \r\n          </main>\r\n    \r\n        </div>\r\n      );\r\n    }\r\n      else if (this.state.menu==='SaltStack'){\r\n\r\n        return (\r\n          <div className={this.props.classes.root}>\r\n      \r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n      \r\n            <Toolbar className={this.props.classes.toolbar}>\r\n          \r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={this.handleDrawerOpen}\r\n              className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n            >\r\n  \r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n            SaltStack\r\n            </Typography>\r\n            \r\n           \r\n\r\n           \r\n\r\n              <Logout />\r\n           \r\n          \r\n          \r\n       \r\n  \r\n          </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n              variant=\"permanent\"\r\n              classes={{\r\n                paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n              }}\r\n              open={this.state.open}\r\n            >\r\n              <div className={this.props.classes.toolbarIcon}>\r\n                <IconButton onClick={this.handleDrawerClose}>\r\n                  <ChevronLeftIcon />\r\n                </IconButton>\r\n              </div>\r\n              <Divider />\r\n              <List>\r\n      \r\n              <ListItem button\r\n              onClick={()=>{this.SelectMenu('Dashboard')}}\r\n              >\r\n              <ListItemIcon>\r\n                <DashboardIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Dashboard\" />\r\n            </ListItem>\r\n            <ListItem button\r\n            onClick={()=>{this.SelectMenu('SaltStack')}}\r\n            >\r\n              <ListItemIcon>\r\n                <SimCardIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"SaltStack\" />\r\n            </ListItem>\r\n            <ListItem button\r\n            onClick={()=>{this.SelectMenu('Team')}}\r\n            >\r\n              <ListItemIcon>\r\n                <PeopleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Team\" />\r\n            </ListItem>\r\n           \r\n              </List>\r\n             \r\n\r\n\r\n\r\n\r\n\r\n            </Drawer>\r\n\r\n            <main className={this.props.classes.content}>\r\n              <div className={this.props.classes.appBarSpacer} />\r\n              <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n\r\n              <Grid item  xs >\r\n              <div className={this.props.classes.table}>\r\n                  <SaltStack/>\r\n              </div>\r\n   \r\n                </Grid>\r\n\r\n              </Container>\r\n            </main>\r\n      \r\n          </div>\r\n        );}\r\n\r\n\r\n\r\n       \r\n              else if (this.state.menu==='Team'){\r\n\r\n                return (\r\n                  <div className={this.props.classes.root}>\r\n              \r\n                    <CssBaseline />\r\n                    <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n              \r\n                    <Toolbar className={this.props.classes.toolbar}>\r\n                  \r\n                    <IconButton\r\n                      edge=\"start\"\r\n                      color=\"inherit\"\r\n                      aria-label=\"open drawer\"\r\n                      onClick={this.handleDrawerOpen}\r\n                      className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n                    >\r\n          \r\n                      <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n                    Team\r\n                    </Typography>\r\n                    \r\n                   \r\n        \r\n                     \r\n        \r\n                      <Logout />\r\n                   \r\n                  \r\n                  \r\n               \r\n          \r\n                  </Toolbar>\r\n                    </AppBar>\r\n                    <Drawer\r\n                      variant=\"permanent\"\r\n                      classes={{\r\n                        paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n                      }}\r\n                      open={this.state.open}\r\n                    >\r\n                      <div className={this.props.classes.toolbarIcon}>\r\n                        <IconButton onClick={this.handleDrawerClose}>\r\n                          <ChevronLeftIcon />\r\n                        </IconButton>\r\n                      </div>\r\n                      <Divider />\r\n                      <List>\r\n              \r\n                      <ListItem button\r\n                      onClick={()=>{this.SelectMenu('Dashboard')}}\r\n                      >\r\n                      <ListItemIcon>\r\n                        <DashboardIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Dashboard\" />\r\n                    </ListItem>\r\n                    <ListItem button\r\n                    onClick={()=>{this.SelectMenu('SaltStack')}}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <SimCardIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"SaltStack\" />\r\n                    </ListItem>\r\n                    <ListItem button\r\n                    onClick={()=>{this.SelectMenu('Team')}}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <PeopleIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Team\" />\r\n                    </ListItem>\r\n                   \r\n                      </List>\r\n                    \r\n        \r\n        \r\n        \r\n        \r\n        \r\n                    </Drawer>\r\n        \r\n                    <main className={this.props.classes.content}>\r\n                      <div className={this.props.classes.appBarSpacer} />\r\n                      <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n        \r\n                      <Grid item  xs >\r\n                      <div className={this.props.classes.table}>\r\n                          <Team/>\r\n                      </div>\r\n           \r\n                        </Grid>\r\n        \r\n                      </Container>\r\n                    </main>\r\n              \r\n                  </div>\r\n                );\r\n                    }\r\n              \r\n              \r\n}\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Dashboard);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass ForgotPassword extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.resetPass = this.resetPass.bind(this);\r\n    this.state = {\r\n      email: { value: null, error: false, helperText: null },\r\n      msg: null\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    reset_password: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n  \r\n\r\n  resetPass(event){\r\n    event.preventDefault();\r\n    if (this.emailInput.value === \"\") {\r\n      this.setState({\r\n        email: {\r\n          value: this.emailInput.value,\r\n          error: true,\r\n          helperText: \"Your email must be specified.\"\r\n        }\r\n      });\r\n      this.emailInput.focus();\r\n    }\r\n    else{\r\n    \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const email = this.emailInput.value\r\n        // Request body\r\n        const body = JSON.stringify({ email });\r\n    \r\n        axios.post('/forgot_password', body, config)\r\n        .then(res =>{\r\n            this.setState({ msg: res.message })\r\n            }\r\n          \r\n        )\r\n        .catch(err => {\r\n            this.setState({ msg: err.message })\r\n      \r\n        })\r\n        \r\n     }\r\n    \r\n    \r\n    }\r\n\r\n\r\n  render(){\r\n    const { classes } = this.props;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n             Enter Your Email Address\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={this.resetPass} >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              required\r\n              inputRef={input => (this.emailInput = input)}\r\n              error={this.state.email.error}\r\n              helperText={this.state.email.helperText}\r\n            />\r\n       <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n             Reset Password\r\n            </Button>\r\n\r\n            {this.state.msg  ? (\r\n            <Alert severity=\"error\">{this.state.msg}</Alert>\r\n              ) : (\r\n              null\r\n              )}\r\n             <Grid item xs>\r\n                <Link onClick={this.props.handler} variant=\"body2\">\r\n                  Back to login\r\n                </Link>\r\n              </Grid>\r\n          </form>\r\n        </div>\r\n       \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(\r\n)(withStyles(styles)(ForgotPassword))","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass ChangePasswordForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updatePass = this.updatePass.bind(this);\r\n    this.state = {\r\n      email: { value: null, error: false, helperText: null },\r\n      old_password1: { value: null, error: false, helperText: null },\r\n      old_password2: { value: null, error: false, helperText: null },\r\n      new_password: { value: null, error: false, helperText: null },\r\n      msg: null\r\n    };\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error } = this.props;\r\n    if (error !== prevProps.error) {\r\n      // Check for register error\r\n      if (error.id === 'Weak Password') {\r\n        this.setState({ msg: error.msg.msg });\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  updatePass(event){\r\n    event.preventDefault();\r\n    if (this.emailInput.value === \"\") {\r\n      this.setState({\r\n        email: {\r\n          value: this.emailInput.value,\r\n          error: true,\r\n          helperText: \"Your email must be specified.\"\r\n        }\r\n      });\r\n      this.emailInput.focus();\r\n    }\r\n    else{\r\n    \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n         const user = {\r\n              email: this.emailInput.value,\r\n              old_password1: this.old_password1.value,\r\n              old_password2: this.old_password2.value,\r\n              new_password: this.new_password.value,\r\n\r\n            };\r\n\r\n\r\n        // Request body\r\n        const body = JSON.stringify({ user });\r\n    \r\n        axios.post('/forgot_password', body, config)\r\n        .then(res =>{\r\n            this.setState({ msg: res.message })\r\n            }\r\n          \r\n        )\r\n        .catch(err => {\r\n            this.setState({ msg: err.message })\r\n      \r\n        })\r\n        \r\n     }\r\n  }\r\n\r\n\r\n  render(){\r\n    const { classes } = this.props;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Update Password\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={this.signIn} >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              required\r\n              inputRef={input => (this.emailInput = input)}\r\n              error={this.state.email.error}\r\n              helperText={this.state.email.helperText}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password1\"\r\n              label=\"Password1\"\r\n              type=\"password1\"\r\n              id=\"password1\"\r\n              autoComplete=\"current-password\"\r\n              inputRef={input => (this.passwordInput = input)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password2\"\r\n              label=\"Password2\"\r\n              type=\"password2\"\r\n              id=\"password2\"\r\n              autoComplete=\"current-password\"\r\n              inputRef={input => (this.passwordInput = input)}\r\n            />\r\n           \r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Update Password\r\n            </Button>\r\n\r\n            {this.state.msg  ? (\r\n            <Alert severity=\"error\">{this.state.msg}</Alert>\r\n              ) : (\r\n              null\r\n              )}\r\n              \r\n              <Grid item xs>\r\n                <Link onClick={this.props.handler} variant=\"body2\">\r\n                  Back to login\r\n                </Link>\r\n              </Grid>\r\n            \r\n          </form>\r\n        </div>\r\n        \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n)(withStyles(styles)(ChangePasswordForm))","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { login } from '../../actions/authActions';\r\nimport { clearErrors } from '../../actions/errorActions';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { StoreTwoTone } from '@material-ui/icons';\r\nimport store from '../../store';\r\nimport { Route } from 'react-router-dom';\r\nimport ForgotPasswordForm from './ForgotPasswordForm';\r\nimport ChangePasswordForm from './ChangePasswordForm';\r\n\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.signIn = this.signIn.bind(this);\r\n    this.handler = this.handler.bind(this);\r\n    this.state = {\r\n      email: { value: null, error: false, helperText: null },\r\n      password: { value: null, error: false, helperText: null },\r\n      msg: null\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, isAuthenticated } = this.props;\r\n    if (error !== prevProps.error) {\r\n      // Check for register error\r\n      if (error.id === 'LOGIN_FAIL') {\r\n        this.setState({ msg: error.msg });\r\n        setTimeout(function(){\r\n          this.setState({msg:null});\r\n          }.bind(this),3000);  // clear error after 3 seconds\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n   handler(){\r\n     this.setState(\r\n      {screen: 'login'}\r\n     )\r\n   }\r\n  \r\n\r\n   signIn(event){\r\n    event.preventDefault();\r\n    if (this.emailInput.value === \"\") {\r\n      this.setState({\r\n        email: {\r\n          value: this.emailInput.value,\r\n          error: true,\r\n          helperText: \"Your email must be specified.\"\r\n        }\r\n      });\r\n      this.emailInput.focus();\r\n    }\r\n    else{\r\n      const user = {\r\n        email: this.emailInput.value,\r\n        password: this.passwordInput.value,\r\n       };\r\n  \r\n      const log = this.props.login(user);\r\n      console.log(log)\r\n      this.props.history.push('/'); \r\n    }\r\n\r\n  }\r\n  \r\n\r\n  render(){\r\n    if (this.state.screen === 'forgot')\r\n      return <ForgotPasswordForm handler={this.handler}/>\r\n    if (this.state.screen === 'change')\r\n      return <ChangePasswordForm handler={this.handler}/>\r\n\r\n    const { classes } = this.props;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={this.signIn} >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              required\r\n              inputRef={input => (this.emailInput = input)}\r\n              error={this.state.email.error}\r\n              helperText={this.state.email.helperText}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              inputRef={input => (this.passwordInput = input)}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n\r\n            {this.state.msg  ? (\r\n            <Alert severity=\"error\">{this.state.msg}</Alert>\r\n              ) : (\r\n              null\r\n              )}\r\n\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link onClick={() => this.setState({screen:'forgot'})} variant=\"body2\">\r\n                {\"Reset Your Password\"}\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link onClick={() => this.setState({screen:'change'})} variant=\"body2\">\r\n                  {\"Do you want to update your password?\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { login, clearErrors }\r\n)(withStyles(styles)(LoginForm))","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport * as authActions from '../../actions/authActions'\r\nimport Dashboard from '../../Dashboard';\r\nimport LoginForm from '../auth/LoginForm';\r\nimport ChangePasswordForm from '../auth/ChangePasswordForm';\r\nimport PropTypes from 'prop-types';\r\nimport ForgotPasswordForm from '../auth/ForgotPasswordForm';\r\n\r\nclass Routes extends Component {\r\n\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n    // Similar to componentDidMount and componentDidUpdate:\r\n  render() {\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <PrivateRoute exact path=\"/\" component={Dashboard} authed={this.props.auth.isAuthenticated} />\r\n          <Route exact path=\"/login\" component={LoginForm} />\r\n\r\n\r\n        </div>\r\n      </BrowserRouter>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, authed, ...rest }) => (\r\n  // console.log(\"private routhh\", authed),\r\n  <Route\r\n    {...rest}\r\n    render={props => (\r\n      authed\r\n        ? <Component {...props} />\r\n        : <LoginForm {...props}/>\r\n    )}\r\n  />\r\n);\r\n\r\n\r\nconst mapStateToProps = state => ({ auth: state.auth });\r\n\r\nexport default connect(mapStateToProps, authActions)(Routes);\r\n","import React, { Component } from 'react';\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './App.css';\r\nimport Routes from './Component/routers/Routes';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    // console.log(\"rendering\")\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(\"dispatchhhhh from App\")\r\n    //store.dispatch(loadUser());\r\n    //console.log(store.getState(),\"state from app\");\r\n\r\n\r\n  }\r\n\r\n\r\n  static propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n  };\r\n\r\n\r\n  render() {\r\n     return (\r\n      <Routes />\r\n     )\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Dashboard from './Dashboard';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore } from 'redux';\r\nimport appReducer from './reducers/index';\r\nimport {Provider} from 'react-redux';\r\nimport App from './App';\r\nimport store from './store';\r\n\r\n// const store = createStore(appReducer);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n   , document.getElementById('root'),\r\n  );\r\n\r\n\r\n// ReactDOM.render( <Provider store={store}>\r\n//    <Dashboard />\r\n// </Provider> , document.getElementById('root'));\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();"],"sourceRoot":""}