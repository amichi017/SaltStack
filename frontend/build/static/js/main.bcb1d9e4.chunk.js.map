{"version":3,"sources":["reducers/CurrentMonth.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/reducersDate.js","reducers/saltReturns.js","reducers/saveMinion.js","reducers/listMinions.js","reducers/graphDate.js","reducers/saltReturnsGraph.js","reducers/CurrentYear.js","reducers/LastThreeMonths.js","reducers/index.js","actions/types.js","actions/errorActions.js","actions/authActions.js","store.js","actions/date.js","Component/Title.js","Component/Graph.js","Component/SearchTime.js","Component/Table.js","Component/MinionCard.js","Component/auth/Logout.js","Component/SaltStack.js","Component/SearchTimeGraph.js","Component/CurrentMonth.js","Component/CurrentYear.js","Component/LastThreeMonths.js","Component/TeamCard.js","Component/Team.js","Dashboard.js","serviceWorker.js","Component/auth/ForgotPasswordForm.js","Component/auth/ChangePasswordForm.js","Component/auth/LoginForm.js","Component/routers/Routes.js","App.js","index.js"],"names":["initialState","msg","status","id","token","isAuthenticated","isLoading","user","start","Date","end","graphDate","saltReturns","saveMinion","listMinions","saltReturnsGraph","temp","dataInit","mnonthDay","getFullYear","getMonth","getDate","i","push","name","String","Fail","Success","CurrentMonth","CurrentYear","LastThreeMonths","one","tow","three","appReducer","combineReducers","state","action","type","payload","date","auth","localStorage","setItem","access_token","removeItem","error","returnErrors","loadUser","dispatch","getState","axios","get","tokenConfig","then","res","data","catch","err","response","register","first_name","last_name","email","password","body","JSON","stringify","post","headers","console","log","login","message","logout","config","middleWare","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","str","toDateString","MonthStart","parseInt","yearStart","DayStart","Start","MonthEnd","yearEnd","DayEnd","End","minions","year","dayEnd","satrtCurrentMonth","yearTemp","satrtMonth","endtLastThreeMonths","url","concat","Title","props","Typography","component","variant","color","gutterBottom","children","createData","time","amount","demoOnClick","e","parseNumber","hower","slice","Chart","bind","flag","graphIsPrepared","tempArray","forEach","item","Array","isArray","return","Object","entries","map","index","arr","result","length","jid","setState","forceUpdate","nextProps","this","Fragment","style","paddingLeft","toLocaleDateString","onClick","margin","top","right","bottom","left","dataKey","stroke","className","classes","root","CircularProgress","React","PureComponent","connect","withStyles","theme","display","marginLeft","spacing","marginTop","Deposits","handleDateChangeStart","handleDateChangeEnd","dateIsChanged","booleanStart","booleanEnd","utils","DateFnsUtils","Grid","container","justify","label","format","value","onChange","KeyboardButtonProps","flex","paddingTop","Button","endIcon","Component","ownProps","minet","month","day","tableIcons","Add","forwardRef","ref","AddBox","Check","Clear","Delete","Edit","DetailPanel","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ArrowDownward","ThirdStateCheck","Remove","ViewColumn","dataColumns","title","field","cellStyle","x","dataTable","Orders","selestMinion","handleClickOpen","handleClose","Returns","dialogOpen","minion","setTimeout","getTime","setHours","saltTemp","_id","event","rowData","filter","nextState","columns","icons","onRowClick","evt","selectedRow","options","exportButton","filtering","actions","icon","tooltip","Dialog","open","onClose","aria-describedby","maxWidth","scroll","aria-labelledby","DialogTitle","fontSize","undefined","DialogContent","dividers","minWidth","TreeView","defaultCollapseIcon","defaultExpandIcon","TreeItem","nodeId","keys","values","TreeItemText","text","comment","changes","_id_","CardActions","DialogActions","autoFocus","height","flexGrow","MinionCard","commentg","defer","click","listOpen","onClickMinion","handleClickButton","prepared","prevState","bullet","Card","CardContent","Parameter","disableSpacing","IconButton","aria-label","DialogContentText","Width","root2","width","backgroundColor","palette","background","paper","nested","transform","overflow","pos","marginBottom","button","flexWrap","Logout","border","SaltStack","reason","warninginput","warningNoMinionSelected","handleClick","countSaveMinion","input","clickSave","words","split","parms_send","parms","func","tgt","salt_cmd","tokenTemp","history","unshift","key","buildRes","minionRes","shift","err_cmd","err_cmd_flag","clickOpen","sentCommand","getMinionsFromServer","alert","menu","row","commntId","command","flexDirection","Paper","iconButton","InputBase","autoComplete","target","placeholder","inputProps","Divider","divider","orientation","size","Comments","light","paperParms","inputparms","ButtonGroup","flexFlow","MaterialTable","Alert","severity","selection","Snackbar","autoHideDuration","padding","alignItems","minionStyle","iconButtonParms","dividerParms","SearchTimeGraph","handleDateChange","strokeDasharray","verticalAlign","wrapperStyle","lineHeight","y","fill","dataInitOne","dataInitTow","dataInitThree","nameOne","nameTow","nameThree","tempMonth","monthDay","place","listMonth","TeamCard","deleteIcon","expanded","UpperCase","isDelete","toUpperCase","Role","ReturnPassword","Email","role","delete","colors","Math","floor","random","CardHeader","avatar","Avatar","subheader","paragraph","mail","media","expand","transition","transitions","create","duration","shortest","expandOpen","red","wordWrap","Team","handleExpandClick","ClickFab","signIn","handleInputChange","handleClickShowPassword","handleMouseDownPassword","handleClickShowPasswordReturn","handleMouseDownPasswordReturn","initTeam","fab","Password","showPasswordReturn","showPassword","errPassword","saveCard","counter","err_first_name","err_last_name","err_Role","err_Email","err_Password","no_add_card","lastName","preventDefault","strongRegex","RegExp","emailRegex","test","UnsecuredPassword","Fab","form","onSubmit","TextField","required","fullWidth","InputProps","startAdornment","InputAdornment","position","endAdornment","onMouseDown","startIcon","justifyContent","outline","outlineOffset","Dashboard","handleDrawerOpen","handleDrawerClose","SelectMenu","CurrentYearFun","fixedHeightPaper","clsx","fixedHeight","fixedHeightPaperFirst","fixedHeightFirst","fixedHeightPaperTow","fixedHeightTow","CssBaseline","AppBar","appBar","appBarShift","Toolbar","toolbar","edge","menuButton","menuButtonHidden","noWrap","Drawer","drawerPaper","drawerPaperClose","toolbarIcon","List","ListItem","ListItemIcon","ListItemText","primary","ListSubheader","inset","content","appBarSpacer","Container","xs","md","lg","Graph","SearchTime","Table","table","paddingRight","mixins","zIndex","drawer","easing","sharp","leavingScreen","enteringScreen","marginRight","whiteSpace","overflowX","breakpoints","up","paddingBottom","AccountCircleIcon","NotificationsIcon","Boolean","location","hostname","match","ForgotPassword","resetPass","helperText","emailInput","focus","submit","Link","handler","secondary","main","ChangePasswordForm","updatePass","old_password1","old_password2","new_password","prevProps","inputRef","passwordInput","LoginForm","screen","ForgotPasswordForm","FormControlLabel","control","Checkbox","clearErrors","Routes","exact","path","authed","PrivateRoute","rest","render","authActions","App","ReactDOM","document","getElementById"],"mappings":"0laAMA,I,oRCHMA,EAAe,CACjBC,IAAK,GACLC,OAAQ,KACRC,GAAI,MCKFH,EAAe,CACjBI,MAAO,KACPC,gBAAiB,KACjBC,WAAW,EACXC,KAAM,MCZHP,EAAe,CAEjBQ,MAAO,IAAIC,KACXC,IAAK,IAAID,KACTE,UAAW,IAAIF,MCHbT,EAAe,CAClBY,YAAY,MCDTZ,EAAe,CAClBa,WAAW,ICDTb,EAAe,CAClBc,YAAY,ICFTd,EAAe,CAEjBW,UAAW,IAAIF,MCFZT,EAAe,CAClBe,iBAAiB,MRDjBC,EAAK,IAAIP,KACTQ,EAAS,GACTC,EAAW,IAAIT,KAAKO,EAAKG,cAAeH,EAAKI,WAAW,EAAG,GAAGC,UACzDC,EAAE,EAAEA,GAAGJ,EAAUI,IACtBL,EAASM,KAAM,CAAEC,KAAMC,OAAOH,GAAII,KAAK,EAAGC,QAAQ,IAEtD,IAAM3B,EAAe,CACjB4B,aAAaX,GSPbA,EAAS,GAEbA,EAASM,KAAM,CAAEC,KAAMC,OAAO,WAAYC,KAAK,EAAGC,QAAQ,IAC1DV,EAASM,KAAM,CAAEC,KAAMC,OAAO,YAAaC,KAAK,EAAGC,QAAQ,IAC3DV,EAASM,KAAM,CAAEC,KAAMC,OAAO,SAAUC,KAAK,EAAGC,QAAQ,IACxDV,EAASM,KAAM,CAAEC,KAAMC,OAAO,SAAUC,KAAK,EAAGC,QAAQ,IACxDV,EAASM,KAAM,CAAEC,KAAMC,OAAO,QAASC,KAAK,EAAGC,QAAQ,IACvDV,EAASM,KAAM,CAAEC,KAAMC,OAAO,UAAWC,KAAK,EAAGC,QAAQ,IACzDV,EAASM,KAAM,CAAEC,KAAMC,OAAO,UAAWC,KAAK,EAAGC,QAAQ,IACzDV,EAASM,KAAM,CAAEC,KAAMC,OAAO,WAAYC,KAAK,EAAGC,QAAQ,IAC1DV,EAASM,KAAM,CAAEC,KAAMC,OAAO,cAAcC,KAAK,EAAGC,QAAQ,IAC5DV,EAASM,KAAM,CAAEC,KAAMC,OAAO,YAAaC,KAAK,EAAGC,QAAQ,IAC3DV,EAASM,KAAM,CAAEC,KAAMC,OAAO,cAAcC,KAAK,EAAGC,QAAQ,IAC5DV,EAASM,KAAM,CAAEC,KAAMC,OAAO,aAAcC,KAAK,EAAGC,QAAQ,IAC5D,IAAM3B,EAAe,CACjB6B,YAAYZ,GCdVjB,EAAe,CACjB8B,gBAAgB,CAACC,IAAI,GAAGC,IAAI,GAAGC,MAAM,KCuB1BC,EAhBIC,YAAgB,CACjCvB,YPLa,WAAsC,IAA7BwB,EAA4B,uDAAtBpC,EAAcqC,EAAQ,uCAEpD,OAAOA,EAAOC,MACV,IQAwB,eRCxB,MAAO,CACH1B,YAAYyB,EAAOE,SAEvB,QACI,OAAOH,IOFbrB,iBHPa,WAAsC,IAA7BqB,EAA4B,uDAAtBpC,EAAcqC,EAAQ,uCAEpD,OAAOA,EAAOC,MACV,IIM8B,qBJL9B,MAAO,CACHvB,iBAAiBsB,EAAOE,SAE5B,QACI,OAAOH,IGAbI,KRHc,WAAsC,IAA7BJ,EAA4B,uDAAtBpC,EAAcqC,EAAQ,uCAEnD,OAAOA,EAAOC,MACV,ISLqB,cTMnB,MAAO,CACC9B,MAAM6B,EAAOE,QAAQ/B,MACrBE,IAAI2B,EAAOE,QAAQ7B,KAK3B,QACO,OAAO0B,IQRpBzB,UJNa,WAAsC,IAA7ByB,EAA4B,uDAAtBpC,EAAcqC,EAAQ,uCAEnD,OAAOA,EAAOC,MACV,IKE4B,oBLD1B,MAAO,CACE3B,UAAU0B,EAAOE,QAAQ5B,WAKlC,QACO,OAAOyB,IIJnBK,KTEa,WAAuC,IAA9BL,EAA6B,uDAArBpC,EAAcqC,EAAO,uCACjD,OAAOA,EAAOC,MACV,IUrBoB,eVsBhB,OAAO,eACAF,EADP,CAEI9B,WAAW,IAEnB,IUzBmB,cV0Bf,OAAO,eACA8B,EADP,CAEI/B,iBAAiB,EACjBC,WAAW,EACXC,KAAM8B,EAAOE,UAErB,IU9BqB,gBVgCjB,OADAG,aAAaC,QAAQ,QAASN,EAAOE,QAAQK,cACtC,CACHxC,MAAOiC,EAAOE,QAAQK,aACtBvC,iBAAiB,EACjBC,WAAW,GAEnB,IUtCkB,aVuClB,IUrCkB,aVsClB,IUrCsB,iBVsCtB,IUpCqB,gBVsCjB,OADAoC,aAAaG,WAAW,SACjB,eACAT,EADP,CAEIhC,MAAO,KACPG,KAAM,KACNF,iBAAiB,EACjBC,WAAW,IAEnB,QACI,OAAO8B,ISnCjBU,MVRa,WAAsC,IAA7BV,EAA4B,uDAAtBpC,EAAcqC,EAAQ,uCAEhD,OAAOA,EAAOC,MACV,IWLkB,aXMd,MAAO,CACHrC,IAAKoC,EAAOE,QAAQtC,IACpBC,OAAQmC,EAAOE,QAAQrC,OACvBC,GAAIkC,EAAOE,QAAQpC,IAE3B,IWVoB,eXWhB,MAAO,CACHF,IAAK,GACLC,OAAQ,KACRC,GAAI,MAEZ,QACI,OAAOiC,IUPjBvB,WNXa,WAAsC,IAA7BuB,EAA4B,uDAAtBpC,EAAcqC,EAAQ,uCAEpD,OAAOA,EAAOC,MACV,IOCuB,cPAvB,MAAO,CACHzB,WAAWwB,EAAOE,SAEtB,QACI,OAAOH,IMIbtB,YLZa,WAAsC,IAA7BsB,EAA4B,uDAAtBpC,EAAcqC,EAAQ,uCAEpD,OAAOA,EAAOC,MACX,IMEyB,eNDxB,MAAO,CACHxB,YAAYuB,EAAOE,SAExB,QACI,OAAOH,IKKZR,aXRa,WAAsC,IAA7BQ,EAA4B,uDAAtBpC,EAAcqC,EAAQ,uCAEpD,OAAOA,EAAOC,MACX,IYC0B,gBZA1B,MAAO,CACNV,aAAaS,EAAOE,SAErB,QACI,OAAOH,IWCZP,YFDa,WAAsC,IAA7BO,EAA4B,uDAAtBpC,EAAcqC,EAAQ,uCAEpD,OAAOA,EAAOC,MACX,IGNyB,eHOzB,MAAO,CACNT,YAAYQ,EAAOE,SAEpB,QACI,OAAOH,IENZN,gBDfa,WAAsC,IAA7BM,EAA4B,uDAAtBpC,EAAcqC,EAAQ,uCAEpD,OAAOA,EAAOC,MACX,IEQ8B,oBFP9B,MAAO,CACNR,gBAAgBO,EAAOE,SAExB,QACI,OAAOH,MGbDW,EAAe,SAAC9C,EAAKC,GAAuB,IAAfC,EAAc,uDAAT,KAE3C,MAAO,CACHmC,KDEkB,aCDlBC,QAAS,CAAEtC,MAAKC,SAAQC,QCUnB6C,GAAW,kBAAM,SAACC,EAAUC,GAErCD,EAAS,CAAEX,KFnBa,iBEoBxBa,IACGC,IAAI,aAAcC,GAAYH,IAC9BI,MAAK,SAAAC,GAAG,OACPN,EAAS,CACPX,KFvBiB,cEwBjBC,QAASgB,EAAIC,UAGhBC,OAAM,SAAAC,GACFA,EAAIC,WACHV,EAASF,EAAaW,EAAIC,SAASH,KAAME,EAAIC,SAASzD,SACtD+C,EAAS,CACLX,KF9BU,qBEqCbsB,GAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,MAAOC,EAAjC,EAAiCA,SAAjC,OAAgD,SAAAf,GAEpE,IAOMgB,EAAOC,KAAKC,UAAU,CAACN,aAAYC,YAAWC,QAAOC,aAE3Db,IAAMiB,KAAK,YAAaH,EATT,CACXI,QAAS,CACL,eAAgB,sBAQvBf,MAAK,SAAAC,GAAG,OAAIN,EAAS,CAClBX,KF9CwB,mBE+CxBC,QAASgB,EAAIC,UAEhBC,OAAM,SAAAC,GACHY,QAAQC,IAAIb,GACZT,EAASF,EAAaW,EAAIC,SAASH,KAAME,EAAIC,SAASzD,OAAQ,kBAC9D+C,EAAS,CACLX,KFpDiB,uBEyDhBkC,GAAQ,SAAC,GAAD,IAAGT,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OAAyB,SAAAf,GAE1C,IAMMgB,EAAOC,KAAKC,UAAU,CAAEJ,QAAOC,aAErCb,IAAMiB,KAAK,QAASH,EARL,CACXI,QAAS,CACL,eAAgB,sBAOvBf,MAAK,SAAAC,GAAG,OAAIN,EAAS,CAClBX,KFzEqB,gBE0ErBC,QAASgB,EAAIC,UAGhBC,OAAM,SAAAC,GACHT,EAASF,EAAaW,EAAIC,SAASH,KAAKiB,QAASf,EAAIC,SAASzD,OAAQ,eACtE+C,EAAS,CACLX,KF/Ec,oBEsFboC,GAAS,kBAAM,SAAAzB,GACxBA,EAAS,CACLX,KFvFsB,qBE6FjBe,GAAc,SAAAH,GAEpB,IAAM9C,EAAQ8C,IAAWT,KAAKrC,MAGxBuE,EAAS,CACXN,QAAS,CACL,eAAgB,qBAS3B,OAJMjE,IACAuE,EAAON,QAAP,gCAA6CjE,EAA7C,MAGCuE,GC1GLC,GAAa,CAACC,KAEdC,GAAmBC,OAAOC,sCAAwCC,IAQzDC,GAPDC,YACZC,EANmB,GAQnBN,GAAiBO,IAAe,WAAf,EAAmBT,M,UC8DxBhE,GAAe,SAAC0E,GAAD,OAAS,SAACrC,EAAUC,IAEhC,IAAIzC,MAAO8E,eAAvB,IACOC,EAAY/D,OAAOgE,SAASP,GAAMhC,WAAWV,KAAKhC,MAAMY,WAAW,IACvEoE,EAAWC,SAASD,GAAY,GAAG,IAAIA,EAAWA,EAClD,IAAIE,EAAUjE,OAAOyD,GAAMhC,WAAWV,KAAKhC,MAAMW,eAC7CwE,EAAST,GAAMhC,WAAWV,KAAKhC,MAAMa,UACzCsE,EAASF,SAASE,GAAU,GAAG,IAAIA,EAASA,EAC5C,IAAIC,EAAMF,EAAUjE,OAAO+D,GAAY/D,OAAOkE,GAAU,eAEpDE,EAAUpE,OAAOgE,SAASP,GAAMhC,WAAWV,KAAK9B,IAAIU,YAAY,GACpEyE,EAASJ,SAASI,GAAU,GAAG,IAAIA,EAASA,EAC5C,IAAIC,EAAQrE,OAAOyD,GAAMhC,WAAWV,KAAK9B,IAAIS,eACzC4E,EAAOb,GAAMhC,WAAWV,KAAK9B,IAAIW,UACrC0E,EAAON,SAASM,GAAQ,GAAG,IAAIA,EAAOA,EAEtC,IAAIC,EAAIF,EAAQrE,OAAOoE,GAAUpE,OAAOsE,GAAQ,eAK5CE,EAAQ,GAGf,GAAW,gBAARX,EAAsB,CAGtB,IAAIY,EAAKzE,QAAO,IAAIhB,MAAOU,eACvBgF,EAAO1E,OAAO,IAAIhB,KAAKyF,EAAM,GAAI,GAAG7E,WACxC0E,EAAON,SAASM,GAAQ,GAAG,IAAIA,EAAOA,EACtCH,EAAOM,qBACPF,EAAKE,EAAK,KAAKC,EAAO,oBAEpB,GAAW,iBAARb,EAAuB,CAG5B,IAAIY,EAAKzE,QAAO,IAAIhB,MAAOU,eACvBgF,EAAO1E,OAAO,IAAIhB,KAAKyF,GAAM,IAAIzF,MAAOW,WAAW,EAAG,GAAGC,WAC7D0E,EAAON,SAASM,GAAQ,GAAG,IAAIA,EAAOA,EACtC,IAAIK,GAAmB,IAAI3F,MAAOW,WAAW,EAE7CwE,EAAOM,GADPE,EAAkBX,SAAUW,GAAmB,GAAG,IAAKA,EAAmBA,GACnEF,iBACPF,EAAKE,EAAKE,EAAkBD,EAAO,oBAEjC,GAAW,oBAARb,EAA0B,CAG/B,IAAIe,EAAS5E,QAAO,IAAIhB,MAAOU,eAC3B+E,EAAMzE,OAAO,IAAIhB,KAAK4F,GAAU,IAAI5F,MAAOW,WAAW,EAAG,GAAGD,eAC5DgF,EAAO1E,OAAO,IAAIhB,KAAKyF,GAAM,IAAIzF,MAAOW,WAAY,GAAGC,WAC3D0E,EAAON,SAASM,GAAQ,GAAG,IAAIA,EAAOA,EACtC,IAAIO,EAAW,IAAI7F,KAAK,MAAM,IAAIA,MAAOW,WAAW,EAAG,GAAGA,WAC1DkF,EAAWb,SAASa,GAAY,GAAG,IAAIA,EAAWA,EAClD,IAAIC,EAAoB9E,QAAO,IAAIhB,MAAOW,YAE1CwE,EAAOM,EAAKI,EAALJ,iBACPF,EAAKE,GAFLK,EAAoBd,SAAUc,GAAqB,GAAG,IAAKA,EAAqBA,GAElDJ,EAAO,eAEzC7B,QAAQC,IAAIqB,EAAM,SAClBtB,QAAQC,IAAIyB,EAAI,OACf,IAAIQ,EAAI,0BAA0BZ,EAAM,IAAII,EAE5C7C,IAAMC,IAAIoD,EAAKnD,GAAYH,IAC3BI,MAAK,SAACC,GACHe,QAAQC,IAAI,0CACZ0B,EAAQA,EAAQQ,OAAOlD,EAAIC,MAG3B0B,GAAMjC,SAAS,CACXX,KJtIgB,eIuIhBC,QAAS0D,OAIhBxC,OAAM,SAAAC,GACHY,QAAQC,IAAIb,EAAI,sBAgEXL,GAAc,SAAAH,GAGvB,IAAM9C,EAAQ8C,IAAWT,KAAKrC,MAGxBuE,EAAS,CACXN,QAAS,CACL,eAAgB,wBAS3B,OAJMjE,IACAuE,EAAON,QAAP,gCAA6CjE,EAA7C,MAGCuE,G,SCpOO,SAAS+B,GAAMC,GAC5B,OACE,kBAACC,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKC,MAAM,UAAUC,cAAY,GACjEL,EAAMM,U,sBC0Bb,SAASC,GAAWC,EAAKxF,EAAQD,EAAM0F,GACrC,MAAO,CAAED,OAAKxF,UAAQD,OAAM0F,UAE9B,IAAMC,GAAa,SAACC,KAedC,IAXJL,GAAW,QAAQ,EAAE,EAAG,GACxBA,GAAW,QAAQ,EAAE,EAAG,GACxBA,GAAW,QAAQ,EAAE,EAAG,GACxBA,GAAW,QAAQ,EAAE,EAAG,GACxBA,GAAW,QAAQ,EAAE,EAAG,GACxBA,GAAW,QAAQ,EAAE,EAAG,GACxBA,GAAW,QAAQ,EAAE,EAAG,GACxBA,GAAW,QAAQ,EAAE,EAAG,GACxBA,GAAW,QAAQ,EAAE,EAAG,GAGP,SAAC5B,GAClB,IAAIkC,EAAO/B,SAASH,EAAImC,MAAM,EAAE,KAChC,OAAGD,GAAO,EAAU,QACjBA,GAAO,EAAU,QACjBA,GAAO,EAAU,QACjBA,GAAO,GAAW,QAClBA,GAAO,GAAW,QAClBA,GAAO,GAAW,QAClBA,GAAO,GAAW,QAClBA,GAAO,GAAW,QACd,UAkCFE,G,kDAEL,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IACD1F,SAAW,EAAKA,SAAS0G,KAAd,gBAChB,EAAKvF,MAAQ,CACXzB,UAAW,IAAIF,KACfmH,MAAK,EACL3B,QAAQ,KACR4B,iBAAgB,EAChBrE,KAAO,CAAC,CAAE2D,KAAK,QAAQxF,QAAQ,EAAED,KAAK,EAAG0F,OAAO,GACxC,CAAED,KAAK,QAAQxF,QAAQ,EAAED,KAAK,EAAG0F,OAAO,GACxC,CAAED,KAAK,QAAQxF,QAAQ,EAAED,KAAK,EAAG0F,OAAO,GACxC,CAAED,KAAK,QAAQxF,QAAQ,EAAED,KAAK,EAAG0F,OAAO,GACxC,CAAED,KAAK,QAAQxF,QAAQ,EAAED,KAAK,EAAG0F,OAAO,GACxC,CAAED,KAAK,QAAQxF,QAAQ,EAAED,KAAK,EAAG0F,OAAO,GACxC,CAAED,KAAK,QAAQxF,QAAQ,EAAED,KAAK,EAAG0F,OAAO,GACxC,CAAED,KAAK,QAAQxF,QAAQ,EAAED,KAAK,EAAG0F,OAAO,GACxC,CAAED,KAAK,QAAQxF,QAAQ,EAAED,KAAK,EAAG0F,OAAO,KAEpD,EAAKnG,WAlBc,E,uDAoBV,IAAD,OAEJuE,EAAY/D,OAAOgE,SAASP,GAAMhC,WAAWvC,UAAUA,UAAUS,WAAW,IAChFoE,EAAWC,SAASD,GAAY,GAAG,IAAIA,EAAWA,EAClD,IAAIE,EAAUjE,OAAOyD,GAAMhC,WAAWvC,UAAUA,UAAUQ,eACtDwE,EAAST,GAAMhC,WAAWvC,UAAUA,UAAUU,UAClDsE,EAASF,SAASE,GAAU,GAAG,IAAIA,EAASA,EAC5C,IAAIC,EAAMF,EAAUjE,OAAO+D,GAAY/D,OAAOkE,GAAU,eAEpDE,EAAUpE,OAAOgE,SAASP,GAAMhC,WAAWvC,UAAUA,UAAUS,YAAY,GAC/EyE,EAASJ,SAASI,GAAU,GAAG,IAAIA,EAASA,EAC5C,IAAIC,EAAQrE,OAAOyD,GAAMhC,WAAWvC,UAAUA,UAAUQ,eACpD4E,EAAOb,GAAMhC,WAAWvC,UAAUA,UAAUU,UAChD0E,EAAON,SAASM,GAAQ,GAAG,IAAIA,EAAOA,EAEtC,IAAIC,EAAIF,EAAQrE,OAAOoE,GAAUpE,OAAOsE,GAAQ,eAK5CE,EAAQ,GAMVO,EAAI,0BAA0BZ,EAAM,IAAII,EAE5C7C,IAAMC,IAAIoD,EAjFW,SAAAtD,GAGlB,IAAM9C,EAAQ8E,GAAMhC,WAAWT,KAAKrC,MAG9BuE,EAAS,CACXN,QAAS,CACL,eAAgB,wBAS3B,OAJMjE,IACAuE,EAAON,QAAP,gCAA6CjE,EAA7C,MAGCuE,EAgEQtB,CAAY6B,GAAMhC,aAChCI,MAAK,SAACC,GACL,IAAIuE,EAAU,CACZ,CAAEX,KAAK,QAAQxF,QAAQ,EAAED,KAAK,EAAG0F,OAAO,GACxC,CAAED,KAAK,QAAQxF,QAAQ,EAAED,KAAK,EAAG0F,OAAO,GACxC,CAAED,KAAK,QAAQxF,QAAQ,EAAED,KAAK,EAAG0F,OAAO,GACxC,CAAED,KAAK,QAAQxF,QAAQ,EAAED,KAAK,EAAG0F,OAAO,GACxC,CAAED,KAAK,QAAQxF,QAAQ,EAAED,KAAK,EAAG0F,OAAO,GACxC,CAAED,KAAK,QAAQxF,QAAQ,EAAED,KAAK,EAAG0F,OAAO,GACxC,CAAED,KAAK,QAAQxF,QAAQ,EAAED,KAAK,EAAG0F,OAAO,GACxC,CAAED,KAAK,QAAQxF,QAAQ,EAAED,KAAK,EAAG0F,OAAO,GACxC,CAAED,KAAK,QAAQxF,QAAQ,EAAED,KAAK,EAAG0F,OAAO,IAE1CnB,EAAQA,EAAQQ,OAAOlD,EAAIC,MAI3B,EAAKpB,MAAM6D,QAAQA,EAEK,OAArB,EAAK7D,MAAM6D,SAWV,EAAK7D,MAAM6D,QAMR8B,SAAQ,SAAAC,GACP,IAAIzE,GAAI,EACJqE,EAAK,EAET,GAAGK,MAAMC,QAAQF,EAAKG,QAAU5E,GAAI,OAGnB6E,OAAOC,QAAQL,EAAKG,QAAQG,KAAI,SAAChB,EAAEiB,EAAMC,IACjC,IAAhBlB,EAAE,GAAGmB,QAA6B,IAAPb,IAC5BrE,GAAI,EACLqE,EAAK,GAGJW,IAAQC,EAAIE,OAAO,GAAc,IAATd,IACxBA,EAAK,EACLrE,GAAI,MASa,UAAxBgE,GAAYS,EAAKW,QACV,IAARpF,EAAeuE,EAAU,GAAGnG,UAAYmG,EAAU,GAAGpG,QAC5B,UAAxB6F,GAAYS,EAAKW,QACV,IAARpF,EAAeuE,EAAU,GAAGnG,UAAYmG,EAAU,GAAGpG,QAC5B,UAAxB6F,GAAYS,EAAKW,QACV,IAARpF,EAAeuE,EAAU,GAAGnG,UAAYmG,EAAU,GAAGpG,QAC5B,UAAxB6F,GAAYS,EAAKW,QACV,IAARpF,EAAeuE,EAAU,GAAGnG,UAAYmG,EAAU,GAAGpG,QAC5B,UAAxB6F,GAAYS,EAAKW,QACV,IAARpF,EAAeuE,EAAU,GAAGnG,UAAYmG,EAAU,GAAGpG,QAC5B,UAAxB6F,GAAYS,EAAKW,QACV,IAARpF,EAAeuE,EAAU,GAAGnG,UAAYmG,EAAU,GAAGpG,QAC5B,UAAxB6F,GAAYS,EAAKW,QACV,IAARpF,EAAeuE,EAAU,GAAGnG,UAAYmG,EAAU,GAAGpG,QAC5B,UAAxB6F,GAAYS,EAAKW,QACV,IAARpF,EAAeuE,EAAU,GAAGnG,UAAYmG,EAAU,GAAGpG,WAM3D,EAAKU,MAAMoB,KAAKsE,EAChB,EAAKc,SAAS,CAACpF,KAAKsE,EAAUD,iBAAgB,IAE/C,EAAKgB,iBAGPpF,OAAM,SAAAC,GACLY,QAAQC,IAAIb,EAAI,sB,gDAMUoF,GACxBC,KAAK9H,a,+BAuBL,OAAgC,IAA7B8H,KAAK3G,MAAMyF,gBAEV,kBAAC,IAAMmB,SAAP,KAEE,kBAACtC,GAAD,CAAOuC,MAAO,CAACC,YAAY,IAA3B,IAAiChE,GAAMhC,WAAWvC,UAAUA,UAAUwI,sBACxE,kBAAC,KAAD,KACI,kBAAC,KAAD,CACEC,QAAS/B,GACT7D,KAAOuF,KAAK3G,MAAMoB,KAClB6F,OAAQ,CAACC,IAAK,GAAGC,MAAO,GAAGC,OAAQ,EAAEC,KAAM,KAC7C,kBAAC,KAAD,CAAOC,QAAQ,SAAS,kBAAC,KAAD,MAExB,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAMpH,KAAK,WAAWoH,QAAQ,UAAUC,OAAO,UAAUP,QAAS/B,KAClE,kBAAC,KAAD,CAAM/E,KAAK,WAAWoH,QAAQ,OAAOC,OAAO,UAAUP,QAAS/B,QASnE,yBAAKuC,UAAWb,KAAKpC,MAAMkD,QAAQC,MACnC,kBAACC,GAAA,EAAD,W,GAjMaC,IAAMC,eAmNZC,gBATS,SAAC9H,GACvB,MAAO,CACLrB,iBAAkBqB,EAAMrB,iBACxBJ,UAAWyB,EAAMzB,aAMNuJ,CAAyBC,cA9NzB,SAAAC,GAAK,MAAK,CACvBN,KAAM,CACJO,QAAS,OACTC,WAAYF,EAAMG,QAAQ,IAC1BC,UAAUJ,EAAMG,QAAQ,IACxB,YAAa,CACXD,WAAYF,EAAMG,QAAQ,QAwNQJ,CAAmBzC,K,4DCjRpD+C,G,kDACL,WAAY9D,GAAQ,IAAD,8BACjB,cAAMA,IACD+D,sBAAwB,EAAKA,sBAAsB/C,KAA3B,gBAC7B,EAAKgD,oBAAsB,EAAKA,oBAAoBhD,KAAzB,gBAC3B,EAAKiD,cAAgB,EAAKA,cAAcjD,KAAnB,gBAErB,EAAKvF,MAAM,CAAC5B,MAAM,EAAKmG,MAAMnE,KAAKhC,MAAQE,IAAI,EAAKiG,MAAMnE,KAAK9B,IAAK8B,KAAK,MANvD,E,kEAYGA,GACpBuG,KAAKH,SAAS,CAACiC,cAAa,EAAKrK,MAAMgC,M,0CAIpBA,GACpBuG,KAAKH,SAAS,CAACkC,YAAW,EAAKpK,IAAI8B,M,sCAIhC,IAAIhC,EAAMuI,KAAK3G,MAAM5B,MACjBE,EAAIqI,KAAK3G,MAAM1B,IAEnBwE,GAAMjC,SAAS,CACbX,KPlDmB,cOmDnBC,QAAS,CAAC/B,MAAMA,EAAME,IAAIA,KAE3BwE,GAAMjC,SAASrC,Q,+BAQT,IAAD,OACR,OACE,kBAAC,IAAMoI,SAAP,CAAgBC,MAAO,CAACuB,WAAW,IACjC,kBAAC5D,EAAA,EAAD,CAAaE,QAAQ,MAEnB,kBAAC,KAAD,CAAyBiE,MAAOC,YAC9B,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBACxB,kBAAC,KAAD,CACA9B,OAAO,SACPlJ,GAAG,qBACHiL,MAAM,mBACNC,OAAO,aACPC,MAAOvC,KAAK3G,MAAM5B,MAClB+K,SAAU,SAAC/I,GAAQ,EAAKkI,sBAAsBlI,IAC9CgJ,oBAAqB,CACnB,aAAc,iBAIlB,kBAAC,KAAD,CACAnC,OAAO,SACPlJ,GAAG,qBACHiL,MAAM,iBACNC,OAAO,aACPC,MAAOvC,KAAK3G,MAAM1B,IAClB6K,SAAU,SAAC/I,GAAQ,EAAKmI,oBAAoBnI,IAC5CgJ,oBAAqB,CACnB,aAAc,iBAIpB,kBAAC5E,EAAA,EAAD,CAAYqC,MAAO,CAACwC,KAAM,EAAEC,WAAW,KAIrC,kBAACC,GAAA,EAAD,CACA7E,QAAQ,WAAWC,MAAM,UACzBqC,QAASL,KAAK6B,cACdgB,QAAU,kBAAC,KAAD,gBAHV,mB,GAzEgB5B,IAAM6B,WAqGf3B,oBATU,SAAC9H,EAAO0J,GAC/B,MAAO,CACLtJ,KAAMJ,EAAMI,QAOD0H,CAAyBO,I,iRCrFlCtD,GAAM,SAAC7B,GACT,IAAMkC,EAAOlC,EAAImC,MAAM,EAAE,IACnBsE,EAAMzG,EAAImC,MAAM,GAAG,IACzB,OAAOhG,OAAO+F,GAAO,IAAI/F,OAAOsK,IAI7BvJ,GAAK,SAAC8C,GACT,IAAMY,EAAMZ,EAAImC,MAAM,EAAE,GAClBuE,EAAOvK,OAAOgE,SAASH,EAAImC,MAAM,EAAE,KACnCwE,EAAK3G,EAAImC,MAAM,EAAE,GAEvB,OAAOhG,OAAOwK,GAAK,IAAIxK,OAAOuK,GAAO,IAAIvK,OAAOyE,IAG9CgG,GAAa,CACfC,IAAKC,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACC,GAAA,EAAD,iBAAY3F,EAAZ,CAAmB0F,IAAKA,QACxDE,MAAOH,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACE,GAAA,EAAD,iBAAW5F,EAAX,CAAkB0F,IAAKA,QACzDG,MAAOJ,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACG,GAAA,EAAD,iBAAW7F,EAAX,CAAkB0F,IAAKA,QACzDI,OAAQL,sBAAW,SAACzF,EAAO0F,GAAR,OAAiB,kBAACK,GAAA,EAAD,iBAAU/F,EAAV,CAAiB0F,IAAKA,QAC1DM,YAAaP,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAAC,KAAD,iBAAkB1F,EAAlB,CAAyB0F,IAAKA,QACtEK,KAAMN,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACK,GAAA,EAAD,iBAAU/F,EAAV,CAAiB0F,IAAKA,QACvDO,OAAQR,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACQ,GAAA,EAAD,iBAAalG,EAAb,CAAoB0F,IAAKA,QAC5DS,OAAQV,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACU,GAAA,EAAD,iBAAgBpG,EAAhB,CAAuB0F,IAAKA,QAC/DW,UAAWZ,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACW,GAAA,EAAD,iBAAerG,EAAf,CAAsB0F,IAAKA,QACjEY,SAAUb,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACY,GAAA,EAAD,iBAActG,EAAd,CAAqB0F,IAAKA,QAC/Da,SAAUd,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAAC,KAAD,iBAAkB1F,EAAlB,CAAyB0F,IAAKA,QACnEc,aAAcf,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAAC,KAAD,iBAAiB1F,EAAjB,CAAwB0F,IAAKA,QACtEe,YAAahB,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACG,GAAA,EAAD,iBAAW7F,EAAX,CAAkB0F,IAAKA,QAC/DgB,OAAQjB,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAAC,KAAD,iBAAY1F,EAAZ,CAAmB0F,IAAKA,QAC3DiB,UAAWlB,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACkB,GAAA,EAAD,iBAAmB5G,EAAnB,CAA0B0F,IAAKA,QACrEmB,gBAAiBpB,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACoB,GAAA,EAAD,iBAAY9G,EAAZ,CAAmB0F,IAAKA,QACpEqB,WAAYtB,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACqB,GAAA,EAAD,iBAAgB/G,EAAhB,CAAuB0F,IAAKA,SAEjEsB,GAAa,CACf,CAAEC,MAAO,SAAUC,MAAO,SAEtBC,UAAW,SAAAC,GAAC,MAAG,CACXhH,MAAW,YAAJgH,EAAe,UAAU,aAGxC,CAAEH,MAAO,OAAQC,MAAO,QAExB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,OAAQC,MAAO,SAQtBG,GAAU,GAqCVC,IAJE7F,OAAOC,QAAQ7E,GAAK,GAAG2E,QAAQG,KAAI,SAAChB,GAAD,sBAAYA,EAAE,GAAKA,EAAE,O,kDAK5D,WAAYX,GAAQ,IAAD,8BACf,cAAMA,IACDuH,aAAa,EAAKA,aAAavG,KAAlB,gBAClB,EAAKwG,gBAAgB,EAAKA,gBAAgBxG,KAArB,gBACrB,EAAKyG,YAAY,EAAKA,YAAYzG,KAAjB,gBACjBzC,GAAMjC,SAASrC,MAEf,EAAKwB,MAAQ,CACTxB,YAAaoN,GACbK,QAAQ,KACRC,YAAW,EACXC,OAAO,GACP/K,KAAK,GACLoE,MAAK,GAbM,E,iEAkBE,IAAD,OAE8B,OAA3C1C,GAAMhC,WAAWtC,YAAYA,aAE5B4N,YAAW,WACP,IAAMhO,EAAM0E,GAAMhC,WAAWV,KAAKhC,MACpB,IAAIC,KAAKD,EAAMiO,WAEnBC,SAAS,EAAE,EAAE,GACvB,IAAMhO,EAAIwE,GAAMhC,WAAWV,KAAK9B,IAK5BiO,GAJQ,IAAIlO,KAAKC,EAAI+N,WAIZvJ,GAAMhC,WAAWtC,YAAYA,YAOzC0H,KAAI,SAACN,GACF,IAAIzE,GAAI,EACJqE,EAAK,EAET,GAAGK,MAAMC,QAAQF,EAAKG,QAAU5E,GAAI,OAGnB6E,OAAOC,QAAQL,EAAKG,QAAQG,KAAI,SAAChB,EAAEiB,EAAMC,IACjC,IAAhBlB,EAAE,GAAGmB,QAA6B,IAAPb,IAC5BrE,GAAI,EACLqE,EAAK,GAGJW,IAAQC,EAAIE,OAAO,GAAc,IAATd,IACxBA,EAAK,EACLrE,GAAI,MASZ,MAAO,CAEHrD,QAAe,IAAPqD,EAAa,UAAU,OAC/B/B,KAAKwG,EAAKuG,OACV/L,KAAKA,GAAKwF,EAAKW,KACfxI,GAAG6H,EAAK4G,IACRzH,KAAMA,GAAKa,EAAKW,UAMxB,EAAKC,SAAS,CAAChI,YAAY+N,MAE5B,O,mCAIEE,EAAOC,GAAS,IAAD,OAGxB,GAFAxK,QAAQC,IAAI,eAEQ,YAAjBuK,EAAQ5O,OACDgF,GAAMhC,WAAWtC,YAAYA,YAClCmO,QAAO,SAAC/G,GAET,GAAIA,EAAK4G,MAAQE,EAAQ3O,GAEhB,CACI,IAAIa,EAAMoH,OAAOC,QAAQL,EAAKG,QAC9B,GAAgB,MAAbnH,EAAK,GAAG,GACP,EAAK4H,SAAS,CAAChB,MAAK,EAAKpE,KAAKxC,EAAK,KACnCsD,QAAQC,IAAI,mBAEZ,CACA,IAAIhB,EAAI6E,OAAOC,QAAQL,EAAKG,QAAQG,KAAI,SAAChB,GAAD,sBAAYA,EAAE,GAAKA,EAAE,OAC7D,EAAKsB,SAAS,CAACpF,KAAKD,IACpBe,QAAQC,IAAI,eAIhB,OAFA,EAAKqE,SAAS,CAAC0F,YAAW,EAAKC,OAAOvG,IACtC1D,QAAQC,IAAI,eACLyD,Q,wCASxBe,KAAKH,SAAS,CAAC0F,YAAW,M,oCAI1BvF,KAAKH,SAAS,CAAC0F,YAAW,M,gDAEJxF,EAAUkG,GAAY,IAAD,OAGG,OAA3C9J,GAAMhC,WAAWtC,YAAYA,aAE5B4N,YAAW,WACP,IAAMhO,EAAM0E,GAAMhC,WAAWV,KAAKhC,MACpB,IAAIC,KAAKD,EAAMiO,WAEnBC,SAAS,EAAE,EAAE,GACvB,IAAMhO,EAAIwE,GAAMhC,WAAWV,KAAK9B,IAK5BiO,GAJQ,IAAIlO,KAAKC,EAAI+N,WAIZvJ,GAAMhC,WAAWtC,YAAYA,YAOzC0H,KAAI,SAACN,GACF,IAAIzE,GAAI,EACJqE,EAAK,EAET,GAAGK,MAAMC,QAAQF,EAAKG,QAAU5E,GAAI,OAGnB6E,OAAOC,QAAQL,EAAKG,QAAQG,KAAI,SAAChB,EAAEiB,EAAMC,IACjC,IAAhBlB,EAAE,GAAGmB,QAA6B,IAAPb,IAC5BrE,GAAI,EACLqE,EAAK,GAGJW,IAAQC,EAAIE,OAAO,GAAc,IAATd,IACxBA,EAAK,EACLrE,GAAI,MAUZ,MAAO,CAEHrD,QAAe,IAAPqD,EAAa,UAAU,OAC/B/B,KAAKwG,EAAKuG,OACV/L,KAAKA,GAAKwF,EAAKW,KACfxI,GAAG6H,EAAK4G,IACRzH,KAAMA,GAAKa,EAAKW,UAMxB,EAAKC,SAAS,CAAChI,YAAY+N,MAE5B,O,+BAUF,IAAD,OAEJ,OACI,6BACI,kBAAC,KAAD,CACIf,MAAM,gBACNqB,QAAStB,GACTnK,KAAOuF,KAAK3G,MAAMxB,YAClBsO,MAAOhD,GACPiD,WAAa,SAACC,EAAKC,GAAN,OAAsB,EAAKzG,SAAS,CAAEyG,iBAGnDC,QAAS,CACLC,cAAc,EACdC,WAAW,GAMfC,QAAS,CACL,CAEIC,KAAMtD,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACK,GAAA,EAAD,iBAAU/F,EAAV,CAAiB0F,IAAKA,QACvDsD,QAAS,gBACTvG,QAAS,SAACyF,EAAOC,GAAa,EAAKZ,aAAaW,EAAOC,QAMnE,kBAACc,GAAA,EAAD,CACIC,KAAM9G,KAAK3G,MAAMkM,WACjBwB,QAAS/G,KAAKqF,YAEd2B,mBAAiB,2BACjBC,SAAS,KACTC,OAAO,QACPC,kBAAgB,6BAGhB,kBAACC,GAAA,EAAD,CAAahQ,GAAG,sBAEZ,kBAACyG,EAAA,EAAD,CAAYqC,MAAO,CAAClC,MAAM,UAAUqJ,SAAS,KACxC,UACArH,KAAK3G,MAAMmM,OAAOA,OAClB,iBAC0B8B,IAAtBtH,KAAK3G,MAAMmM,OAAyB/L,GAAKf,OAAOsH,KAAK3G,MAAMmM,OAAO5F,MAAQ,IAC9E,iBACuB0H,IAAtBtH,KAAK3G,MAAMmM,OAAyBpH,GAAK1F,OAAOsH,KAAK3G,MAAMmM,OAAO5F,MAAQ,MAOpF,kBAAC2H,GAAA,EAAD,CAAeC,UAAQ,GAGnB,yBAAKtH,MAAO,CAACuH,SAAU,MACnB,6BAII,kBAACC,GAAA,EAAD,CACAxH,MAAO,CAEHmH,SAAS,IAEbM,oBAAqB,kBAAC,KAAD,MACrBC,kBAAmB,kBAAC,KAAD,OAEjB5H,KAAK3G,MAAMoB,KAAK8E,KAAI,SAACN,EAAKO,GACpB,OAAqB,IAAlB,EAAKnG,MAAMwF,KAEN,kBAAChB,EAAA,EAAD,CAAagD,UAAW,EAAKjD,MAAMkD,QAAQ+G,UACnC,kBAACA,GAAA,EAAD,CACAC,OAAQtI,EACR6C,MAAOhD,OAAO0I,KAAK9I,GAAM,GACzBiB,MAAO,CACHlC,OAAuC,IAAhCqB,OAAO2I,OAAO/I,GAAM,GAAGS,OAAe,UAAU,UACvD2H,SAAS,IAEbxG,UAAW,EAAKjD,MAAMkD,QAAQmH,cAEzB1M,QAAQC,IAAI,eAEb,kBAACqC,EAAA,EAAD,CAAYgD,UAAW,EAAKjD,MAAMkD,QAAQ+D,MAAO7G,MAAM,gBAAgBC,cAAY,GAAnF,aAKA,kBAACJ,EAAA,EAAD,CAAYG,MAAM,gBAAgB6C,UAAW,EAAKjD,MAAMkD,QAAQoH,MAAQ7I,OAAO2I,OAAO/I,GAAM,GAAIkJ,SAGhG,kBAACtK,EAAA,EAAD,CAAYgD,UAAW,EAAKjD,MAAMkD,QAAQ+D,MAAO7G,MAAM,gBAAgBC,cAAY,GAAnF,aAIA,kBAACJ,EAAA,EAAD,CAAYG,MAAM,gBAAgB6C,UAAW,EAAKjD,MAAMkD,QAAQoH,MAAQxP,OAAO2G,OAAO2I,OAAO/I,GAAM,IAAImJ,SAEvG,kBAACvK,EAAA,EAAD,CAAYgD,UAAW,EAAKjD,MAAMkD,QAAQ+D,MAAO7G,MAAM,gBAAgBC,cAAY,GAAnF,UAIA,kBAACJ,EAAA,EAAD,CAAYG,MAAM,gBAAgB6C,UAAW,EAAKjD,MAAMkD,QAAQoH,MAAQ7I,OAAO2I,OAAO/I,GAAM,GAAIoJ,QAOrG,IAAR7I,EAEK,kBAAC3B,EAAA,EAAD,CAAaG,MAAM,gBAAgBC,cAAY,GAA/C,YACwB,EAAK5E,MAAMmM,OAAOpG,aAHlD,MAcZ,kBAACkJ,GAAA,EAAD,SAMZ,kBAACC,GAAA,EAAD,KACI,kBAAC3F,GAAA,EAAD,CAAQvC,QAASL,KAAKqF,YAAarH,MAAM,UAAUwK,WAAS,GAA5D,gB,GAnUHvH,IAAM6B,YA6VZ3B,oBAZS,SAAC9H,EAAO0J,GAC5B,MAAO,CACHlL,YAAawB,EAAMxB,YACnB4B,KAAMJ,EAAMI,QASL0H,CAAyBC,cAjYzB,SAAAC,GAAK,MAAK,CACrBN,KAAK,CACD0H,OAAQ,IACRC,SAAU,EACVzB,SAAU,IACVI,SAAU,IAIZa,KAAK,CACH/H,YAAakB,EAAMG,QAAQ,GAC3B6F,SAAU,IAIZxC,MAAM,CACJwC,SAAU,GACVlH,YAAYkB,EAAMG,QAAQ,IAE5BqG,SAAS,CACPpG,UAAUJ,EAAMG,QAAQ,KACxBkH,SAAU,EACVzB,SAAU,IACVI,SAAU,IAEZY,aAAa,CACXZ,SAAU,OAuWsBjG,CAAmB8D,K,mDC3YrDyD,G,kDACF,WAAY/K,GAAQ,IAAD,sBAIf,IAAMgL,GAHN,cAAMhL,IAGeA,MAAMuK,QAJZ,OAMhB,EAAK9O,MAAL,aACGyN,MAAM,EACN+B,OAAO,EACPC,OAAM,EACNX,QAASS,EACTG,UAAS,GALZ,QAMQ,GAEP,EAAKC,cAAgB,EAAKA,cAAcpK,KAAnB,gBACrB,EAAKqK,kBAAoB,EAAKA,kBAAkBrK,KAAvB,gBACzB,EAAKwG,gBAAkB,EAAKA,gBAAgBxG,KAArB,gBACvB,EAAMyG,YAAc,EAAMA,YAAYzG,KAAlB,gBAjBL,E,sEAmBOmB,GAErBA,EAAUmJ,SAAWlJ,KAAKpC,MAAMsL,W,mFASnClJ,KAAK3G,MAAM0P,UAAW/I,KAAK3G,MAAM0P,W,wCAKjC/I,KAAKH,UAAS,SAACsJ,GAAD,MAAgB,CAACrC,MAAMqC,EAAUrC,SAC/CvL,QAAQC,IAAIwE,KAAK3G,MAAM,gC,oCAEX,IAAD,OACX2G,KAAKH,UAAS,SAACsJ,GAAD,MAAgB,CAACrC,MAAMqC,EAAUrC,SAC/C9G,KAAKH,SAAS,CAACiJ,OAAM,IACrB,IAGI5L,EAHOf,GAAMhC,WAAWrC,WAAWA,WAGrBkO,QAAO,SAAC/G,GACxB,GAAGA,EAAK7H,KAAM,EAAKwG,MAAMxG,GAAI,OAAQ6H,KAEvC/B,EAAQA,EAAQqC,KAAI,SAACN,EAAKO,GACzB,sBAAYP,EAAZ,CAAiB7H,GAAGoI,EAAM,OAG3BrD,GAAMjC,SAAS,CACXX,KTrIiB,cSsIjBC,QAAS0D,M,+BAGV,IAAD,OAE0B8C,KAAKpC,MAAMkD,QAAQsI,OAGjD,OAFA7N,QAAQC,IAAIwE,KAAKpC,MAAM,cACC,KAArBoC,KAAK3G,MAAM8O,UAAcnI,KAAK3G,MAAMyP,OAAO,IACtB,IAArB9I,KAAK3G,MAAMyP,QAAyC,IAAtB9I,KAAKpC,MAAMsL,SAGxC,kBAACG,GAAA,EAAD,CAAMxI,UAAWb,KAAKpC,MAAMkD,QAAQC,MAClC,kBAACuI,GAAA,EAAD,KAGI,kBAACzL,EAAA,EAAD,CAAYgD,UAAWb,KAAKpC,MAAMkD,QAAQ+D,MAAO7G,MAAM,gBAAgBC,cAAY,GAAnF,aACW+B,KAAKpC,MAAMuK,SAGtB,kBAACtK,EAAA,EAAD,CAAYgD,UAAWb,KAAKpC,MAAMkD,QAAQ+D,MAAO7G,MAAM,gBAAgBC,cAAY,GAAnF,cACY+B,KAAKpC,MAAM2L,WAIvB,kBAAC1L,EAAA,EAAD,CAAYE,QAAQ,KAAKD,UAAU,KAAKE,MAAM,iBAC5C,6BACE,yBAAK6C,UAAWb,KAAKpC,MAAMkD,QAAQqB,WACrB,kBAACuF,GAAA,EAAD,CACA7G,UAAWb,KAAKpC,MAAMkD,QAAQC,KAC9B4G,oBAAqB,kBAAC,KAAD,MACrBC,kBAAmB,kBAAC,KAAD,OAE3B,kBAACC,GAAA,EAAD,CAAUC,OAAO,IAAIzF,MAAM,eAEvBrC,KAAKpC,MAAM4H,OAAOjG,KAAI,SAACN,EAAKO,GAE1B,OADAjE,QAAQC,IAAI,mBAAoByD,GAE9B,kBAAC4I,GAAA,EAAD,CAAUC,OAAQtI,EAAM,EAAG6C,MAAOpD,EAAK,GAAI4B,UAAW,EAAKjD,MAAMkD,QAAQ+G,UACrE,kBAAChK,EAAA,EAAD,CAAaG,MAAM,iBACrB,kBAAC6J,GAAA,EAAD,CAAUC,OAAQtI,EAAM,EAAG6C,MAAOpD,EAAK,gBAe7D,kBAACqJ,GAAA,EAAD,CAAakB,gBAAc,GAE/B,kBAACC,EAAA,EAAD,CACAC,aAAW,QACX3L,QAAQ,WAERsC,QAASL,KAAKoF,gBAEdpH,MAAM,aAEA,kBAAC,KAAD,OAEN,kBAAC6I,GAAA,EAAD,CACAC,KAAM9G,KAAK3G,MAAMyN,KACjBC,QAAS/G,KAAKqF,YACd8B,kBAAgB,qBAChBH,mBAAiB,4BAGjB,kBAACO,GAAA,EAAD,KACE,kBAACoC,GAAA,EAAD,CAAmBvS,GAAG,4BAAtB,8DAIF,kBAACmR,GAAA,EAAD,KACA,kBAAC3F,GAAA,EAAD,CAAQvC,QAASL,KAAKoF,gBAAiBpH,MAAM,WAA7C,UAGE,kBAAC4E,GAAA,EAAD,CAAQvC,QAASL,KAAKqF,YAAarH,MAAM,YAAYwK,WAAS,GAA9D,eAyB2B,IAAtBxI,KAAKpC,MAAMsL,SAKhB,kBAACG,GAAA,EAAD,CAAMxI,UAAWb,KAAKpC,MAAMkD,QAAQC,MAElC,kBAAClD,EAAA,EAAD,CAAYgD,UAAWb,KAAKpC,MAAMkD,QAAQ+D,MAAO7G,MAAM,gBAAgBC,cAAY,GAAnF,aACa+B,KAAKpC,MAAMuK,SAGtB,kBAACtK,EAAA,EAAD,CAAYgD,UAAWb,KAAKpC,MAAMkD,QAAQ+D,MAAO7G,MAAM,gBAAgBC,cAAY,GAAnF,cACY+B,KAAKpC,MAAM2L,WAIzB,kBAACD,GAAA,EAAD,CAAazI,UAAWb,KAAKpC,MAAMkD,QAAQwI,aACzC,yBAAKzI,UAAWb,KAAKpC,MAAMkD,QAAQE,kBAAnC,IAAsD,kBAACA,GAAA,EAAD,SAMlD,kC,GAxLOC,IAAM6B,WA6LhB1B,iBAzPA,SAAAC,GAAK,MAAK,CACvBN,KAAM,CACJkG,SAAU,IACV2C,MAAM,IACNtJ,OAAQe,EAAMG,QAAQ,GACtBD,WAAYF,EAAMG,QAAQ,IAE5BqI,MAAO,CACLC,MAAO,IACP7C,SAAU,IACVI,SAAS,GACT0C,gBAAiB1I,EAAM2I,QAAQC,WAAWC,OAE5CC,OAAQ,CACNhK,YAAakB,EAAMG,QAAQ,IAE7B4H,OAAQ,CACN9H,QAAS,eACThB,OAAQ,QACR8J,UAAW,cAEbvF,MAAO,CACLwC,SAAU,GACVgD,SAAS,OACTlK,YAAakB,EAAMG,QAAQ,IAG7B8I,IAAK,CACHC,aAAc,IAEhBC,OAAQ,CACNlK,OAAQe,EAAMG,QAAQ,GACtB6F,SAAU,IAEZlF,UAAW,CACT2H,MAAO,IACPxI,QAAS,OACTmJ,SAAU,OACVJ,SAAS,QAEXnN,QAAQ,CACNuL,OAAQ,IACRC,SAAU,EACVzB,SAAU,KAEZqC,YAAY,CACVrC,SAAU,IACV6C,MAAO,KAGT9I,iBAAiB,CACdb,YAAakB,EAAMG,QAAQ,KAG9BqG,SAAS,CACP7J,MAAM,cAkMKoD,CAAmBuH,ICnRrB+B,GAAb,uKAQI,OACI,kBAAC9H,GAAA,EAAD,CAAS1C,MAAO,CAAClC,MAAM,OAAO2M,OAAO,QAAU5M,QAAQ,WAAYsC,QAAS,kBAAKlE,GAAMjC,SAASyB,QAAhG,eATR,GAA4BmH,a,IAkBb3B,YACb,KACA,CAAExF,WAFWwF,CAGbuJ,I,mIC0BIvH,GAAa,CACfC,IAAKC,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACC,GAAA,EAAD,iBAAY3F,EAAZ,CAAmB0F,IAAKA,QACxDE,MAAOH,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACE,GAAA,EAAD,iBAAW5F,EAAX,CAAkB0F,IAAKA,QACzDG,MAAOJ,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACG,GAAA,EAAD,iBAAW7F,EAAX,CAAkB0F,IAAKA,QACzDI,OAAQL,sBAAW,SAACzF,EAAO0F,GAAR,OAAiB,kBAACK,GAAA,EAAD,iBAAU/F,EAAV,CAAiB0F,IAAKA,QAC1DM,YAAaP,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAAC,KAAD,iBAAkB1F,EAAlB,CAAyB0F,IAAKA,QACtEK,KAAMN,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACK,GAAA,EAAD,iBAAU/F,EAAV,CAAiB0F,IAAKA,QACvDO,OAAQR,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACQ,GAAA,EAAD,iBAAalG,EAAb,CAAoB0F,IAAKA,QAC5DS,OAAQV,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACU,GAAA,EAAD,iBAAgBpG,EAAhB,CAAuB0F,IAAKA,QAC/DW,UAAWZ,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACW,GAAA,EAAD,iBAAerG,EAAf,CAAsB0F,IAAKA,QACjEY,SAAUb,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACY,GAAA,EAAD,iBAActG,EAAd,CAAqB0F,IAAKA,QAC/Da,SAAUd,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAAC,KAAD,iBAAkB1F,EAAlB,CAAyB0F,IAAKA,QACnEc,aAAcf,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAAC,KAAD,iBAAiB1F,EAAjB,CAAwB0F,IAAKA,QACtEe,YAAahB,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACG,GAAA,EAAD,iBAAW7F,EAAX,CAAkB0F,IAAKA,QAC/DgB,OAAQjB,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAAC,KAAD,iBAAY1F,EAAZ,CAAmB0F,IAAKA,QAC3DiB,UAAWlB,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACkB,GAAA,EAAD,iBAAmB5G,EAAnB,CAA0B0F,IAAKA,QACrEmB,gBAAiBpB,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACoB,GAAA,EAAD,iBAAY9G,EAAZ,CAAmB0F,IAAKA,QACpEqB,WAAYtB,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAACqB,GAAA,EAAD,iBAAgB/G,EAAhB,CAAuB0F,IAAKA,SA8FjEsH,G,kDACF,WAAYhN,GAAQ,IAAD,8BACf,cAAMA,IAgDNtD,YAAc,WAGV,IAAMjD,EAAQ8E,GAAMhC,WAAWT,KAAKrC,MAG9BuE,EAAS,CACXN,QAAS,CACL,eAAgB,qBAS3B,OAJMjE,IACAuE,EAAON,QAAP,gCAA6CjE,EAA7C,MAGCuE,GAlEO,EAoEnByJ,YAAc,SAACS,EAAO+E,GAEH,cAAXA,GAIJ,EAAKhL,SAAS,CAAC3I,KAAI,EAAM4T,cAAa,EAAMC,yBAAwB,KA1ErD,EA6EnBC,YAAc,WAIV,GAFA,EAAK3R,MAAM4R,kBAEc,KAArB,EAAK5R,MAAM6R,OAAiD,IAA7B,EAAK7R,MAAM4R,gBAAqB,CAC/D,EAAK5R,MAAMvB,WAAWoR,UAAS,EAC/BzD,YAAW,WAAK,EAAK5F,SAAS,CAAC3I,KAAI,EAAMiU,WAAU,MAAW,MAC9D,EAAK9R,MAAMvB,WAAWqQ,QAAQ,EAAK9O,MAAM6R,MAEzC,IAAIhO,EAASf,GAAMhC,WAAWrC,WAAWA,WAEnCsT,EAAQ,EAAK/R,MAAM6R,MAAMG,MAAM,KAC/BC,EAAW,EAAKjS,MAAMkS,MAAMF,MAAM,KAEpC7Q,EAAI,CACJgR,KAAKJ,EAAM,GACXK,IAAI,EAAKpS,MAAMvB,WAAWoF,QAC1BwO,SAA4B,KAAnB,EAAKrS,MAAMkS,MAAW,GAAGD,GAGvC,EAAKjS,MAAMvB,WAAWyR,UAAU+B,EAC/B,EAAKzL,SAAS,CAAC0L,MAAM,KAErB,IAAMrQ,EAAOC,KAAKC,UAAUZ,GACxBmR,EAAU,EAAKrR,cACnB,EAAKjB,MAAMuS,QAAQC,QAAQ,EAAKxS,MAAMvB,YACtCoF,EAAQ2O,QAAQ,EAAKxS,MAAMvB,YAC3BqE,GAAMjC,SAAS,CACXX,KXlQW,cWmQXC,QAAS0D,IAGb9C,IAAMiB,KAAK,iBAAiBH,EAAMyQ,GACjCpR,MAAK,SAACC,GACH,IAAMvC,EAAKuC,EAAIC,KAAKD,IACdkF,EAASL,OAAO0I,KAAK9P,GAAMsH,KAAI,SAACuM,GAAD,MAAS,CAACpT,OAAOoT,GAAM7T,EAAK6T,OAC9DC,EAAS,GACZrM,EAAOV,SAAQ,SAAAgN,GACX9O,EAAQ,GAAGA,QAAQqC,KAAI,SAACN,GACjB+M,EAAU,KAAK/M,IACd8M,EAASvT,KAAK,CAACwT,EAAU,GAAGA,EAAU,KACtC/M,EAAO8M,SAMnB,EAAK1S,MAAMvB,WAAWoR,UAAS,EAC/B,EAAK7P,MAAMuS,QAAQC,QAAQ,EAAKxS,MAAMvB,YACtCoF,EAAQ,GAAGA,QAAQ6O,EACnB7O,EAAQ+O,QACR/O,EAAQ2O,QAAQ,EAAKxS,MAAMvB,YAC3ByD,QAAQC,IAAI0B,EAAQ,aACpBf,GAAMjC,SAAS,CACXX,KX5RO,cW6RPC,QAAS0D,IAEb,EAAK2C,SAAS,CAAC3I,KAAI,OAEtBwD,OAAM,SAAAC,GAEH,EAAKkF,SAAS,CAACqM,QAAQvR,EAAIC,SAASH,KAAKiB,QAAQyQ,cAAa,IAE9D1G,YAAW,WAAK,EAAK5F,SAAS,CAACsM,cAAa,MAAW,MACvDhQ,GAAMjC,SAASF,EAAaW,EAAIC,SAASH,KAAKiB,QAASf,EAAIC,SAASzD,OAAQ,gBAW5D,KAArB,EAAKkC,MAAM6R,QACV,EAAKrL,SAAS,CAACiL,cAAa,IAC5BrF,YAAW,WAAK,EAAK5F,SAAS,CAACiL,cAAa,MAAW,OAEzB,IAA9B,EAAKzR,MAAM4R,iBAAuD,IAA7B,EAAK5R,MAAM4R,iBAA6C,KAArB,EAAK5R,MAAM6R,QACnF,EAAKrL,SAAS,CAACkL,yBAAwB,IACvCtF,YAAW,WAAK,EAAK5F,SAAS,CAACkL,yBAAwB,MAAW,OAGtE,EAAKlL,SAAS,CAACqL,MAAM,GAAGK,MAAM,MA/J9B,EAAKa,UAAY,EAAKA,UAAUxN,KAAf,gBACjB,EAAKyG,YAAc,EAAKA,YAAYzG,KAAjB,gBACnB,EAAKoM,YAAc,EAAKA,YAAYpM,KAAjB,gBACnB,EAAKyN,YAAc,EAAKA,YAAYzN,KAAjB,gBACnB,EAAK0N,qBAAuB,EAAKA,qBAAqB1N,KAA1B,gBAC5B,EAAKtE,YAAc,EAAKA,YAAYsE,KAAjB,gBACnBzC,GAAMjC,UP1IqB,SAACA,EAAUC,GAE1CC,IAAMC,IAAI,yBAAyBC,GAAYH,IAC9CI,MAAK,SAACC,GAEC,IADA,IAAI0C,EAAQ,GACJ3E,EAAE,EAAEA,EAAEiC,EAAIC,KAAKiF,OAAOC,OAAOpH,IAAI,CACtC,IAAIiN,EAAO,CAAC/M,KAAK+B,EAAIC,KAAKiF,OAAOnH,IACjC2E,EAAQ1E,KAAKgN,GAGhBrJ,GAAMjC,SAAS,CACXX,KJhCS,YIiCTC,QAAS0D,OAGpBxC,OAAM,SAAAC,GACHY,QAAQC,IAAIb,EAAI,mCO2HhB,EAAKtB,MAAM,CACXkT,OAAM,EACNrV,KAAI,EACJsV,KAAK,YACL1F,MAAM,EACN+B,OAAO,EACPsC,WAAU,EACVS,QAAQ,GACRV,MAAM,GACNK,MAAM,GACNzT,WAAW,GACXmT,gBAAgB,EAChBH,cAAa,EACbC,yBAAwB,EACxBmB,QAAQ,GACRC,cAAa,EACb1R,KAAK,IAIN,EAAK6R,uBA7BW,E,mEA+BI,IAAD,OAEdX,EAAU3L,KAAK1F,cAEnBF,IAAMC,IAAI,yBAAyBsR,GAClCpR,MAAK,SAACC,GAEC,IADA,IAAIiF,EAAI,GACAlH,EAAE,EAAEA,EAAEiC,EAAIC,KAAKiF,OAAOC,OAAOpH,IAAI,CACtC,IAAIiN,EAAO,CAAC/M,KAAK+B,EAAIC,KAAKiF,OAAOnH,IACjCkH,EAAIjH,KAAKgN,GAEZ,EAAK3F,SAAS,CAACpF,KAAKgF,OAE3B/E,OAAM,SAAAC,GACHY,QAAQC,IAAIb,EAAI,kC,gCAyHboL,GAAS,IAAD,OAEf/F,KAAK3G,MAAM4R,gBAAgB,EAC3BjL,KAAK3G,MAAM4R,kBACX,IAAMxQ,EAAKsL,EAAQxG,KAAI,SAACkN,GAAD,OAAOA,EAAIhU,QAC9BiU,EAAUvQ,GAAMhC,WAAWrC,WAAWA,WAAW6H,OAAQ,EAC7DK,KAAK3G,MAAMvB,WAAW,CAACoF,QAAQzC,EAAKrD,GAAGsV,EAASvE,QAAQ,GAAGe,UAAS,GAEpElJ,KAAKH,SAAS,CAAC0M,OAAM,EAAKpB,WAAU,IACpC1F,YAAW,WAAK,EAAK5F,SAAS,CAAC0M,OAAM,MAAY,Q,kCAI7CI,GAAS,IAAD,OAGZ,GADA3M,KAAK3G,MAAM4R,kBACuB,IAA7BjL,KAAK3G,MAAM4R,gBAAqB,CAGjCjL,KAAK3G,MAAMvB,WAAWoR,UAAS,EAG/BlJ,KAAK3G,MAAMvB,WAAWqQ,QAAQwE,EAE9B,IAAIzP,EAASf,GAAMhC,WAAWrC,WAAWA,WAUnCwT,GADQtL,KAAK3G,MAAM6R,MAAMG,MAAM,KACpBrL,KAAK3G,MAAMkS,MAAMF,MAAM,MAEpC7Q,EAAI,CACJgR,KAAKmB,EACLlB,IAAIzL,KAAK3G,MAAMvB,WAAWoF,QAC1BwO,SAA4B,KAAnB1L,KAAK3G,MAAMkS,MAAW,GAAGD,GAEtCtL,KAAK3G,MAAMvB,WAAWyR,UAAU+B,EAChCtL,KAAKH,SAAS,CAAC0L,MAAM,KAErB,IAAMrQ,EAAOC,KAAKC,UAAUZ,GACxBmR,EAAU3L,KAAK1F,cACnB0F,KAAK3G,MAAMuS,QAAQC,QAAQ7L,KAAK3G,MAAMvB,YACtCoF,EAAQ2O,QAAQ7L,KAAK3G,MAAMvB,YAE3BqE,GAAMjC,SAAS,CACXX,KXjXW,cWkXXC,QAAS0D,IAEb3B,QAAQC,IAAIW,GAAMhC,WAAW,0BAC7BC,IAAMiB,KAAK,iBAAiBH,EAAMyQ,GACjCpR,MAAK,SAACC,GACHe,QAAQC,IAAI,aAAahB,GACzB,IAAMvC,EAAKuC,EAAIC,KAAKD,IACpBe,QAAQC,IAAI,WAAWvD,GACvB,IAAMyH,EAASL,OAAO0I,KAAK9P,GAAMsH,KAAI,SAACuM,GAAD,MAAS,CAACpT,OAAOoT,GAAM7T,EAAK6T,OACjEvQ,QAAQC,IAAI,SAASkE,GAEtB,IAAIqM,EAAS,GACZrM,EAAOV,SAAQ,SAAAC,GAAI,OAAI8M,EAASvT,KAAK,CAACyG,EAAK,GAAGA,EAAK,QAYnD,EAAK5F,MAAMvB,WAAWoR,UAAS,EAC/B,EAAK7P,MAAMuS,QAAQC,QAAQ,EAAKxS,MAAMvB,YACtCoF,EAAQ,GAAGA,QAAQ6O,EACnB7O,EAAQ+O,QACR/O,EAAQ2O,QAAQ,EAAKxS,MAAMvB,YAC3ByD,QAAQC,IAAI0B,EAAQ,aACpBf,GAAMjC,SAAS,CACXX,KXjZO,cWkZPC,QAAS0D,IAEb,EAAK2C,SAAS,CAAC3I,KAAI,OAItBwD,OAAM,SAAAC,GAIH8K,YAAW,WAAK,EAAK5F,SAAS,CAACsM,cAAa,MAAW,QAS3D1G,YAAW,WAAK,EAAK5F,SAAS,CAAC3I,KAAI,EAAMiU,WAAU,MAAW,MAIhC,IAA9BnL,KAAK3G,MAAM4R,iBAAuD,IAA7BjL,KAAK3G,MAAM4R,kBAChDjL,KAAKH,SAAS,CAACkL,yBAAwB,IACvCtF,YAAW,WAAK,EAAK5F,SAAS,CAACkL,yBAAwB,MAAW,OAEtE/K,KAAKH,SAAS,CAAC0L,MAAM,O,+BAMlB,IAAD,SAEN,OAEJ,yBAAKrL,MAAO,CAACoB,QAAS,OAAOsL,cAAe,QAE5C,yBAAK1M,MAAO,CAACoB,QAAS,OAAOsL,cAAe,WAExC,kBAACC,EAAA,EAAD,CAAO/O,UAAU,OAAO+C,UAAWb,KAAKpC,MAAMkD,QAAQC,MAClD,kBAAC0I,EAAA,EAAD,CAAY5I,UAAWb,KAAKpC,MAAMkD,QAAQgM,WAAYpD,aAAW,QAC7D,kBAAC,IAAD,OAGJ,kBAACqD,GAAA,EAAD,CACAC,cAAY,EACZxE,UAAU,OACVjG,MAAOvC,KAAK3G,MAAM6R,MAClB1I,SAAU,SAACsD,GAAS,EAAKjG,SAAS,CAACqL,MAAMpF,EAAMmH,OAAO1K,SACtD1B,UAAWb,KAAKpC,MAAMkD,QAAQoK,MAC9BgC,YAAY,eACZC,WAAY,CAAE,aAAc,kBAGL,KAAnBnN,KAAK3G,MAAM6R,MACP,6BAEJ,kBAACzB,EAAA,EAAD,CAAYzL,MAAM,UAAU6C,UAAWb,KAAKpC,MAAMkD,QAAQgM,WAAYpD,aAAW,aAAarJ,QAAS,WAAK,EAAKR,SAAS,CAACqL,MAAM,OAC/H,kBAAC,KAAD,QAIA,8BAEN,kBAACkC,EAAA,EAAD,CAASvM,UAAWb,KAAKpC,MAAMkD,QAAQuM,QAASC,YAAY,aAC5D,kBAAC7D,EAAA,EAAD,CAAYpC,SAAS,QAAQrJ,MAAM,UAAUuP,KAAK,SAAS1M,UAAWb,KAAKpC,MAAMkD,QAAQgM,WAAYpD,aAAW,aAAarJ,QAASL,KAAKgL,aACvI,kBAAC,KAAD,QAUZ,yBAAKnK,UAAWb,KAAKpC,MAAMkD,QAAQ0M,UAAnC,aAEQ,kBAACJ,EAAA,EAAD,CAASK,OAAK,EAAEvN,MAAO,CAAC4J,MAAM,QAIlC,kBAAC+C,EAAA,EAAD,CAAO/O,UAAU,OAAO+C,UAAWb,KAAKpC,MAAMkD,QAAQ4M,YACtD,kBAACX,GAAA,EAAD,CACAC,cAAY,EACZxE,UAAU,OACVjG,MAAOvC,KAAK3G,MAAMkS,MAClB/I,SAAU,SAACsD,GAAS,EAAKjG,SAAS,CAAC0L,MAAMzF,EAAMmH,OAAO1K,SACtD1B,UAAWb,KAAKpC,MAAMkD,QAAQ6M,WAC9BT,YAAY,aACZC,WAAY,CAAE,aAAc,gBAaL,KAAnBnN,KAAK3G,MAAMkS,MAGX,kBAAC9B,EAAA,EAAD,CAAYpC,SAAS,QAAQrJ,MAAM,UAAU6C,UAAWb,KAAKpC,MAAMkD,QAAQgM,WAAYpD,aAAW,aAAarJ,QAAS,WAAK,EAAKR,SAAS,CAAC0L,MAAM,OAClJ,kBAAC,KAAD,OAIE,+BAqBN,yBAAK1K,UAAWb,KAAKpC,MAAMkD,QAAQ0M,UAAnC,WAEI,kBAACJ,EAAA,EAAD,CAASK,OAAK,EAAEvN,MAAO,CAAC4J,MAAM,QAGlC,yBAAKjJ,UAAWb,KAAKpC,MAAMkD,QAAQ8M,aAC/B,kBAACA,GAAA,GAAD,GACIL,KAAK,QACLvP,MAAM,UACNsP,YAAY,cAHhB,sBAIU,WAJV,2BAKe,2CALf,wBAMY,QANZ,sBAOW,CAAE7L,UAAU,GAAGqI,MAAM,IAAIrB,OAAO,KAP3C,GASG,kBAAC7F,GAAA,EAAD,CAAQvC,QAAS,kBAAI,EAAKgM,YAAY,iBAAtC,eACC,kBAACzJ,GAAA,EAAD,CAAQvC,QAAS,kBAAI,EAAKgM,YAAY,eAAtC,aACA,kBAACzJ,GAAA,EAAD,CAAQvC,QAAS,kBAAI,EAAKgM,YAAY,kBAAtC,kBAQR,yBAAKxL,UAAWb,KAAKpC,MAAMkD,QAAQsM,SAAnC,UAEI,kBAACA,EAAA,EAAD,CAASK,OAAK,EAAEvN,MAAO,CAAC4J,MAAM,QAK9B,yBAAK5J,MAAO,CAAEoB,QAAS,OAAOsL,cAAe,MAAMiB,SAAU,WAAW5G,SAAS,MAChF9K,GAAMhC,WAAWrC,WAAWA,WAAWyH,KAAI,SAAAN,GACxC,OAEM,kBAAC,GAAD,CAAa7H,GAAI6H,EAAK7H,GAAIoO,OAAQvG,EAAK/B,QAASiL,QAASlJ,EAAKkJ,QAASe,SAAUjK,EAAKiK,SAAUK,UAAWtK,EAAKsK,gBAnIlI,SAyII,yBAAK1I,UAAWb,KAAKpC,MAAMkD,QAAQsM,SAC/B,kBAACA,EAAA,EAAD,CAASK,OAAK,EAAEvN,MAAO,CAAC4J,MAAM,SAKtC,6BAGI,yBAAKjJ,UAAWb,KAAKpC,MAAMkD,QAAQgN,eAE3B9N,KAAK3G,MAAMkT,MACP,yBAAK1L,UAAWb,KAAKpC,MAAMkD,QAAQ5J,KAE3B,kBAAC6W,GAAA,EAAD,CAAOC,SAAS,WAAhB,yCACyC,4DAInD,8BAEN,kBAAC,KAAD,CAEInJ,MAAM,UACNsB,MAAOhD,GACP+C,QAAS,CAAC,CAAErB,MAAO,OAAQC,MAAO,SAClCrK,KAAMuF,KAAK3G,MAAMoB,KACjB8L,QAAS,CAAC0H,WAAW,GACrBvH,QACC,CAAC,CACEC,KAAMtD,sBAAW,SAACzF,EAAO0F,GAAR,OAAgB,kBAAC,KAAD,eAAUtF,MAAM,UAAaJ,EAA7B,CAAoC0F,IAAKA,QAC1EsD,QAAS,eACTvG,QAAS,SAACyF,EAAOC,GAAa,EAAKqG,UAAUrG,SAIxB,IAAzB/F,KAAK3G,MAAM8R,UACN,yBAAKtK,UAAWb,KAAKpC,MAAMkD,QAAQ5J,KAChC,kBAACgX,GAAA,EAAD,CAAUpH,KAAM9G,KAAK3G,MAAMnC,IAAKiX,iBAAkB,IAAMpH,QAAS/G,KAAKqF,aAClE,kBAAC0I,GAAA,EAAD,CAAOhH,QAAS/G,KAAKqF,YAAa2I,SAAS,WAA3C,wDAKN,+BAGsB,IAA5BhO,KAAK3G,MAAMyR,aACP,yBAAKjK,UAAWb,KAAKpC,MAAMkD,QAAQ5J,KACnC,kBAACgX,GAAA,EAAD,CAAUpH,KAAM9G,KAAK3G,MAAMyR,aAAcqD,iBAAkB,IAAMpH,QAAS/G,KAAKqF,aAC3E,kBAAC0I,GAAA,EAAD,CAAOhH,QAAS/G,KAAKqF,YAAa2I,SAAS,WAA3C,gCACmC,6DAO1C,+BAGsC,IAAvChO,KAAK3G,MAAM0R,wBACP,yBAAKlK,UAAWb,KAAKpC,MAAMkD,QAAQ5J,KACnC,kBAACgX,GAAA,EAAD,CAAUpH,KAAM9G,KAAK3G,MAAM0R,wBAAyBoD,iBAAkB,IAAMpH,QAAS/G,KAAKqF,aACtF,kBAAC0I,GAAA,EAAD,CAAOhH,QAAS/G,KAAKqF,YAAa2I,SAAS,WAA3C,4BACmC,4DAO1C,+BAG2B,IAA5BhO,KAAK3G,MAAM8S,aACP,yBAAKtL,UAAWb,KAAKpC,MAAMkD,QAAQ5J,KACnC,kBAACgX,GAAA,EAAD,CAAUpH,KAAM9G,KAAK3G,MAAM8S,aAAcgC,iBAAkB,IAAMpH,QAAS/G,KAAKqF,aAC3E,kBAAC0I,GAAA,EAAD,CAAOhH,QAAS/G,KAAKqF,YAAa2I,SAAS,SAA3C,4BACmC,+DAO1C,qC,GAhgBW/M,IAAM6B,WA+gBf1B,iBAzmBA,SAAAC,GAAK,MAAK,CACrByM,cAAc,CACVvM,WAAYF,EAAMG,QAAQ,IAC1BC,UAAWJ,EAAMG,QAAQ,GACzBsI,MAAM,KAEV/I,KAAM,CACJqN,QAAS,UACT9M,QAAS,OACT+M,WAAY,SACZvE,MAAO,IACPrB,OAAO,GACPhH,UAAWJ,EAAMG,QAAQ,IAE3BkM,WAAW,CACPU,QAAS,UACT9M,QAAS,OACT+M,WAAY,SACZvE,MAAO,IACPrB,OAAO,GACPhH,UAAWJ,EAAMG,QAAQ,IAG7B0J,MAAO,CACL3J,WAAYF,EAAMG,QAAQ,GAC1BC,UAAW,EAEXiB,KAAM,GAERiL,WAAW,CACPpM,WAAYF,EAAMG,QAAQ,GAG1BkB,KAAM,GAEV4L,YAAY,CACR7M,UAAWJ,EAAMG,QAAQ,GACzBsI,MAAM,KAGVgD,WAAY,CACVsB,QAAS,GACT3F,OAAO,IAET2E,QAAS,CACP3L,UAAWJ,EAAMG,QAAQ,GACzBiH,OAAQ,GACRnI,OAAQ,GAEViO,gBAAiB,CAEbH,QAAS,GACT3F,OAAQ,GACRqB,MAAM,GAER0E,aAAc,CACZ/M,UAAWJ,EAAMG,QAAQ,GACzBiH,OAAQ,OACRnI,OAAQ,GAEZpJ,IAAI,CACA4S,MAAO,OACP,YAAa,CACXrI,UAAWJ,EAAMG,QAAQ,KAG/BgM,SAAS,CACL/L,UAAWJ,EAAMG,QAAQ,IAG7BoM,YAAa,CACTtM,QAAS,OACTsL,cAAe,SAEf,QAAS,CACPtM,OAAQe,EAAMG,QAAQ,MAG1BgJ,OAAQ,CAEP/B,OAAO,OAyhBCrH,CAAmBwJ,IChpB3B6D,G,kDACL,WAAY7Q,GAAQ,IAAD,8BACjB,cAAMA,IACD8Q,iBAAmB,EAAKA,iBAAiB9P,KAAtB,gBACxB,EAAKiD,cAAgB,EAAKA,cAAcjD,KAAnB,gBACrB,EAAKvF,MAAM,CAACzB,UAAU,EAAKgG,MAAMhG,UAAUA,WAJ1B,E,6DAaD6B,GAChBuG,KAAKH,SAAS,CAACjI,UAAU6B,IAI1B0C,GAAMjC,UR4GoC,SAACA,EAAUC,IAExC,IAAIzC,MAAO8E,eAAvB,IACOC,EAAY/D,OAAOgE,SAASP,GAAMhC,WAAWvC,UAAUA,UAAUS,WAAW,IAChFoE,EAAWC,SAASD,GAAY,GAAG,IAAIA,EAAWA,EAClD,IAAIE,EAAUjE,OAAOyD,GAAMhC,WAAWvC,UAAUA,UAAUQ,eACtDwE,EAAST,GAAMhC,WAAWvC,UAAUA,UAAUU,UAClDsE,EAASF,SAASE,GAAU,GAAG,IAAIA,EAASA,EAC5C,IAAIC,EAAMF,EAAUjE,OAAO+D,GAAY/D,OAAOkE,GAAU,eAEpDE,EAAUpE,OAAOgE,SAASP,GAAMhC,WAAWvC,UAAUA,UAAUS,YAAY,GAC/EyE,EAASJ,SAASI,GAAU,GAAG,IAAIA,EAASA,EAC5C,IAAIC,EAAQrE,OAAOyD,GAAMhC,WAAWvC,UAAUA,UAAUQ,eACpD4E,EAAOb,GAAMhC,WAAWvC,UAAUA,UAAUU,UAChD0E,EAAON,SAASM,GAAQ,GAAG,IAAIA,EAAOA,EAEtC,IAAIC,EAAIF,EAAQrE,OAAOoE,GAAUpE,OAAOsE,GAAQ,eAK5CE,EAAQ,GAMXO,EAAI,0BAA0BZ,EAAM,IAAII,EAE5C7C,IAAMC,IAAIoD,EAAKnD,GAAYH,IAC3BI,MAAK,SAACC,GAEH0C,EAAQA,EAAQQ,OAAOlD,EAAIC,MAI3B0B,GAAMjC,SAAS,CACXX,KJvLuB,qBIwLvBC,QAAS0D,OAIhBxC,OAAM,SAAAC,GACHY,QAAQC,IAAIb,EAAI,uBQtJpB8K,YAAW,WACVtJ,GAAMjC,SAAS,CACbX,KZ1C2B,oBY2C3BC,QAAS,CAAC5B,UAAU6B,OAEpB,K,wEAmBO,IAAD,OACR,OACE,kBAAC,IAAMwG,SAAP,KACE,kBAACpC,EAAA,EAAD,CAAYC,UAAU,IAAIC,QAAQ,MAEhC,kBAAC,KAAD,CAAyBiE,MAAOC,YAC9B,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBACxB,kBAAC,KAAD,CACA9B,OAAO,SACPlJ,GAAG,qBACHiL,MAAM,aACNC,OAAO,aACPC,MAAOvC,KAAK3G,MAAMzB,UAClB4K,SAAU,SAAC/I,GAAQ,EAAKiV,iBAAiBjV,IACzCgJ,oBAAqB,CACnB,aAAc,yB,GA3DGxB,IAAM6B,WAmFtB3B,gBANU,SAAC9H,EAAO0J,GAC/B,MAAO,CACLnL,UAAWyB,EAAMzB,aAINuJ,CAAyBsN,ICnFlC5V,G,kDACF,WAAY+E,GAAQ,IAAD,8BACf,cAAMA,IAIDvE,MAAQ,CACT5B,MAAO,IAAIC,KACXC,IAAI,IAAID,KACR+C,KAAM0B,GAAMhC,WAAWtB,aAAaA,aACpCgG,MAAK,GATM,E,qDAgGf,OACE,kBAAC,KAAD,CACEiL,MAAO,KACPrB,OAAQ,IACRhO,KAAMuF,KAAK3G,MAAMoB,KACjB6F,OAAQ,CACNC,IAAK,EAAGC,MAAO,GAAIE,KAAM,GAAID,OAAQ,IAGvC,kBAAC,KAAD,CAAekO,gBAAgB,QAC/B,kBAAC,KAAD,CAAOhO,QAAQ,SACf,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAQiO,cAAc,MAAMC,aAAc,CAAEC,WAAY,UACxD,kBAAC,KAAD,CAAeC,EAAG,EAAGnO,OAAO,SAC5B,kBAAC,KAAD,CAAOD,QAAQ,OAAO8H,OAAQ,GAAI7H,OAAO,YACzC,kBAAC,KAAD,CAAKD,QAAQ,OAAOqO,KAAK,YACzB,kBAAC,KAAD,CAAKrO,QAAQ,UAAUqO,KAAK,iB,GAlHb9N,iBA8HRC,gBANS,SAAC9H,EAAO0J,GAC9B,MAAO,CACHlL,YAAawB,EAAMxB,YACnB4B,KAAMJ,EAAMI,QAGH0H,CAAyBC,cAvJ7B,SAAAC,GAAK,MAAK,CACrBN,KAAM,CACJO,QAAS,WAqJ6BF,CAAmBvI,KChJzDC,G,kDACF,WAAY8E,GAAQ,IAAD,8BACf,cAAMA,IAGDvE,MAAQ,CACT5B,MAAO,IAAIC,KACXC,IAAI,IAAID,KACR+C,KAAO0B,GAAMhC,WAAWrB,YAAYA,YACpC+F,MAAK,GARM,E,qDA4Ff,OACI,kBAAC,KAAD,CACIiL,MAAO,KACPrB,OAAQ,IACRhO,KAAMuF,KAAK3G,MAAMoB,KACjB6F,OAAQ,CAACC,IAAK,EAAGC,MAAO,GAAIE,KAAM,GAAID,OAAQ,IAE9C,kBAAC,KAAD,CAAekO,gBAAgB,QAC/B,kBAAC,KAAD,CAAOhO,QAAQ,SACf,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAQiO,cAAc,MAAMC,aAAc,CAAEC,WAAY,UACxD,kBAAC,KAAD,CAAeC,EAAG,EAAGnO,OAAO,SAE5B,kBAAC,KAAD,CAAKD,QAAQ,OAAOqO,KAAK,YACzB,kBAAC,KAAD,CAAKrO,QAAQ,UAAUqO,KAAK,iB,GA5GlB9N,iBA8HXC,gBAVa,SAAC9H,EAAO0J,GAC9B,MAAO,CACHlL,YAAawB,EAAMxB,YACnB4B,KAAMJ,EAAMI,QAOP0H,CAAyBC,cArIzB,SAAAC,GAAK,MAAK,CACrBN,KAAM,CACJO,QAAS,WAmIyBF,CAAmBtI,KCvHrDC,G,kDACF,WAAY6E,GAAQ,IAAD,8BACf,cAAMA,IACAqR,YAAc,EAAKA,YAAYrQ,KAAjB,gBACnB,EAAKsQ,YAAc,EAAKA,YAAYtQ,KAAjB,gBACnB,EAAKuQ,cAAgB,EAAKA,cAAcvQ,KAAnB,gBACrBzC,GAAMjC,SAASrC,GAAY,oBAE5B,EAAKwB,MAAQ,CACT5B,MAAO,IAAIC,KACXC,IAAI,IAAID,KACR0X,QAAQ,GACRC,QAAQ,GACRC,UAAU,GACVtW,IAAK,EAAKiW,cACVhW,IAAK,EAAKiW,cACVhW,MAAO,EAAKiW,gBACZtQ,MAAK,GAhBM,E,sEAoBSkB,GACjBC,KAAKpC,MAAMnE,KAAKhC,MAAM2I,uBAAwBL,EAAUtG,KAAKhC,MAAM2I,sBAA0BJ,KAAKpC,MAAMnE,KAAK9B,IAAIyI,uBAAwBL,EAAUtG,KAAK9B,IAAIyI,uBAC7I,IAAlBJ,KAAK3G,MAAMwF,MAEZmB,KAAKH,SAAS,CAAC7G,IAAKgH,KAAKiP,cACxBhW,IAAK+G,KAAKkP,cACVhW,MAAO8G,KAAKmP,oB,4CAIIpP,EAAWkG,GAC/B,OAAqB,IAAlBjG,KAAK3G,MAAMwF,OACZmB,KAAKH,SAAS,CAAC7G,IAAKgH,KAAKiP,cACvBhW,IAAK+G,KAAKkP,cACVhW,MAAO8G,KAAKmP,gBAAgBtQ,MAAK,KAC5B,K,oCAMT,IAAI3G,EAAS,GAIPD,EAAK,IAAIP,KAEX6X,EAAUtX,EAAKI,WAAW,EAC3BkX,EAAU,IAAGA,GAAW,IAMxB,IAJH,IAAIC,EAAU,IAAI9X,KAAKO,EAAKG,cAAeH,EAAKI,WAAW,EAAG,GAAGC,UAIrDC,EAAE,EAAEA,GAAGiX,EAASjX,IACxBL,EAASM,KAAM,CAAEC,KAAMC,OAAOH,GAAII,KAAK,EAAGC,QAAQ,IAGtD,GAA8C,OAA3CuD,GAAMhC,WAAWtC,YAAYA,YACbsE,GAAMhC,WAAWtC,YAAYA,YAE/CmO,QAAO,SAAC/G,GACX,GAAGsQ,IAAY7S,SAASuC,EAAKW,IAAIlB,MAAM,EAAE,IAAK,OAAOO,KAEpDD,SAAQ,SAACC,EAAKO,GACb,IAAIiQ,EAAQ/S,SAASuC,EAAKW,IAAIlB,MAAM,EAAE,IAAI,EAEtCG,EAAK,EAGCQ,OAAOC,QAAQL,EAAKG,QAC9B,GAAGF,MAAMC,QAAQF,EAAKG,SAA6B,KAAf,EAAsBlH,EAASuX,GAAO7W,UAAYV,EAASuX,GAAO9W,YAGvF0G,OAAOC,QAAQL,EAAKG,QAAQG,KAAI,SAAChB,EAAEiB,EAAMC,IACjC,IAAhBlB,EAAE,GAAGmB,QAA2B,IAAPb,IAC3B3G,EAASuX,GAAO9W,OAChBkG,EAAK,GAGJW,IAAQC,EAAIE,OAAO,GAAc,IAATd,GACzB3G,EAASuX,GAAO7W,gBAerB,OAAOV,I,oCAMP,IAAIA,EAAS,GAITD,EAAK,IAAIP,KAET6X,EAAUtX,EAAKI,WAAW,EAC3BkX,EAAU,IAAGA,GAAW,IAMxB,IAJH,IAAIC,EAAU,IAAI9X,KAAKO,EAAKG,cAAeH,EAAKI,WAAW,EAAG,GAAGC,UAIrDC,EAAE,EAAEA,GAAGiX,EAASjX,IACxBL,EAASM,KAAM,CAAEC,KAAMC,OAAOH,GAAII,KAAK,EAAGC,QAAQ,IAItD,GAA8C,OAA3CuD,GAAMhC,WAAWtC,YAAYA,YACbsE,GAAMhC,WAAWtC,YAAYA,YAEjDmO,QAAO,SAAC/G,GACT,GAAGsQ,IAAY7S,SAASuC,EAAKW,IAAIlB,MAAM,EAAE,IAAK,OAAOO,KAEpDD,SAAQ,SAACC,EAAKO,GACX,IAAIiQ,EAAQ/S,SAASuC,EAAKW,IAAIlB,MAAM,EAAE,IAAI,EACvCG,EAAK,EAGT,GAAGK,MAAMC,QAAQF,EAAKG,SAA+B,KAAjB,EAAwBlH,EAASuX,GAAO7W,UAAYV,EAASuX,GAAO9W,YAE1F0G,OAAOC,QAAQL,EAAKG,QAAQG,KAAI,SAAChB,EAAEiB,EAAMC,IACjC,IAAhBlB,EAAE,GAAGmB,QAA2B,IAAPb,IAC3B3G,EAASuX,GAAO9W,OAChBkG,EAAK,GAEJW,IAAQC,EAAIE,OAAO,GAAc,IAATd,GACzB3G,EAASuX,GAAO7W,gBAcrB,OAAOV,I,sCAKP,IAAIA,EAAS,GAETD,EAAK,IAAIP,KAET6X,EAAUtX,EAAKI,WAChBkX,EAAU,IAAGA,GAAW,IAOxB,IAJH,IAAIC,EAAU,IAAI9X,KAAKO,EAAKG,cAAeH,EAAKI,WAAW,EAAG,GAAGC,UAIrDC,EAAE,EAAEA,GAAGiX,EAASjX,IACxBL,EAASM,KAAM,CAAEC,KAAMC,OAAOH,GAAII,KAAK,EAAGC,QAAQ,IAGtD,GAA8C,OAA3CuD,GAAMhC,WAAWtC,YAAYA,YACbsE,GAAMhC,WAAWtC,YAAYA,YAEhDmO,QAAO,SAAC/G,GACV,GAAGsQ,IAAY7S,SAASuC,EAAKW,IAAIlB,MAAM,EAAE,IAAK,OAAOO,KAEpDD,SAAQ,SAACC,EAAKO,GAEb,IAAIiQ,EAAQ/S,SAASuC,EAAKW,IAAIlB,MAAM,EAAE,IAAI,EAEtCG,EAAK,EAEV,GAAGK,MAAMC,QAAQF,EAAKG,SAA+B,KAAjB,EAAwBlH,EAASuX,GAAO7W,UAAYV,EAASuX,GAAO9W,YAG1F0G,OAAOC,QAAQL,EAAKG,QAAQG,KAAI,SAAChB,EAAEiB,EAAMC,IACjC,IAAhBlB,EAAE,GAAGmB,QAA2B,IAAPb,IAC3B3G,EAASuX,GAAO9W,OAChBkG,EAAK,GAGJW,IAAQC,EAAIE,OAAO,GAAc,IAATd,GACzB3G,EAASuX,GAAO7W,gBAanB,OAAOV,I,4EAUP,IAAIwX,EAAU,CAAC,UAAU,WAAW,QAAQ,QAC5C,MAAM,OAAO,OAAO,SAAS,YAC7B,UAAU,WAAW,YAEjBH,GADK,IAAI7X,MACMW,WAQnB,OAPIkX,EAAU,EAAG,IAAGA,GAAW,IAC/BvP,KAAK3G,MAAMiW,UAAUI,EAAUH,EAAU,GACrCA,EAAU,EAAG,IAAGA,GAAW,IAC/BvP,KAAK3G,MAAMgW,QAAQK,EAAUH,EAAU,GACnCA,EAAU,EAAG,IAAGA,GAAW,IAC/BvP,KAAK3G,MAAM+V,QAAQM,EAAUH,EAAU,GAInC,kBAAC7H,GAAA,EAAD,CACA7G,UAAWb,KAAKpC,MAAMkD,QAAQC,KAC9B4G,oBAAqB,kBAAC,KAAD,MACrBC,kBAAmB,kBAAC,KAAD,OAEf,kBAACC,GAAA,EAAD,CAAUC,OAAO,IAAIzF,MAAOrC,KAAK3G,MAAM+V,SACnC,kBAAC,KAAD,CACAtF,MAAO,KACPrB,OAAQ,IACRhO,KAAMuF,KAAK3G,MAAML,IACjBsH,OAAQ,CACRC,IAAK,EAAGC,MAAO,GAAIE,KAAM,GAAID,OAAQ,IAGrC,kBAAC,KAAD,CAAekO,gBAAgB,QAC/B,kBAAC,KAAD,CAAOhO,QAAQ,SACf,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAQiO,cAAc,MAAMC,aAAc,CAAEC,WAAY,UACxD,kBAAC,KAAD,CAAeC,EAAG,EAAGnO,OAAO,SAC5B,kBAAC,KAAD,CAAOD,QAAQ,OAAO8H,OAAQ,GAAI7H,OAAO,YACzC,kBAAC,KAAD,CAAKD,QAAQ,OAAOqO,KAAK,YACzB,kBAAC,KAAD,CAAKrO,QAAQ,UAAUqO,KAAK,cAIhC,kBAACnH,GAAA,EAAD,CAAUC,OAAO,IAAIzF,MAAOrC,KAAK3G,MAAMgW,SACnC,kBAAC,KAAD,CACAvF,MAAO,KACPrB,OAAQ,IACRhO,KAAMuF,KAAK3G,MAAMJ,IACjBqH,OAAQ,CACRC,IAAK,EAAGC,MAAO,GAAIE,KAAM,GAAID,OAAQ,IAGrC,kBAAC,KAAD,CAAekO,gBAAgB,QAC/B,kBAAC,KAAD,CAAOhO,QAAQ,SACf,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAQiO,cAAc,MAAMC,aAAc,CAAEC,WAAY,UACxD,kBAAC,KAAD,CAAeC,EAAG,EAAGnO,OAAO,SAC5B,kBAAC,KAAD,CAAOD,QAAQ,OAAO8H,OAAQ,GAAI7H,OAAO,YACzC,kBAAC,KAAD,CAAKD,QAAQ,OAAOqO,KAAK,YACzB,kBAAC,KAAD,CAAKrO,QAAQ,UAAUqO,KAAK,cAKhC,kBAACnH,GAAA,EAAD,CAAUC,OAAO,IAAIzF,MAAOrC,KAAK3G,MAAMiW,WACnC,kBAAC,KAAD,CACAxF,MAAO,KACPrB,OAAQ,IACRhO,KAAMuF,KAAK3G,MAAMH,MACjBoH,OAAQ,CACRC,IAAK,EAAGC,MAAO,GAAIE,KAAM,GAAID,OAAQ,IAGrC,kBAAC,KAAD,CAAekO,gBAAgB,QAC/B,kBAAC,KAAD,CAAOhO,QAAQ,SACf,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAQiO,cAAc,MAAMC,aAAc,CAAEC,WAAY,UACxD,kBAAC,KAAD,CAAeC,EAAG,EAAGnO,OAAO,SAC5B,kBAAC,KAAD,CAAOD,QAAQ,OAAO8H,OAAQ,GAAI7H,OAAO,YACzC,kBAAC,KAAD,CAAKD,QAAQ,OAAOqO,KAAK,YACzB,kBAAC,KAAD,CAAKrO,QAAQ,UAAUqO,KAAK,mB,GA3SlB9N,iBAiUfC,gBANS,SAAC9H,EAAO0J,GAC9B,MAAO,CACHlL,YAAawB,EAAMxB,YACnB4B,KAAMJ,EAAMI,QAGH0H,CAAyBC,cA1UzB,SAAAC,GAAK,MAAK,CACrBN,KAAM,CAEF2H,SAAU,EACVzB,SAAU,QAsUsB7F,CAAmBrI,K,8BC7QrD4W,G,kDACF,WAAY/R,GAAQ,IAAD,uBACf,cAAMA,IAEDgS,WAAa,EAAKA,WAAWhR,KAAhB,gBAClB,EAAKwG,gBAAkB,EAAKA,gBAAgBxG,KAArB,gBACvB,EAAKyG,YAAc,EAAKA,YAAYzG,KAAjB,gBACnB,EAAKvF,MAAM,CAACwW,UAAS,EAAMC,UAAU,GAAGhJ,MAAK,EAAMiJ,UAAS,GAChD,EAAKnS,MAAM9C,WAAWkV,cAPnB,MAQW,KAA1B,EAAKpS,MAAM9C,WAAkB,EAAKzB,MAAMyW,UAAU,EAAKlS,MAAM9C,WAAWkV,cAAc,GAAG,EAAK3W,MAAMyW,UAAU,GAR/F,E,0DAUL,IAAD,OACX9P,KAAKH,UAAS,SAACsJ,GAAD,MAAgB,CAACrC,MAAMqC,EAAUrC,SADpC,MAE0D9G,KAAK3G,MAAlE4B,EAFG,EAEHA,SAAyBgV,GAFtB,EAEOC,eAFP,EAEsBD,MAAKE,EAF3B,EAE2BA,MAAMrV,EAFjC,EAEiCA,WAAWC,EAF5C,EAE4CA,UAC1CI,KAAKC,UAAU,CAACN,WAAWA,EAAWC,UAAUA,EAAUqV,KAAKH,EAAKjV,MAAMmV,EAAOlV,SAASA,IACvGb,IAAMiW,OAAO,WAAWrQ,KAAKpC,MAAMxG,GAlCrB,SAAA+C,GAGjB,IAAM9C,EAAQ8C,IAAWT,KAAKrC,MAGxBuE,EAAS,CACXN,QAAS,CACN,eAAgB,qBAS1B,OAJMjE,IACAuE,EAAON,QAAP,gCAA6CjE,EAA7C,MAGCuE,EAiBsCtB,CAAY6B,GAAMhC,WACxDI,MAAK,SAACC,GACL,EAAKqF,SAAS,CAACkQ,UAAS,S,wCAI1B/P,KAAKH,UAAS,SAACsJ,GAAD,MAAgB,CAACrC,MAAMqC,EAAUrC,W,qEAa/C,IAAMwJ,EAAS,CAAC,UAAW,UAAW,WACVC,KAAKC,MAAMD,KAAKE,SAAWH,EAAO3Q,QAE5D,OACoB,IAAtBK,KAAK3G,MAAM0W,SACV,kBAAC1G,GAAA,EAAD,CAAMxI,UAAWb,KAAKpC,MAAMkD,QAAQC,MACnC,kBAAC2P,GAAA,EAAD,CACEC,OACE,kBAACC,GAAA,EAAD,CAAQlH,aAAW,SAAS7I,UAAWb,KAAKpC,MAAMkD,QAAQ6P,QACvD3Q,KAAK3G,MAAMyW,WAQhBjL,MAAO7E,KAAKpC,MAAM9C,WAAW,IAAIkF,KAAKpC,MAAM7C,UAC5C8V,UAAW7Q,KAAKpC,MAAMwS,OAGxB,kBAAC9G,GAAA,EAAD,KACE,kBAACzL,EAAA,EAAD,CAAYiT,WAAS,EAACjQ,UAAWb,KAAKpC,MAAMkD,QAAQgQ,WAApD,SACO9Q,KAAKpC,MAAMmT,MAElB,kBAAClT,EAAA,EAAD,CAAYiT,WAAS,EAACjQ,UAAWb,KAAKpC,MAAMkD,QAAQgQ,aAMtD,kBAACxI,GAAA,EAAD,CAAakB,gBAAc,GAE7B,kBAACC,EAAA,EAAD,CACAC,aAAW,QACX3L,QAAQ,WAERsC,QAASL,KAAKoF,gBAEdpH,MAAM,aAEA,kBAAC,KAAD,OAEN,kBAAC6I,GAAA,EAAD,CACAC,KAAM9G,KAAK3G,MAAMyN,KACjBC,QAAS/G,KAAKqF,YACd8B,kBAAgB,qBAChBH,mBAAiB,4BAGjB,kBAACO,GAAA,EAAD,KACE,kBAACoC,GAAA,EAAD,CAAmBvS,GAAG,4BAAtB,4DAIF,kBAACmR,GAAA,EAAD,KACA,kBAAC3F,GAAA,EAAD,CAAQvC,QAASL,KAAKoF,gBAAiBpH,MAAM,WAA7C,UAGE,kBAAC4E,GAAA,EAAD,CAAQvC,QAASL,KAAKqF,YAAarH,MAAM,YAAYwK,WAAS,GAA9D,cA4BP,kC,GAzHsBvH,IAAM6B,WAkId1B,iBAnLA,SAAAC,GAAK,MAAK,CACrBN,KAAM,CACF0G,SAAU,IACVR,SAAU,IACV3G,OAAOe,EAAMG,QAAQ,MAGvBwP,MAAO,CACLvI,OAAQ,EACR9F,WAAY,UAEdsO,OAAQ,CACN7G,UAAW,eACX7I,WAAY,OACZ2P,WAAY7P,EAAM8P,YAAYC,OAAO,YAAa,CAChDC,SAAUhQ,EAAM8P,YAAYE,SAASC,YAGzCC,WAAY,CACVnH,UAAW,kBAEbuG,OAAQ,CACN5G,gBAAiByH,KAAI,MAEvBV,UAAU,CACN3Q,YAAYkB,EAAMG,QAAQ,KAC1BiQ,SAAS,iBAyJJrQ,CAAmBuO,I,kHC1H3BrV,GAAc,SAAAH,GAGhB,IAAM9C,EAAQ8C,IAAWT,KAAKrC,MAGxBuE,EAAS,CACXN,QAAS,CACN,eAAgB,qBAS1B,OAJMjE,IACAuE,EAAON,QAAP,gCAA6CjE,EAA7C,MAGCuE,GAEH8V,G,kDACF,WAAY9T,GAAQ,IAAD,8BACf,cAAMA,IACD+T,kBAAoB,EAAKA,kBAAkB/S,KAAvB,gBACzB,EAAKgT,SAAW,EAAKA,SAAShT,KAAd,gBAChB,EAAKyG,YAAc,EAAKA,YAAYzG,KAAjB,gBACnB,EAAKiT,OAAS,EAAKA,OAAOjT,KAAZ,gBACd,EAAKkT,kBAAoB,EAAKA,kBAAkBlT,KAAvB,gBACzB,EAAKmT,wBAA0B,EAAKA,wBAAwBnT,KAA7B,gBAC/B,EAAKoT,wBAA0B,EAAKA,wBAAwBpT,KAA7B,gBAC/B,EAAKqT,8BAAgC,EAAKA,8BAA8BrT,KAAnC,gBACrC,EAAKsT,8BAAgC,EAAKA,8BAA8BtT,KAAnC,gBACrC,EAAKuT,SAAW,EAAKA,SAASvT,KAAd,gBAEhB,EAAKvF,MACL,CACEwW,UAAS,EACTuC,KAAI,EACJtX,WAAW,GACXC,UAAU,GACVkV,KAAK,GACLE,MAAM,GACNkC,SAAS,GACTnC,eAAe,GACfoC,mBAAmB,WACnBC,aAAa,WACbC,aAAY,EACZC,UAAS,EACTf,KAAK,GACLgB,QAAQ,EACRC,gBAAe,EACfC,eAAc,EACdC,UAAS,EACTC,WAAU,EACVC,cAAa,EACbC,aAAY,GAGd,EAAKb,WArCU,E,uDAwCR,IAAD,OACR/X,IAAMC,IAAI,aAAaC,GAAY6B,GAAMhC,WACxCI,MAAK,SAACC,GAEL,EAAKqF,SAAS,CAAC6R,KAAKlX,EAAIC,UAEzBC,OAAM,SAAAC,GACHY,QAAQC,IAAIb,Q,gDAQhBqF,KAAKH,SAAS,CAAC0S,aAAa,W,gDAG5BvS,KAAKH,SAAS,CAAC0S,aAAa,e,sDAG5BvS,KAAKH,SAAS,CAACyS,mBAAmB,W,sDAGlCtS,KAAKH,SAAS,CAACyS,mBAAmB,e,0CAY9BtS,KAAKH,UAAS,SAACsJ,GAAD,MAAgB,CAAC0G,UAAU1G,EAAU0G,e,iCAIvD7P,KAAKH,UAAS,SAACsJ,GAAD,MAAgB,CAC9BiJ,KAAKjJ,EAAUiJ,IAAInX,SAAS,GAC5BH,WAAW,GACXmY,SAAS,GACThD,KAAK,GACLE,MAAM,GACNkC,SAAS,GACTnC,eAAe,S,6BAIVpK,GAAO,IAAD,OAEXA,EAAMoN,iBAFK,MAG0DlT,KAAK3G,MAAlE4B,EAHG,EAGHA,SAAUiV,EAHP,EAGOA,eAAeD,EAHtB,EAGsBA,KAAKE,EAH3B,EAG2BA,MAAMrV,EAHjC,EAGiCA,WAAWC,EAH5C,EAG4CA,UAGjDoY,EAAc,IAAIC,OAAO,oDACzBC,EAAa,IAAID,OAAO,yCAC1BvU,GAAK,EAaT,KAZiC,IAA7BsU,EAAYG,KAAKrY,IAAwBA,EAAS0E,OAAO,MAAOd,GAAK,EAAMmB,KAAKH,SAAS,CAACkT,cAAa,IAAOtN,YAAW,WAAK,EAAK5F,SAAS,CAACkT,cAAa,MAAW,MACtKjY,EAAW6E,OAAO,KAAKd,GAAK,EAAMmB,KAAKH,SAAS,CAAC8S,gBAAe,IAAOlN,YAAW,WAAK,EAAK5F,SAAS,CAAC8S,gBAAe,MAAW,MAChI5X,EAAU4E,OAAO,KAAKd,GAAK,EAAMmB,KAAKH,SAAS,CAAC+S,eAAc,IAAOnN,YAAW,WAAK,EAAK5F,SAAS,CAAC+S,eAAc,MAAW,MAC7H3C,EAAKtQ,OAAO,KAAKd,GAAK,EAAMmB,KAAKH,SAAS,CAACgT,UAAS,IAAOpN,YAAW,WAAK,EAAK5F,SAAS,CAACgT,UAAS,MAAW,OAC7G1C,EAAMxQ,OAAO,KAA0D,IAAlD0T,EAAWC,KAAKtT,KAAK3G,MAAM8W,MAAMH,kBAAyBnR,GAAK,EAAMmB,KAAKH,SAAS,CAACiT,WAAU,IAAOrN,YAAW,WAAK,EAAK5F,SAAS,CAACiT,WAAU,MAAW,MAC9K7X,IAAWiV,IAGblQ,KAAKH,SAAS,CAAC2S,aAAY,IAC3B/M,YAAW,WAAK,EAAK5F,SAAS,CAAC2S,aAAY,MAAW,MAGpDvX,IAAWiV,IAA2B,IAAPrR,EAAa,CAE9CmB,KAAKH,UAAS,SAACsJ,GAAD,MAAgB,CAACiJ,KAAI,MAG/B,IAAMlX,EAAOC,KAAKC,UAAU,CAACN,WAAWA,EAAWC,UAAUA,EAAUqV,KAAKH,EAAKjV,MAAMmV,EAAOlV,SAASA,IAEvGb,IAAMiB,KAAK,YAAaH,EAAMZ,GAAY6B,GAAMhC,WACjDI,MAAK,SAAAC,GAEF,EAAKnB,MAAMqY,KAAKlZ,KAAK,CAACsC,WAAWA,EAAWiW,KAAKZ,EAAMC,KAAKH,EAAKlV,UAAUA,IAC3E,EAAK8E,SAAS,CAAC4S,UAAS,IACxBhN,YAAW,WAAK,EAAK5F,SAAS,CAAC4S,UAAS,MAAW,QAGpD/X,OAAM,SAAAC,GACPY,QAAQC,IAAIb,GACZ,EAAKkF,SAAS,CAACmT,aAAY,IAC3BvN,YAAW,WAAK,EAAK5F,SAAS,CAACmT,aAAY,MAAW,QAKtDhT,KAAKH,SAAS,CAACgQ,UAAS,EACtBuC,KAAI,EACJtX,WAAW,GACXC,UAAU,GACVkV,KAAK,GACLE,MAAM,GACNkC,SAAS,GACTnC,eAAe,GACfoC,mBAAmB,WACnBC,aAAa,WACbC,aAAY,EACZe,mBAAkB,IAMpB9N,YAAW,WAAK,EAAK0M,aAAc,Q,wCAczB5T,GAEhByB,KAAKH,SAAL,eAAiBtB,EAAE0O,OAAOxU,KAAQ8F,EAAE0O,OAAO1K,U,kCAGhCuD,EAAO+E,GAED,cAAXA,GAKJ7K,KAAKH,SAAS,CAAC2S,aAAY,EAAMC,UAAS,M,+BAmC7C,IA8CC,IA9CF,OAEE,OAAsB,IAAnBzS,KAAK3G,MAAM+Y,IAIR,6BAGE,yBAAKvR,UAAWb,KAAKpC,MAAMkD,QAAQ5J,KACjC,kBAACgX,GAAA,EAAD,CAAUpH,KAAM9G,KAAK3G,MAAMoZ,SAAUtE,iBAAkB,IAAMpH,QAAS/G,KAAKqF,aACvE,kBAAC0I,GAAA,EAAD,CAAOhH,QAAS/G,KAAKqF,YAAa2I,SAAS,WAA3C,qBACkB,4DAKtB,yBAAKnN,UAAWb,KAAKpC,MAAMkD,QAAQ5J,KACnC,kBAACgX,GAAA,EAAD,CAAUpH,KAAM9G,KAAK3G,MAAM2Z,YAAa7E,iBAAkB,IAAMpH,QAAS/G,KAAKqF,aAC1E,kBAAC0I,GAAA,EAAD,CAAOhH,QAAS/G,KAAKqF,YAAa2I,SAAS,SAA3C,gBACa,uEAKjB,yBAAKnN,UAAWb,KAAKpC,MAAMkD,QAAQC,MAGjCf,KAAK3G,MAAMqY,KAAKnS,KAAI,SAACN,EAAKQ,GAC1B,GAA8B,IAA3B,EAAKpG,MAAMqY,KAAK/R,OAEjB,OAAO,kBAAC,GAAD,CAAWF,IAAKA,EAAK3E,WAAYmE,EAAKnE,WAAaC,UAAWkE,EAAKlE,UAAWqV,KAAMnR,EAAKmR,KAAMW,KAAM9R,EAAKjE,MAAO5D,GAAI6H,EAAK4G,UAMvI,kBAAC2N,GAAA,EAAD,CAAKxV,MAAM,UAAU0L,aAAW,MAAM7I,UAAWb,KAAKpC,MAAMkD,QAAQsR,IAAK/R,QAASL,KAAK4R,UACvF,kBAAC,KAAD,QAWJ,yBAAK/Q,UAAWb,KAAKpC,MAAMkD,QAAQgE,OACnC,0BAAMjE,UAAWb,KAAKpC,MAAMkD,QAAQ2S,KAAMC,SAAU1T,KAAK6R,QACvD,yBAAKhR,UAAWb,KAAKpC,MAAMkD,QAAQoK,OAEjC,kBAACyI,GAAA,EAAD,CACE9S,UAAWb,KAAKpC,MAAMkD,QAAQR,OAC9BlJ,GAAG,4BACHiL,MAAM,aACNuR,UAAQ,EACRC,WAAS,EACTpb,KAAK,aACL8J,MAAOvC,KAAK3G,MAAMyB,WAClB0H,SAAUxC,KAAK8R,kBACfgC,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,kBAAC,KAAD,YASoB,IAA5BjU,KAAK3G,MAAMsZ,eACP,yBAAK9R,UAAWb,KAAKpC,MAAMkD,QAAQ5J,KAEnC,kBAAC6W,GAAA,EAAD,CAAOhH,QAAS,WAAM,EAAKlH,SAAS,CAAC8S,gBAAe,KAAU3E,SAAS,SAAvE,qCACkC,qDAIrC,8BAEH,yBAAKnN,UAAWb,KAAKpC,MAAMkD,QAAQoK,OAEnC,kBAACyI,GAAA,EAAD,CACE9S,UAAWb,KAAKpC,MAAMkD,QAAQR,OAC9BlJ,GAAG,4BACHiL,MAAM,YACNwR,WAAS,EACTpb,KAAK,YAEL8J,MAAOvC,KAAK3G,MAAM0B,UAClByH,SAAUxC,KAAK8R,kBACfgC,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,kBAAC,KAAD,YAUmB,IAA3BjU,KAAK3G,MAAMuZ,cACP,yBAAK/R,UAAWb,KAAKpC,MAAMkD,QAAQ5J,KAEnC,kBAAC6W,GAAA,EAAD,CAAOhH,QAAS,WAAM,EAAKlH,SAAS,CAAC+S,eAAc,KAAU5E,SAAS,SAAtE,oCACiC,qDAIpC,8BAED,yBAAKnN,UAAWb,KAAKpC,MAAMkD,QAAQoK,OAEjC,kBAACyI,GAAA,EAAD,CACE9S,UAAWb,KAAKpC,MAAMkD,QAAQR,OAC9BlJ,GAAG,4BACHiL,MAAM,QACNuR,UAAQ,EACRC,WAAS,EACTpb,KAAK,QACL8J,MAAOvC,KAAK3G,MAAM8W,MAClB3N,SAAUxC,KAAK8R,kBACfgC,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,kBAAC,KAAD,YAUe,IAAvBjU,KAAK3G,MAAMyZ,UACP,yBAAKjS,UAAWb,KAAKpC,MAAMkD,QAAQ5J,KAEnC,kBAAC6W,GAAA,EAAD,CAAOhH,QAAS,WAAM,EAAKlH,SAAS,CAACiT,WAAU,KAAU9E,SAAS,SACjE,qDAIJ,8BAGH,yBAAKnN,UAAWb,KAAKpC,MAAMkD,QAAQoK,OAEjC,kBAACyI,GAAA,EAAD,CACE9S,UAAWb,KAAKpC,MAAMkD,QAAQR,OAC9BlJ,GAAG,4BACHiL,MAAM,OACN5J,KAAK,OACLob,WAAS,EACTtR,MAAOvC,KAAK3G,MAAM4W,KAClBzN,SAAUxC,KAAK8R,kBACfgC,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,kBAAC,KAAD,YAUc,IAAtBjU,KAAK3G,MAAMwZ,SACP,yBAAKhS,UAAWb,KAAKpC,MAAMkD,QAAQ5J,KAEnC,kBAAC6W,GAAA,EAAD,CAAOhH,QAAS,WAAM,EAAKlH,SAAS,CAACgT,UAAS,KAAU7E,SAAS,SAAjE,oCACiC,qDAIpC,8BAEH,yBAAKnN,UAAWb,KAAKpC,MAAMkD,QAAQoK,OAEjC,kBAACyI,GAAA,GAAD,GACE9S,UAAWb,KAAKpC,MAAMkD,QAAQR,OAC9BlJ,GAAG,4BACHiL,MAAM,WAGNuR,UAAQ,EACRC,WAAS,EAETpb,KAAK,YATP,sBAUQ,YAVR,qBAWkC,SAA1BuH,KAAK3G,MAAMkZ,aAAyB,OAAS,YAXrD,sBAYSvS,KAAK3G,MAAM4B,UAZpB,yBAaY+E,KAAK8R,mBAbjB,2BAcc,CACViC,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,kBAAC,KAAD,OAGJC,aACE,kBAACF,GAAA,EAAD,CAAgBC,SAAS,OACvB,kBAACxK,EAAA,EAAD,CACEC,aAAW,6BACXrJ,QAASL,KAAK+R,wBACdoC,YAAanU,KAAKgS,yBAES,SAA1BhS,KAAK3G,MAAMkZ,aAAwB,kBAAC,KAAD,MAAiB,kBAAC,KAAD,UA3B/D,MAsC0B,IAA1BvS,KAAK3G,MAAM0Z,aACP,yBAAKlS,UAAWb,KAAKpC,MAAMkD,QAAQ5J,KAEnC,kBAAC6W,GAAA,EAAD,CAAOhH,QAAS,WAAM,EAAKlH,SAAS,CAACkT,cAAa,KAAU/E,SAAS,SAArE,gBACa,yCADb,uGAEK,gCAAS,iCAAT,QAIR,8BAGH,yBAAKnN,UAAWb,KAAKpC,MAAMkD,QAAQoK,OAEnC,kBAACyI,GAAA,GAAD,GACE9S,UAAWb,KAAKpC,MAAMkD,QAAQR,OAC9BlJ,GAAG,4BACHiL,MAAM,WAGNuR,UAAQ,EACRC,WAAS,EACTpb,KAAK,kBARP,sBASQ,mBATR,qBAUwC,SAAhCuH,KAAK3G,MAAMiZ,mBAA8B,OAAS,YAV1D,sBAWStS,KAAK3G,MAAM6W,gBAXpB,yBAYclQ,KAAK8R,mBAZnB,2BAac,CACViC,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,kBAAC,KAAD,OAGJC,aACE,kBAACF,GAAA,EAAD,CAAgBC,SAAS,OACvB,kBAACxK,EAAA,EAAD,CACEC,aAAW,6BACXrJ,QAASL,KAAKiS,8BACdkC,YAAanU,KAAKkS,+BAEe,SAAhClS,KAAK3G,MAAMiZ,mBAA8B,kBAAC,KAAD,MAAiB,kBAAC,KAAD,UA1BrE,MAuCyB,IAAzBtS,KAAK3G,MAAMmZ,YACP,yBAAK3R,UAAWb,KAAKpC,MAAMkD,QAAQ5J,KAEnC,kBAAC6W,GAAA,EAAD,CAAOhH,QAAS,WAAM,EAAKlH,SAAS,CAAC2S,aAAY,KAAUxE,SAAS,SAApE,cACY,gDAIf,8BAGD,kBAACpL,GAAA,EAAD,CACE7E,QAAQ,YACRC,MAAM,UACNzE,KAAK,SACLgU,KAAK,QACLsG,WAAS,EACThT,UAAWb,KAAKpC,MAAMkD,QAAQ0J,OAE9B4J,UAAW,kBAAC,KAAD,OARb,c,GAxfOnT,IAAM6B,WA+gBV1B,iBAvlBA,SAAAC,GAAK,MAAK,CACrBN,KAAM,CAMJO,QAAS,OACTsL,cAAe,MACfiB,SAAU,WACV5G,SAAS,KACToN,eAAe,gBAGfvP,MAAM,CACJxD,QAAS,OACTsL,cAAe,SACf3F,SAAS,IACToN,eAAe,eACf5S,UAAUJ,EAAMG,QAAQ,GACxBD,WAAWF,EAAMG,QAAQ,OAE3B0J,MAAM,CACJvI,WAAWtB,EAAMG,QAAQ,GACzBrB,YAAYkB,EAAMG,SAAS,IAE7BsP,UAAU,CACN3Q,YAAYkB,EAAMG,QAAQ,MAE9B4Q,IAAI,CACFpU,MAAM,OAEN2M,OAAO,OACP2J,QAAS,OACTC,cAAe,OACfhT,WAAWF,EAAMG,QAAQ,GACzBC,UAAUJ,EAAMG,QAAQ,IAE1BgJ,OAAO,CACL/I,UAAUJ,EAAMG,QAAQ,IAE1BiS,KAAM,CACJ3J,MAAO,OACPrI,UAAWJ,EAAMG,QAAQ,IAE3BtK,IAAI,CACF4S,MAAO,OACP,YAAa,CACXrI,UAAWJ,EAAMG,QAAQ,QAuiBpBJ,CAAmBsQ,I,sGC5c5B8C,G,kDACJ,WAAY5W,GAAQ,IAAD,Ed8HYrB,Ec9HZ,4BACf,cAAMqB,IAgBV6W,iBAAmB,WACjB,EAAK5U,SAAS,CAACiH,MAAK,KAlBH,EAoBnB4N,kBAAoB,WAClB,EAAK7U,SAAS,CAACiH,MAAK,KArBH,EAwBnB6N,WAAa,SAACpY,GACZ,EAAKsD,SAAS,CAAC2M,KAAKjQ,KArBlBJ,GAAMjC,Ud0H6B,SAACA,EAAUC,GAChDoB,QAAQC,IAAI,mBACZ,IAAI2B,EAAKzE,QAAO,IAAIhB,MAAOU,eACvBgF,EAAO1E,OAAO,IAAIhB,KAAKyF,GAAM,IAAIzF,MAAOW,WAAW,EAAG,GAAGC,WAC7D8E,EAAOV,SAASU,GAAQ,GAAG,IAAIA,EAAOA,EACtC,IAAIC,GAAmB,IAAI3F,MAAOW,WAAW,EAC7CgF,EAAkBX,SAAUW,GAAmB,GAAG,IAAKA,EAAmBA,EAC1E,IAEIH,EAAQ,GACRO,EAAI,2BAHGN,EAAKE,GAGR,mBAFCF,EAAKE,EAAkBD,GAAO,eAIvChD,IAAMC,IAAIoD,EAAKnD,GAAYH,IAC1BI,MAAK,SAACC,GACL,IAAItC,EAAS,GACdqD,QAAQC,IAAIe,EAAI,mBAGX,IAFJ,IAAItE,EAAK,IAAIP,KACRS,EAAW,IAAIT,KAAKO,EAAKG,cAAeH,EAAKI,WAAW,EAAG,GAAGC,UACtDC,EAAE,EAAEA,GAAGJ,EAAUI,IACzBL,EAASM,KAAM,CAAEC,KAAMC,OAAOH,GAAII,KAAK,EAAGC,QAAQ,IAI1C,QAFbsE,EAAQA,EAAQQ,OAAOlD,EAAIC,SAINyC,EAEpB8B,SAAQ,SAACC,GACN,IAAIwQ,EAAQ/S,SAASuC,EAAKW,IAAIlB,MAAM,EAAE,IAAI,EAGvCG,EAAK,EAENK,MAAMC,QAAQF,EAAKG,QAAsClH,EAASuX,GAAO7W,UAG3DyG,OAAOC,QAAQL,EAAKG,QAAQG,KAAI,SAAChB,EAAEiB,EAAMC,IACjC,IAAhBlB,EAAE,GAAGmB,QAA6B,IAAPb,IAC7B3G,EAASuX,GAAO9W,OAChBkG,EAAK,GAGJW,IAAQC,EAAIE,OAAO,GAAc,IAATd,GACzB3G,EAASuX,GAAO7W,gBASxBuD,GAAMjC,SAAS,CACXX,KJ7UiB,gBI8UjBC,QAAStB,QAOhBwC,OAAM,SAAAC,GACLY,QAAQC,IAAIb,EAAI,uBcvLhBwB,GAAMjC,SdiMmB,SAACqC,GAAD,OAAS,SAACrC,EAAUC,GAE3C,IAAIgD,EAAKzE,QAAO,IAAIhB,MAAOU,eACvBgF,EAAO1E,OAAO,IAAIhB,KAAKyF,EAAM,GAAI,GAAG7E,WACxC8E,EAAOV,SAASU,GAAQ,GAAG,IAAIA,EAAOA,EACtC,IAOQF,EAAQ,GACRO,EAAI,2BARDN,sBAQiC,KAPnCA,EAAK,KAAKC,EAAO,gBAStBhD,IAAMC,IAAIoD,EAAKnD,GAAYH,IAC1BI,MAAK,SAACC,GAGH,IAAItC,EAAS,GAoBf,GAjBEA,EAASM,KAAM,CAAEC,KAAMC,OAAO,WAAYC,KAAK,EAAGC,QAAQ,IAC1DV,EAASM,KAAM,CAAEC,KAAMC,OAAO,YAAaC,KAAK,EAAGC,QAAQ,IAC3DV,EAASM,KAAM,CAAEC,KAAMC,OAAO,SAAUC,KAAK,EAAGC,QAAQ,IACxDV,EAASM,KAAM,CAAEC,KAAMC,OAAO,SAAUC,KAAK,EAAGC,QAAQ,IACxDV,EAASM,KAAM,CAAEC,KAAMC,OAAO,QAASC,KAAK,EAAGC,QAAQ,IACvDV,EAASM,KAAM,CAAEC,KAAMC,OAAO,UAAWC,KAAK,EAAGC,QAAQ,IACzDV,EAASM,KAAM,CAAEC,KAAMC,OAAO,UAAWC,KAAK,EAAGC,QAAQ,IACzDV,EAASM,KAAM,CAAEC,KAAMC,OAAO,WAAYC,KAAK,EAAGC,QAAQ,IAC1DV,EAASM,KAAM,CAAEC,KAAMC,OAAO,cAAcC,KAAK,EAAGC,QAAQ,IAC5DV,EAASM,KAAM,CAAEC,KAAMC,OAAO,YAAaC,KAAK,EAAGC,QAAQ,IAC3DV,EAASM,KAAM,CAAEC,KAAMC,OAAO,cAAcC,KAAK,EAAGC,QAAQ,IAC5DV,EAASM,KAAM,CAAEC,KAAMC,OAAO,aAAcC,KAAK,EAAGC,QAAQ,IAC/D2C,QAAQC,IAAIe,EAAI,mBAKF,QAFbW,EAAQA,EAAQQ,OAAOlD,EAAIC,OAET,CAEGyC,EAEpB8B,SAAQ,SAACC,GACR,IAAI1C,EAAI0C,EAAKW,IAAIlB,MAAM,EAAE,GAAG,IAAIhG,OAAOgE,SAASuC,EAAKW,IAAIlB,MAAM,EAAE,KAAK,IAAIO,EAAKW,IAAIlB,MAAM,EAAE,GAEnF+Q,EADK,IAAI/X,KAAK6E,GACHlE,WAEXwG,EAAK,EAEZ,GAAGK,MAAMC,QAAQF,EAAKG,SAA+B,KAAjB,EAAwBlH,EAASuX,GAAO7W,UAAYV,EAASuX,GAAO9W,YAGvF0G,OAAOC,QAAQL,EAAKG,QAAQG,KAAI,SAAChB,EAAEiB,EAAMC,IACjC,IAAhBlB,EAAE,GAAGmB,QAA6B,IAAPb,IAC7B3G,EAASuX,GAAO9W,OAChBkG,EAAK,GAGJW,IAAQC,EAAIE,OAAO,GAAc,IAATd,GACzB3G,EAASuX,GAAO7W,gBASxBuD,GAAMjC,SAAS,CACXX,KJraQ,eIsaRC,QAAStB,QAOhBwC,OAAM,SAAAC,GACLY,QAAQC,IAAIb,EAAI,qBchRTia,IAGf,EAAKH,iBAAmB,EAAKA,iBAAiB7V,KAAtB,gBACxB,EAAK8V,kBAAoB,EAAKA,kBAAkB9V,KAAvB,gBACzB,EAAK+V,WAAa,EAAKA,WAAW/V,KAAhB,gBAClB,EAAKvF,MAAM,CAACyN,MAAK,EAAK0F,KAAK,aAC3BjR,QAAQC,IAAIW,GAAMhC,WAAW,oBAZd,E,qDA2BV,IAAD,OACA0a,EAAmBC,YAAK9U,KAAKpC,MAAMkD,QAAQoJ,MAAOlK,KAAKpC,MAAMkD,QAAQiU,aACrEC,EAAwBF,YAAK9U,KAAKpC,MAAMkD,QAAQoJ,MAAOlK,KAAKpC,MAAMkD,QAAQmU,kBAC1EC,EAAsBJ,YAAK9U,KAAKpC,MAAMkD,QAAQoJ,MAAOlK,KAAKpC,MAAMkD,QAAQqU,gBAE9E,MAAqB,cAAlBnV,KAAK3G,MAAMmT,KAGV,yBAAK3L,UAAWb,KAAKpC,MAAMkD,QAAQC,MAEjC,kBAACqU,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQpB,SAAS,WAAWpT,UAAWiU,YAAK9U,KAAKpC,MAAMkD,QAAQwU,OAAQtV,KAAK3G,MAAMyN,MAAQ9G,KAAKpC,MAAMkD,QAAQyU,cAE3G,kBAACC,EAAA,EAAD,CAAS3U,UAAWb,KAAKpC,MAAMkD,QAAQ2U,SAErC,kBAAChM,EAAA,EAAD,CACEiM,KAAK,QACL1X,MAAM,UACN0L,aAAW,cACXrJ,QAASL,KAAKyU,iBACd5T,UAAWiU,YAAK9U,KAAKpC,MAAMkD,QAAQ6U,WAAY3V,KAAK3G,MAAMyN,MAAQ9G,KAAKpC,MAAMkD,QAAQ8U,mBAGrF,kBAAC,IAAD,OAEF,kBAAC/X,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKC,MAAM,UAAU6X,QAAM,EAAChV,UAAWb,KAAKpC,MAAMkD,QAAQ+D,OAA7F,aAQE,kBAAC,GAAD,QAQN,kBAACiR,EAAA,EAAD,CACE/X,QAAQ,YACR+C,QAAS,CACPoJ,MAAO4K,YAAK9U,KAAKpC,MAAMkD,QAAQiV,aAAc/V,KAAK3G,MAAMyN,MAAQ9G,KAAKpC,MAAMkD,QAAQkV,mBAErFlP,KAAM9G,KAAK3G,MAAMyN,MAEjB,yBAAKjG,UAAWb,KAAKpC,MAAMkD,QAAQmV,aACjC,kBAACxM,EAAA,EAAD,CAAYpJ,QAASL,KAAK0U,mBACxB,kBAAC,IAAD,QAGJ,kBAACtH,EAAA,EAAD,MACA,kBAAC8I,EAAA,EAAD,KAEA,kBAACC,GAAA,EAAD,CAAU3L,QAAM,EAChBnK,QAAS,WAAK,EAAKsU,WAAW,eAE9B,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,eAExB,kBAACH,GAAA,EAAD,CAAU3L,QAAM,EAChBnK,QAAS,WAAK,EAAKsU,WAAW,cAE5B,kBAACyB,GAAA,EAAD,KACA,kBAAC,KAAD,OAEA,kBAACC,GAAA,EAAD,CAAcC,QAAQ,cAExB,kBAACH,GAAA,EAAD,CAAU3L,QAAM,EAChBnK,QAAS,WAAK,EAAKsU,WAAW,UAE5B,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,WAItB,kBAAClJ,EAAA,EAAD,MACA,kBAACmJ,GAAA,EAAD,CAAeC,OAAK,GAApB,iBACA,kBAACN,EAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAU3L,QAAM,EAAGnK,QAAS,WAAK,EAAKsU,WAAW,mBACjD,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,mBAExB,kBAACH,GAAA,EAAD,CAAU3L,QAAM,EAAGnK,QAAS,WAAK,EAAKsU,WAAW,uBAC/C,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,uBAExB,kBAACH,GAAA,EAAD,CAAU3L,QAAM,EAAGnK,QAAS,WAAK,EAAKsU,WAAW,kBAC/C,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,oBAOxB,0BAAMzV,UAAWb,KAAKpC,MAAMkD,QAAQ2V,SAClC,yBAAK5V,UAAWb,KAAKpC,MAAMkD,QAAQ4V,eACnC,kBAACC,EAAA,EAAD,CAAW1P,SAAS,KAAKpG,UAAWb,KAAKpC,MAAMkD,QAAQqB,WACrD,kBAACD,EAAA,EAAD,CAAMC,WAAS,EAACX,QAAS,GAEvB,kBAACU,EAAA,EAAD,CAAMjD,MAAI,EAAC2X,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,kBAACjK,EAAA,EAAD,CAAOhM,UAAWgU,GAChB,kBAACkC,GAAD,QAIJ,kBAAC7U,EAAA,EAAD,CAAMjD,MAAI,EAAC2X,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC9B,kBAACjK,EAAA,EAAD,CAAOhM,UAAWqU,GACd,kBAAE,GAAF,OAEF,kBAACrI,EAAA,EAAD,CAAOhM,UAAWmU,GAChB,kBAACgC,GAAD,QAKJ,kBAAC9U,EAAA,EAAD,CAAMjD,MAAI,EAAC2X,GAAI,IACb,yBAAK/V,UAAWb,KAAKpC,MAAMkD,QAAQoJ,OACjC,kBAAC+M,GAAD,YAYa,aAAlBjX,KAAK3G,MAAMmT,KAGhB,yBAAK3L,UAAWb,KAAKpC,MAAMkD,QAAQC,MAEjC,kBAACqU,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQpB,SAAS,WAAWpT,UAAWiU,YAAK9U,KAAKpC,MAAMkD,QAAQwU,OAAQtV,KAAK3G,MAAMyN,MAAQ9G,KAAKpC,MAAMkD,QAAQyU,cAE7G,kBAACC,EAAA,EAAD,CAAS3U,UAAWb,KAAKpC,MAAMkD,QAAQ2U,SAEvC,kBAAChM,EAAA,EAAD,CACEiM,KAAK,QACL1X,MAAM,UACN0L,aAAW,cACXrJ,QAASL,KAAKyU,iBACd5T,UAAWiU,YAAK9U,KAAKpC,MAAMkD,QAAQ6U,WAAY3V,KAAK3G,MAAMyN,MAAQ9G,KAAKpC,MAAMkD,QAAQ8U,mBAGrF,kBAAC,IAAD,OAEF,kBAAC/X,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKC,MAAM,UAAU6X,QAAM,EAAChV,UAAWb,KAAKpC,MAAMkD,QAAQ+D,OAA7F,YAQE,kBAAC,GAAD,QAQF,kBAACiR,EAAA,EAAD,CACE/X,QAAQ,YACR+C,QAAS,CACPoJ,MAAO4K,YAAK9U,KAAKpC,MAAMkD,QAAQiV,aAAc/V,KAAK3G,MAAMyN,MAAQ9G,KAAKpC,MAAMkD,QAAQkV,mBAErFlP,KAAM9G,KAAK3G,MAAMyN,MAEjB,yBAAKjG,UAAWb,KAAKpC,MAAMkD,QAAQmV,aACjC,kBAACxM,EAAA,EAAD,CAAYpJ,QAASL,KAAK0U,mBACxB,kBAAC,IAAD,QAGJ,kBAACtH,EAAA,EAAD,MACA,kBAAC8I,EAAA,EAAD,KAEA,kBAACC,GAAA,EAAD,CAAU3L,QAAM,EAChBnK,QAAS,WAAK,EAAKsU,WAAW,eAE9B,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,eAExB,kBAACH,GAAA,EAAD,CAAU3L,QAAM,EAChBnK,QAAS,WAAK,EAAKsU,WAAW,cAE5B,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,cAExB,kBAACH,GAAA,EAAD,CAAU3L,QAAM,EAChBnK,QAAS,WAAK,EAAKsU,WAAW,UAE5B,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,WAItB,kBAAClJ,EAAA,EAAD,MAEA,kBAACmJ,GAAA,EAAD,CAAeC,OAAK,GAApB,iBAEA,kBAACN,EAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAU3L,QAAM,EAAGnK,QAAS,WAAK,EAAKsU,WAAW,mBACjD,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,mBAExB,kBAACH,GAAA,EAAD,CAAU3L,QAAM,EAAGnK,QAAS,WAAK,EAAKsU,WAAW,uBAC/C,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,uBAExB,kBAACH,GAAA,EAAD,CAAU3L,QAAM,EAAGnK,QAAS,WAAK,EAAKsU,WAAW,kBAC/C,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,oBAaxB,0BAAMzV,UAAWb,KAAKpC,MAAMkD,QAAQ2V,SAClC,yBAAK5V,UAAWb,KAAKpC,MAAMkD,QAAQ4V,eACnC,kBAACC,EAAA,EAAD,CAAW1P,SAAS,KAAKpG,UAAWb,KAAKpC,MAAMkD,QAAQqB,WAEvD,kBAACD,EAAA,EAAD,CAAMjD,MAAI,EAAE2X,IAAE,GACd,yBAAK/V,UAAWb,KAAKpC,MAAMkD,QAAQoW,OAC/B,kBAAC,GAAD,WAaiB,kBAAlBlX,KAAK3G,MAAMmT,KAGhB,yBAAK3L,UAAWb,KAAKpC,MAAMkD,QAAQC,MAEjC,kBAACqU,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQpB,SAAS,WAAWpT,UAAWiU,YAAK9U,KAAKpC,MAAMkD,QAAQwU,OAAQtV,KAAK3G,MAAMyN,MAAQ9G,KAAKpC,MAAMkD,QAAQyU,cAE7G,kBAACC,EAAA,EAAD,CAAS3U,UAAWb,KAAKpC,MAAMkD,QAAQ2U,SAEvC,kBAAChM,EAAA,EAAD,CACEiM,KAAK,QACL1X,MAAM,UACN0L,aAAW,cACXrJ,QAASL,KAAKyU,iBACd5T,UAAWiU,YAAK9U,KAAKpC,MAAMkD,QAAQ6U,WAAY3V,KAAK3G,MAAMyN,MAAQ9G,KAAKpC,MAAMkD,QAAQ8U,mBAGrF,kBAAC,IAAD,OAEF,kBAAC/X,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKC,MAAM,UAAU6X,QAAM,EAAChV,UAAWb,KAAKpC,MAAMkD,QAAQ+D,OAA7F,iBAOE,kBAAC,GAAD,QAQF,kBAACiR,EAAA,EAAD,CACE/X,QAAQ,YACR+C,QAAS,CACPoJ,MAAO4K,YAAK9U,KAAKpC,MAAMkD,QAAQiV,aAAc/V,KAAK3G,MAAMyN,MAAQ9G,KAAKpC,MAAMkD,QAAQkV,mBAErFlP,KAAM9G,KAAK3G,MAAMyN,MAEjB,yBAAKjG,UAAWb,KAAKpC,MAAMkD,QAAQmV,aACjC,kBAACxM,EAAA,EAAD,CAAYpJ,QAASL,KAAK0U,mBACxB,kBAAC,IAAD,QAGJ,kBAACtH,EAAA,EAAD,MACA,kBAAC8I,EAAA,EAAD,KAEA,kBAACC,GAAA,EAAD,CAAU3L,QAAM,EAChBnK,QAAS,WAAK,EAAKsU,WAAW,eAE9B,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,eAExB,kBAACH,GAAA,EAAD,CAAU3L,QAAM,EAChBnK,QAAS,WAAK,EAAKsU,WAAW,cAE5B,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,cAExB,kBAACH,GAAA,EAAD,CAAU3L,QAAM,EAChBnK,QAAS,WAAK,EAAKsU,WAAW,UAE5B,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,WAItB,kBAAClJ,EAAA,EAAD,MAEA,kBAACmJ,GAAA,EAAD,CAAeC,OAAK,GAApB,iBAEA,kBAACN,EAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAU3L,QAAM,EAAGnK,QAAS,WAAK,EAAKsU,WAAW,mBACjD,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,mBAExB,kBAACH,GAAA,EAAD,CAAU3L,QAAM,EAAGnK,QAAS,WAAK,EAAKsU,WAAW,uBAC/C,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,uBAExB,kBAACH,GAAA,EAAD,CAAU3L,QAAM,EAAGnK,QAAS,WAAK,EAAKsU,WAAW,kBAC/C,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,oBAaxB,0BAAMzV,UAAWb,KAAKpC,MAAMkD,QAAQ2V,SAClC,yBAAK5V,UAAWb,KAAKpC,MAAMkD,QAAQ4V,eACnC,kBAACC,EAAA,EAAD,CAAW1P,SAAS,KAAKpG,UAAWb,KAAKpC,MAAMkD,QAAQqB,WAEvD,kBAACD,EAAA,EAAD,CAAMjD,MAAI,EAAE2X,IAAE,GACd,yBAAK/V,UAAWb,KAAKpC,MAAMkD,QAAQoW,OAC/B,kBAAC,GAAD,WAae,iBAAlBlX,KAAK3G,MAAMmT,KAGhB,yBAAK3L,UAAWb,KAAKpC,MAAMkD,QAAQC,MAEjC,kBAACqU,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQpB,SAAS,WAAWpT,UAAWiU,YAAK9U,KAAKpC,MAAMkD,QAAQwU,OAAQtV,KAAK3G,MAAMyN,MAAQ9G,KAAKpC,MAAMkD,QAAQyU,cAE7G,kBAACC,EAAA,EAAD,CAAS3U,UAAWb,KAAKpC,MAAMkD,QAAQ2U,SAEvC,kBAAChM,EAAA,EAAD,CACEiM,KAAK,QACL1X,MAAM,UACN0L,aAAW,cACXrJ,QAASL,KAAKyU,iBACd5T,UAAWiU,YAAK9U,KAAKpC,MAAMkD,QAAQ6U,WAAY3V,KAAK3G,MAAMyN,MAAQ9G,KAAKpC,MAAMkD,QAAQ8U,mBAGrF,kBAAC,IAAD,OAEF,kBAAC/X,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKC,MAAM,UAAU6X,QAAM,EAAChV,UAAWb,KAAKpC,MAAMkD,QAAQ+D,OAA7F,gBAQE,kBAAC,GAAD,QAQF,kBAACiR,EAAA,EAAD,CACE/X,QAAQ,YACR+C,QAAS,CACPoJ,MAAO4K,YAAK9U,KAAKpC,MAAMkD,QAAQiV,aAAc/V,KAAK3G,MAAMyN,MAAQ9G,KAAKpC,MAAMkD,QAAQkV,mBAErFlP,KAAM9G,KAAK3G,MAAMyN,MAEjB,yBAAKjG,UAAWb,KAAKpC,MAAMkD,QAAQmV,aACjC,kBAACxM,EAAA,EAAD,CAAYpJ,QAASL,KAAK0U,mBACxB,kBAAC,IAAD,QAGJ,kBAACtH,EAAA,EAAD,MACA,kBAAC8I,EAAA,EAAD,KAEA,kBAACC,GAAA,EAAD,CAAU3L,QAAM,EAChBnK,QAAS,WAAK,EAAKsU,WAAW,eAE9B,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,eAExB,kBAACH,GAAA,EAAD,CAAU3L,QAAM,EAChBnK,QAAS,WAAK,EAAKsU,WAAW,cAE5B,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,cAExB,kBAACH,GAAA,EAAD,CAAU3L,QAAM,EAChBnK,QAAS,WAAK,EAAKsU,WAAW,UAE5B,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,WAItB,kBAAClJ,EAAA,EAAD,MAEA,kBAACmJ,GAAA,EAAD,CAAeC,OAAK,GAApB,iBAEA,kBAACN,EAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAU3L,QAAM,EAAGnK,QAAS,WAAK,EAAKsU,WAAW,mBACjD,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,mBAExB,kBAACH,GAAA,EAAD,CAAU3L,QAAM,EAAGnK,QAAS,WAAK,EAAKsU,WAAW,uBAC/C,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,uBAExB,kBAACH,GAAA,EAAD,CAAU3L,QAAM,EAAGnK,QAAS,WAAK,EAAKsU,WAAW,kBAC/C,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,oBAaxB,0BAAMzV,UAAWb,KAAKpC,MAAMkD,QAAQ2V,SAClC,yBAAK5V,UAAWb,KAAKpC,MAAMkD,QAAQ4V,eACnC,kBAACC,EAAA,EAAD,CAAW1P,SAAS,KAAKpG,UAAWb,KAAKpC,MAAMkD,QAAQqB,WAEvD,kBAACD,EAAA,EAAD,CAAMjD,MAAI,EAAE2X,IAAE,GACd,yBAAK/V,UAAWb,KAAKpC,MAAMkD,QAAQoW,OAC/B,kBAAC,GAAD,WAeqB,sBAAlBlX,KAAK3G,MAAMmT,KAGhB,yBAAK3L,UAAWb,KAAKpC,MAAMkD,QAAQC,MAEjC,kBAACqU,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQpB,SAAS,WAAWpT,UAAWiU,YAAK9U,KAAKpC,MAAMkD,QAAQwU,OAAQtV,KAAK3G,MAAMyN,MAAQ9G,KAAKpC,MAAMkD,QAAQyU,cAE7G,kBAACC,EAAA,EAAD,CAAS3U,UAAWb,KAAKpC,MAAMkD,QAAQ2U,SAEvC,kBAAChM,EAAA,EAAD,CACEiM,KAAK,QACL1X,MAAM,UACN0L,aAAW,cACXrJ,QAASL,KAAKyU,iBACd5T,UAAWiU,YAAK9U,KAAKpC,MAAMkD,QAAQ6U,WAAY3V,KAAK3G,MAAMyN,MAAQ9G,KAAKpC,MAAMkD,QAAQ8U,mBAGrF,kBAAC,IAAD,OAEF,kBAAC/X,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKC,MAAM,UAAU6X,QAAM,EAAChV,UAAWb,KAAKpC,MAAMkD,QAAQ+D,OAA7F,qBAQE,kBAAC,GAAD,QAQF,kBAACiR,EAAA,EAAD,CACE/X,QAAQ,YACR+C,QAAS,CACPoJ,MAAO4K,YAAK9U,KAAKpC,MAAMkD,QAAQiV,aAAc/V,KAAK3G,MAAMyN,MAAQ9G,KAAKpC,MAAMkD,QAAQkV,mBAErFlP,KAAM9G,KAAK3G,MAAMyN,MAEjB,yBAAKjG,UAAWb,KAAKpC,MAAMkD,QAAQmV,aACjC,kBAACxM,EAAA,EAAD,CAAYpJ,QAASL,KAAK0U,mBACxB,kBAAC,IAAD,QAGJ,kBAACtH,EAAA,EAAD,MACA,kBAAC8I,EAAA,EAAD,KAEA,kBAACC,GAAA,EAAD,CAAU3L,QAAM,EAChBnK,QAAS,WAAK,EAAKsU,WAAW,eAE9B,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,eAExB,kBAACH,GAAA,EAAD,CAAU3L,QAAM,EAChBnK,QAAS,WAAK,EAAKsU,WAAW,cAE5B,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,cAExB,kBAACH,GAAA,EAAD,CAAU3L,QAAM,EAChBnK,QAAS,WAAK,EAAKsU,WAAW,UAE5B,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,WAKtB,kBAAClJ,EAAA,EAAD,MAEA,kBAACmJ,GAAA,EAAD,CAAeC,OAAK,GAApB,iBAEA,kBAACN,EAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAU3L,QAAM,EAAGnK,QAAS,WAAK,EAAKsU,WAAW,mBACjD,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,mBAExB,kBAACH,GAAA,EAAD,CAAU3L,QAAM,EAAGnK,QAAS,WAAK,EAAKsU,WAAW,uBAC/C,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,uBAExB,kBAACH,GAAA,EAAD,CAAU3L,QAAM,EAAGnK,QAAS,WAAK,EAAKsU,WAAW,kBAC/C,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,oBAaxB,0BAAMzV,UAAWb,KAAKpC,MAAMkD,QAAQ2V,SAClC,yBAAK5V,UAAWb,KAAKpC,MAAMkD,QAAQ4V,eACnC,kBAACC,EAAA,EAAD,CAAW1P,SAAS,KAAKpG,UAAWb,KAAKpC,MAAMkD,QAAQqB,WAEvD,kBAACD,EAAA,EAAD,CAAMjD,MAAI,EAAE2X,IAAE,GACd,yBAAK/V,UAAWb,KAAKpC,MAAMkD,QAAQoW,OAC/B,kBAAC,GAAD,WAYe,SAAlBlX,KAAK3G,MAAMmT,KAGhB,yBAAK3L,UAAWb,KAAKpC,MAAMkD,QAAQC,MAEjC,kBAACqU,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQpB,SAAS,WAAWpT,UAAWiU,YAAK9U,KAAKpC,MAAMkD,QAAQwU,OAAQtV,KAAK3G,MAAMyN,MAAQ9G,KAAKpC,MAAMkD,QAAQyU,cAE7G,kBAACC,EAAA,EAAD,CAAS3U,UAAWb,KAAKpC,MAAMkD,QAAQ2U,SAEvC,kBAAChM,EAAA,EAAD,CACEiM,KAAK,QACL1X,MAAM,UACN0L,aAAW,cACXrJ,QAASL,KAAKyU,iBACd5T,UAAWiU,YAAK9U,KAAKpC,MAAMkD,QAAQ6U,WAAY3V,KAAK3G,MAAMyN,MAAQ9G,KAAKpC,MAAMkD,QAAQ8U,mBAGrF,kBAAC,IAAD,OAEF,kBAAC/X,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKC,MAAM,UAAU6X,QAAM,EAAChV,UAAWb,KAAKpC,MAAMkD,QAAQ+D,OAA7F,QAQE,kBAAC,GAAD,QAQF,kBAACiR,EAAA,EAAD,CACE/X,QAAQ,YACR+C,QAAS,CACPoJ,MAAO4K,YAAK9U,KAAKpC,MAAMkD,QAAQiV,aAAc/V,KAAK3G,MAAMyN,MAAQ9G,KAAKpC,MAAMkD,QAAQkV,mBAErFlP,KAAM9G,KAAK3G,MAAMyN,MAEjB,yBAAKjG,UAAWb,KAAKpC,MAAMkD,QAAQmV,aACjC,kBAACxM,EAAA,EAAD,CAAYpJ,QAASL,KAAK0U,mBACxB,kBAAC,IAAD,QAGJ,kBAACtH,EAAA,EAAD,MACA,kBAAC8I,EAAA,EAAD,KAEA,kBAACC,GAAA,EAAD,CAAU3L,QAAM,EAChBnK,QAAS,WAAK,EAAKsU,WAAW,eAE9B,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,eAExB,kBAACH,GAAA,EAAD,CAAU3L,QAAM,EAChBnK,QAAS,WAAK,EAAKsU,WAAW,cAE5B,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,cAExB,kBAACH,GAAA,EAAD,CAAU3L,QAAM,EAChBnK,QAAS,WAAK,EAAKsU,WAAW,UAE5B,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,WAItB,kBAAClJ,EAAA,EAAD,MAEA,kBAACmJ,GAAA,EAAD,CAAeC,OAAK,GAApB,iBAEA,kBAACN,EAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAU3L,QAAM,EAAGnK,QAAS,WAAK,EAAKsU,WAAW,mBACjD,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,mBAExB,kBAACH,GAAA,EAAD,CAAU3L,QAAM,EAAGnK,QAAS,WAAK,EAAKsU,WAAW,uBAC/C,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,uBAExB,kBAACH,GAAA,EAAD,CAAU3L,QAAM,EAAGnK,QAAS,WAAK,EAAKsU,WAAW,kBAC/C,kBAACyB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,oBAaxB,0BAAMzV,UAAWb,KAAKpC,MAAMkD,QAAQ2V,SAClC,yBAAK5V,UAAWb,KAAKpC,MAAMkD,QAAQ4V,eACnC,kBAACC,EAAA,EAAD,CAAW1P,SAAS,KAAKpG,UAAWb,KAAKpC,MAAMkD,QAAQqB,WAEvD,kBAACD,EAAA,EAAD,CAAMjD,MAAI,EAAE2X,IAAE,GACd,yBAAK/V,UAAWb,KAAKpC,MAAMkD,QAAQoW,OAC/B,kBAAC,GAAD,gBArHP,M,GAprBKjW,IAAM6B,WA2zBf1B,iBA36BA,SAAAC,GAAK,MAAK,CACvBN,KAAM,CACJO,QAAS,QAEXmU,QAAS,CACP0B,aAAc,IAEhBlB,YAAY,aACV3U,QAAS,OACT+M,WAAY,SACZgG,eAAgB,WAChBjG,QAAS,SACN/M,EAAM+V,OAAO3B,SAElBH,OAAQ,CACN+B,OAAQhW,EAAMgW,OAAOC,OAAS,EAC9BpG,WAAY7P,EAAM8P,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDmG,OAAQlW,EAAM8P,YAAYoG,OAAOC,MACjCnG,SAAUhQ,EAAM8P,YAAYE,SAASoG,iBAGzClC,YAAa,CACXhU,WAxBgB,IAyBhBuI,MAAM,eAAD,OAzBW,IAyBX,OACLoH,WAAY7P,EAAM8P,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDmG,OAAQlW,EAAM8P,YAAYoG,OAAOC,MACjCnG,SAAUhQ,EAAM8P,YAAYE,SAASqG,kBAGzC/B,WAAY,CACVgC,YAAa,IAEf/B,iBAAkB,CAChBtU,QAAS,QAEXuD,MAAO,CACL6D,SAAU,GAEZqN,YAAa,CACX9B,SAAU,WACV2D,WAAY,SACZ9N,MA3CgB,IA4ChBoH,WAAY7P,EAAM8P,YAAYC,OAAO,QAAS,CAC5CmG,OAAQlW,EAAM8P,YAAYoG,OAAOC,MACjCnG,SAAUhQ,EAAM8P,YAAYE,SAASqG,kBAGzC1B,iBAAiB,aACf6B,UAAW,SACX3G,WAAY7P,EAAM8P,YAAYC,OAAO,QAAS,CAC5CmG,OAAQlW,EAAM8P,YAAYoG,OAAOC,MACjCnG,SAAUhQ,EAAM8P,YAAYE,SAASoG,gBAEvC3N,MAAOzI,EAAMG,QAAQ,IACpBH,EAAMyW,YAAYC,GAAG,MAAQ,CAC5BjO,MAAOzI,EAAMG,QAAQ,KAGzBkV,aAAcrV,EAAM+V,OAAO3B,QAC3BgB,QAAS,CACP/N,SAAU,EACVD,OAAQ,QACR4B,SAAU,QAEZlI,UAAW,CACTQ,WAAYtB,EAAMG,QAAQ,GAC1BwW,cAAe3W,EAAMG,QAAQ,IAE/B0I,MAAO,CACLiN,aAAc9V,EAAMG,QAAQ,KAC5BmB,WAAWtB,EAAMG,QAAQ,GACzBrB,YAAakB,EAAMG,QAAQ,GAC3BwW,cAAe3W,EAAMG,QAAQ,GAC7BF,QAAS,OACT+I,SAAU,OACVuC,cAAe,UAEjBsK,MAAO,CAGLC,aAAc,IACdxU,WAAW,EACXxC,YAAY,EACZ6X,cAAe,EACf1W,QAAS,OACT+I,SAAU,OACVuC,cAAe,UAGjBmI,YAAa,CACXtM,OAAQ,KAEVwM,iBAAiB,CACfxT,UAAUJ,EAAMG,QAAQ,GACxBiH,OAAQ,KAEV0M,eAAe,CAEb1M,OAAQ,KAEViC,OAAO,GAGPuN,kBAAkB,GAGlBC,kBAAkB,CAChB5W,QAAQ,OACR+S,eAAe,gBACfvK,MAAM,OA8zBK1I,CAAmBoT,ICz9Bd2D,QACW,cAA7Bnc,OAAOoc,SAASC,UAEe,UAA7Brc,OAAOoc,SAASC,UAEhBrc,OAAOoc,SAASC,SAASC,MACvB,2D,4FC0BAC,G,kDACJ,WAAY3a,GAAQ,IAAD,8BACjB,cAAMA,IACD4a,UAAY,EAAKA,UAAU5Z,KAAf,gBACjB,EAAKvF,MAAQ,CACX2B,MAAO,CAAEuH,MAAO,KAAMxI,OAAO,EAAO0e,WAAY,MAChDvhB,IAAK,MALU,E,sDAkBT4O,GAAO,IAAD,OAEd,GADAA,EAAMoN,iBACwB,KAA1BlT,KAAK0Y,WAAWnW,MAClBvC,KAAKH,SAAS,CACZ7E,MAAO,CACLuH,MAAOvC,KAAK0Y,WAAWnW,MACvBxI,OAAO,EACP0e,WAAY,mCAGhBzY,KAAK0Y,WAAWC,YAEd,CAEA,IAMM3d,EAAQgF,KAAK0Y,WAAWnW,MAExBrH,EAAOC,KAAKC,UAAU,CAAEJ,UAE9BZ,IAAMiB,KAAK,mBAAoBH,EAVhB,CACXI,QAAS,CACL,eAAgB,sBASvBf,MAAK,SAAAC,GACF,EAAKqF,SAAS,CAAE3I,IAAKsD,EAAIkB,aAI5BhB,OAAM,SAAAC,GACH,EAAKkF,SAAS,CAAE3I,IAAKyD,EAAIe,gB,+BAU1B,IAAD,SACEoF,EAAYd,KAAKpC,MAAjBkD,QACR,OACE,kBAAC6V,EAAA,EAAD,CAAW7Y,UAAU,OAAOmJ,SAAS,MACnC,kBAACmO,EAAA,EAAD,MACA,yBAAKvU,UAAWC,EAAQoJ,OACtB,kBAAC0G,GAAA,EAAD,CAAQ/P,UAAWC,EAAQ6P,QACzB,kBAAC,KAAD,OAEF,kBAAC9S,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,MAAnC,4BAGA,0BAAM8C,UAAWC,EAAQ2S,KAAMC,SAAU1T,KAAKwY,WAC5C,kBAAC7E,GAAA,GAAD,GACE5V,QAAQ,WACRuC,OAAO,SACPsT,UAAQ,EACRC,WAAS,EACTzc,GAAG,QACHiL,MAAM,gBACN5J,KAAK,QACLuU,aAAa,QACbxE,WAAS,GATX,uDAWY,SAAA0C,GAAK,OAAK,EAAKwN,WAAaxN,KAXxC,sBAYSlL,KAAK3G,MAAM2B,MAAMjB,OAZ1B,2BAaciG,KAAK3G,MAAM2B,MAAMyd,YAb/B,IAeL,kBAAC7V,GAAA,EAAD,CACOrJ,KAAK,SACLsa,WAAS,EACT9V,QAAQ,YACRC,MAAM,UACN6C,UAAWC,EAAQ8X,QAL1B,kBAUM5Y,KAAK3G,MAAMnC,IACZ,kBAAC6W,GAAA,EAAD,CAAOC,SAAS,SAAShO,KAAK3G,MAAMnC,KAElC,KAED,kBAACgL,EAAA,EAAD,CAAMjD,MAAI,EAAC2X,IAAE,GACV,kBAACiC,GAAA,EAAD,CAAMxY,QAASL,KAAKpC,MAAMkb,QAAS/a,QAAQ,SAA3C,yB,GAxGakD,IAAM6B,WAuHpB3B,iBACbC,cA5Ia,SAAAC,GAAK,MAAK,CACvB6I,MAAO,CACLzI,UAAWJ,EAAMG,QAAQ,GACzBF,QAAS,OACTsL,cAAe,SACfyB,WAAY,UAEdsC,OAAQ,CACNrQ,OAAQe,EAAMG,QAAQ,GACtBuI,gBAAiB1I,EAAM2I,QAAQ+O,UAAUC,MAE3CvF,KAAM,CACJ3J,MAAO,OACPrI,UAAWJ,EAAMG,QAAQ,IAE3BoX,OAAQ,CACNtY,OAAQe,EAAMG,QAAQ,EAAG,EAAG,OA4H9BJ,CAAmBmX,KC3HfU,G,kDACJ,WAAYrb,GAAQ,IAAD,8BACjB,cAAMA,IACDsb,WAAa,EAAKA,WAAWta,KAAhB,gBAClB,EAAKvF,MAAQ,CACX2B,MAAO,CAAEuH,MAAO,KAAMxI,OAAO,EAAO0e,WAAY,MAChDU,cAAe,CAAE5W,MAAO,KAAMxI,OAAO,EAAO0e,WAAY,MACxDW,cAAe,CAAE7W,MAAO,KAAMxI,OAAO,EAAO0e,WAAY,MACxDY,aAAc,CAAE9W,MAAO,KAAMxI,OAAO,EAAO0e,WAAY,MACvDvhB,IAAK,MARU,E,+DAaAoiB,GAAY,IACrBvf,EAAUiG,KAAKpC,MAAf7D,MACJA,IAAUuf,EAAUvf,QAEL,kBAAbA,EAAM3C,GACR4I,KAAKH,SAAS,CAAE3I,IAAK6C,EAAM7C,IAAIA,MAE/B8I,KAAKH,SAAS,CAAE3I,IAAK,U,iCAMhB4O,GAAO,IAAD,OAEf,GADAA,EAAMoN,iBACwB,KAA1BlT,KAAK0Y,WAAWnW,MAClBvC,KAAKH,SAAS,CACZ7E,MAAO,CACLuH,MAAOvC,KAAK0Y,WAAWnW,MACvBxI,OAAO,EACP0e,WAAY,mCAGhBzY,KAAK0Y,WAAWC,YAEd,CAEA,IAMOnhB,EAAO,CACRwD,MAAOgF,KAAK0Y,WAAWnW,MACvB4W,cAAenZ,KAAKmZ,cAAc5W,MAClC6W,cAAepZ,KAAKoZ,cAAc7W,MAClC8W,aAAcrZ,KAAKqZ,aAAa9W,OAMhCrH,EAAOC,KAAKC,UAAU,CAAE5D,SAE9B4C,IAAMiB,KAAK,mBAAoBH,EAlBhB,CACXI,QAAS,CACL,eAAgB,sBAiBvBf,MAAK,SAAAC,GACF,EAAKqF,SAAS,CAAE3I,IAAKsD,EAAIkB,aAI5BhB,OAAM,SAAAC,GACH,EAAKkF,SAAS,CAAE3I,IAAKyD,EAAIe,gB,+BAQ1B,IAAD,SACEoF,EAAYd,KAAKpC,MAAjBkD,QACR,OACE,kBAAC6V,EAAA,EAAD,CAAW7Y,UAAU,OAAOmJ,SAAS,MACnC,kBAACmO,EAAA,EAAD,MACA,yBAAKvU,UAAWC,EAAQoJ,OACtB,kBAAC0G,GAAA,EAAD,CAAQ/P,UAAWC,EAAQ6P,QACzB,kBAAC,KAAD,OAEF,kBAAC9S,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,MAAnC,mBAGA,0BAAM8C,UAAWC,EAAQ2S,KAAMC,SAAU1T,KAAK6R,QAC5C,kBAAC8B,GAAA,GAAD,GACE5V,QAAQ,WACRuC,OAAO,SACPsT,UAAQ,EACRC,WAAS,EACTzc,GAAG,QACHiL,MAAM,gBACN5J,KAAK,QACLuU,aAAa,QACbxE,WAAS,GATX,uDAWY,SAAA0C,GAAK,OAAK,EAAKwN,WAAaxN,KAXxC,sBAYSlL,KAAK3G,MAAM2B,MAAMjB,OAZ1B,2BAaciG,KAAK3G,MAAM2B,MAAMyd,YAb/B,IAeA,kBAAC9E,GAAA,EAAD,CACE5V,QAAQ,WACRuC,OAAO,SACPsT,UAAQ,EACRC,WAAS,EACTpb,KAAK,YACL4J,MAAM,YACN9I,KAAK,YACLnC,GAAG,YACH4V,aAAa,mBACbuM,SAAU,SAAArO,GAAK,OAAK,EAAKsO,cAAgBtO,KAE3C,kBAACyI,GAAA,EAAD,CACE5V,QAAQ,WACRuC,OAAO,SACPsT,UAAQ,EACRC,WAAS,EACTpb,KAAK,YACL4J,MAAM,YACN9I,KAAK,YACLnC,GAAG,YACH4V,aAAa,mBACbuM,SAAU,SAAArO,GAAK,OAAK,EAAKsO,cAAgBtO,KAG3C,kBAACtI,GAAA,EAAD,CACErJ,KAAK,SACLsa,WAAS,EACT9V,QAAQ,YACRC,MAAM,UACN6C,UAAWC,EAAQ8X,QALrB,mBAUC5Y,KAAK3G,MAAMnC,IACZ,kBAAC6W,GAAA,EAAD,CAAOC,SAAS,SAAShO,KAAK3G,MAAMnC,KAElC,KAGA,kBAACgL,EAAA,EAAD,CAAMjD,MAAI,EAAC2X,IAAE,GACX,kBAACiC,GAAA,EAAD,CAAMxY,QAASL,KAAKpC,MAAMkb,QAAS/a,QAAQ,SAA3C,yB,GAhJiBkD,IAAM6B,WA+JxB3B,iBACbC,cApLa,SAAAC,GAAK,MAAK,CACvB6I,MAAO,CACLzI,UAAWJ,EAAMG,QAAQ,GACzBF,QAAS,OACTsL,cAAe,SACfyB,WAAY,UAEdsC,OAAQ,CACNrQ,OAAQe,EAAMG,QAAQ,GACtBuI,gBAAiB1I,EAAM2I,QAAQ+O,UAAUC,MAE3CvF,KAAM,CACJ3J,MAAO,OACPrI,UAAWJ,EAAMG,QAAQ,IAE3BoX,OAAQ,CACNtY,OAAQe,EAAMG,QAAQ,EAAG,EAAG,OAoK9BJ,CAAmB6X,KCzJfQ,G,kDACJ,WAAY7b,GAAQ,IAAD,8BACjB,cAAMA,IACDiU,OAAS,EAAKA,OAAOjT,KAAZ,gBACd,EAAKka,QAAU,EAAKA,QAAQla,KAAb,gBACf,EAAKvF,MAAQ,CACX2B,MAAO,CAAEuH,MAAO,KAAMxI,OAAO,EAAO0e,WAAY,MAChDxd,SAAU,CAAEsH,MAAO,KAAMxI,OAAO,EAAO0e,WAAY,MACnDvhB,IAAK,MAPU,E,+DAkBAoiB,GAAY,IAAD,EACOtZ,KAAKpC,MAAhC7D,EADoB,EACpBA,MADoB,EACbzC,gBACXyC,IAAUuf,EAAUvf,QAEL,eAAbA,EAAM3C,IACR4I,KAAKH,SAAS,CAAE3I,IAAK6C,EAAM7C,MAC3BuO,WAAW,WACTzF,KAAKH,SAAS,CAAC3I,IAAI,QACjB0H,KAAKoB,MAAM,MAEfA,KAAKH,SAAS,CAAE3I,IAAK,U,gCAOxB8I,KAAKH,SACJ,CAAC6Z,OAAQ,Y,6BAKL5T,GAEN,GADAA,EAAMoN,iBACwB,KAA1BlT,KAAK0Y,WAAWnW,MAClBvC,KAAKH,SAAS,CACZ7E,MAAO,CACLuH,MAAOvC,KAAK0Y,WAAWnW,MACvBxI,OAAO,EACP0e,WAAY,mCAGhBzY,KAAK0Y,WAAWC,YAEd,CACF,IAAMnhB,EAAO,CACXwD,MAAOgF,KAAK0Y,WAAWnW,MACvBtH,SAAU+E,KAAKwZ,cAAcjX,OAGzB/G,EAAMwE,KAAKpC,MAAMnC,MAAMjE,GAC7B+D,QAAQC,IAAIA,GACZwE,KAAKpC,MAAMgO,QAAQpT,KAAK,Q,+BAMnB,IAAD,SACN,GAA0B,WAAtBwH,KAAK3G,MAAMqgB,OACb,OAAO,kBAACC,GAAD,CAAoBb,QAAS9Y,KAAK8Y,UAC3C,GAA0B,WAAtB9Y,KAAK3G,MAAMqgB,OACb,OAAO,kBAAC,GAAD,CAAoBZ,QAAS9Y,KAAK8Y,UAJrC,IAMEhY,EAAYd,KAAKpC,MAAjBkD,QACR,OACE,kBAAC6V,EAAA,EAAD,CAAW7Y,UAAU,OAAOmJ,SAAS,MACnC,kBAACmO,EAAA,EAAD,MACA,yBAAKvU,UAAWC,EAAQoJ,OACtB,kBAAC0G,GAAA,EAAD,CAAQ/P,UAAWC,EAAQ6P,QACzB,kBAAC,KAAD,OAEF,kBAAC9S,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,MAAnC,WAGA,0BAAM8C,UAAWC,EAAQ2S,KAAMC,SAAU1T,KAAK6R,QAC5C,kBAAC8B,GAAA,GAAD,GACE5V,QAAQ,WACRuC,OAAO,SACPsT,UAAQ,EACRC,WAAS,EACTzc,GAAG,QACHiL,MAAM,gBACN5J,KAAK,QACLuU,aAAa,QACbxE,WAAS,GATX,uDAWY,SAAA0C,GAAK,OAAK,EAAKwN,WAAaxN,KAXxC,sBAYSlL,KAAK3G,MAAM2B,MAAMjB,OAZ1B,2BAaciG,KAAK3G,MAAM2B,MAAMyd,YAb/B,IAeA,kBAAC9E,GAAA,EAAD,CACE5V,QAAQ,WACRuC,OAAO,SACPsT,UAAQ,EACRC,WAAS,EACTpb,KAAK,WACL4J,MAAM,WACN9I,KAAK,WACLnC,GAAG,WACH4V,aAAa,mBACbuM,SAAU,SAAArO,GAAK,OAAK,EAAKsO,cAAgBtO,KAE3C,kBAAC0O,GAAA,EAAD,CACEC,QAAS,kBAACC,GAAA,EAAD,CAAUvX,MAAM,WAAWvE,MAAM,YAC1CqE,MAAM,gBAER,kBAACO,GAAA,EAAD,CACErJ,KAAK,SACLsa,WAAS,EACT9V,QAAQ,YACRC,MAAM,UACN6C,UAAWC,EAAQ8X,QALrB,WAUC5Y,KAAK3G,MAAMnC,IACZ,kBAAC6W,GAAA,EAAD,CAAOC,SAAS,SAAShO,KAAK3G,MAAMnC,KAElC,KAGF,kBAACgL,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMjD,MAAI,EAAC2X,IAAE,GACX,kBAACiC,GAAA,EAAD,CAAMxY,QAAS,kBAAM,EAAKR,SAAS,CAAC6Z,OAAO,YAAY3b,QAAQ,SAC9D,wBAGH,kBAACmE,EAAA,EAAD,CAAMjD,MAAI,GACR,kBAAC4Z,GAAA,EAAD,CAAMxY,QAAS,kBAAM,EAAKR,SAAS,CAAC6Z,OAAO,YAAY3b,QAAQ,SAC5D,iD,GA7IKkD,IAAM6B,WA+Jf3B,gBALS,SAAA9H,GAAK,MAAK,CAChC/B,gBAAiB+B,EAAMK,KAAKpC,gBAC5ByC,MAAOV,EAAMU,SAKX,CAAE0B,SAAOse,YrBrMc,WACvB,MAAO,CACHxgB,KDLoB,kBsBsMb4H,CAGbC,cAtLa,SAAAC,GAAK,MAAK,CACvB6I,MAAO,CACLzI,UAAWJ,EAAMG,QAAQ,GACzBF,QAAS,OACTsL,cAAe,SACfyB,WAAY,UAEdsC,OAAQ,CACNrQ,OAAQe,EAAMG,QAAQ,GACtBuI,gBAAiB1I,EAAM2I,QAAQ+O,UAAUC,MAE3CvF,KAAM,CACJ3J,MAAO,OACPrI,UAAWJ,EAAMG,QAAQ,IAE3BoX,OAAQ,CACNtY,OAAQe,EAAMG,QAAQ,EAAG,EAAG,OAsK9BJ,CAAmBqY,KCxMfO,G,uKAaF,OACE,kBAAC,KAAD,KACE,6BACE,kBAAC,GAAD,CAAcC,OAAK,EAACC,KAAK,IAAIpc,UAAW0W,GAAW2F,OAAQna,KAAKpC,MAAMlE,KAAKpC,kBAC3E,kBAAC,KAAD,CAAO2iB,OAAK,EAACC,KAAK,SAASpc,UAAW2b,W,GAjB3B3W,aA2BfsX,GAAe,SAAC,GAAD,IAActX,EAAd,EAAGhF,UAAsBqc,EAAzB,EAAyBA,OAAWE,EAApC,8CAEnB,kBAAC,KAAD,iBACMA,EADN,CAEEC,OAAQ,SAAA1c,GAAK,OACXuc,EACI,kBAACrX,EAAclF,GACf,kBAAC,GAAcA,QAQVuD,gBAFS,SAAA9H,GAAK,MAAK,CAAEK,KAAML,EAAMK,QAER6gB,EAAzBpZ,CAAsC6Y,IC3C/CQ,G,kDACJ,WAAY5c,GAAO,OAAC,oBAAD,YAEXA,G,kGAkBL,OACC,kBAAC,GAAD,U,GAtBYkF,aAoCH3B,gBALS,SAAA9H,GAAK,MAAK,CAChCK,KAAML,EAAMK,QAMZ,KAFayH,CAGbqZ,ICpCFC,IAASH,OACL,kBAAC,IAAD,CAAUne,MAAOA,IACf,kBAAC,GAAD,OAEDue,SAASC,eAAe,W","file":"static/js/main.bcb1d9e4.chunk.js","sourcesContent":["\nimport {CURRENT_MONTH} from '../actions/types';\n\nlet temp=new Date();\nlet dataInit=[];\nlet mnonthDay =new Date(temp.getFullYear(), temp.getMonth()-1, 0).getDate();\nfor (let i=1;i<=mnonthDay;i++){\n    dataInit.push( { name: String(i), Fail:0, Success:0 });\n}\nconst initialState = {\n    CurrentMonth:dataInit,\n};\n\nexport default function(state=initialState, action) { \n   // console.log(\"CURRENT_MONTH\",action.payload);\nswitch(action.type){\n   case CURRENT_MONTH:\n   return {\n    CurrentMonth:action.payload,\n   };\n   default:\n       return state;\n}\n}","import {GET_ERRORS, CLEAR_ERRORS} from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    msg: {},\r\n    status: null,\r\n    id: null\r\n}\r\n\r\n\r\nexport default function(state=initialState, action) {\r\n\r\n    switch(action.type){\r\n        case GET_ERRORS:\r\n            return {\r\n                msg: action.payload.msg,\r\n                status: action.payload.status,\r\n                id: action.payload.id\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                msg: {},\r\n                status: null,\r\n                id: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    isAuthenticated: null,\r\n    isLoading: false,\r\n    user: null,\r\n\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: action.payload\r\n            };\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', action.payload.access_token);\r\n            return {\r\n                token: action.payload.access_token,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n            };\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n        case REGISTER_FAIL:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                isLoading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"," import {DATE_SELECT} from '../actions/types';\r\n\r\n\r\n const initialState = {\r\n\r\n     start: new Date(),\r\n     end: new Date(),\r\n     graphDate: new Date(),\r\n\r\n\r\n};\r\n\r\n export default function(state=initialState, action) {\r\n//console.log(\"state\",state);\r\n  switch(action.type){\r\n      case DATE_SELECT:\r\n        return {\r\n                start:action.payload.start,\r\n                end:action.payload.end,\r\n\r\n              };\r\n\r\n\r\n        default:\r\n               return state;\r\n  }\r\n\r\n }\r\n\r\n\r\n","\r\n import {SALT_RETURNS} from '../actions/types';\r\n\r\n\r\n const initialState = {\r\n    saltReturns:null,\r\n};\r\n\r\nexport default function(state=initialState, action) { \r\n//console.log(\"SALT_RETURNS\",action.payload);\r\nswitch(action.type){\r\n    case SALT_RETURNS:\r\n    return {\r\n        saltReturns:action.payload,\r\n    };\r\n    default:\r\n        return state;\r\n }\r\n}","\r\nimport {SAVE_MINION} from '../actions/types';\r\n\r\n\r\n const initialState = {\r\n    saveMinion:[],\r\n};\r\n\r\nexport default function(state=initialState, action) { \r\n //console.log(\"SALT_RETURNS\",action.payload);\r\nswitch(action.type){\r\n    case SAVE_MINION:\r\n    return {\r\n        saveMinion:action.payload,\r\n    };\r\n    default:\r\n        return state;\r\n }\r\n}","\r\nimport {LIST_MINIONS} from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n   listMinions:[],\r\n};\r\n\r\nexport default function(state=initialState, action) { \r\n    //console.log(action.payload,'action.payload')\r\nswitch(action.type){\r\n   case LIST_MINIONS:\r\n    return {\r\n        listMinions:action.payload,\r\n    };\r\n   default:\r\n       return state;\r\n}\r\n}","import {GRAPH_DATE_SELECT} from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n\r\n    graphDate: new Date(),\r\n\r\n\r\n};\r\n\r\nexport default function(state=initialState, action) {\r\n//console.log(\"state\",state);\r\n switch(action.type){\r\n     case GRAPH_DATE_SELECT:\r\n       return {\r\n                graphDate:action.payload.graphDate,\r\n              \r\n             };\r\n\r\n\r\n       default:\r\n              return state;\r\n }\r\n\r\n}\r\n\r\n\r\n"," import {SALT_RETURNS_GRAPH} from '../actions/types';\n\n\n const initialState = {\n    saltReturnsGraph:null,\n};\n\nexport default function(state=initialState, action) { \n\nswitch(action.type){\n    case SALT_RETURNS_GRAPH:\n    return {\n        saltReturnsGraph:action.payload,\n    };\n    default:\n        return state;\n }\n}","\nimport {CURRENT_YEAR} from '../actions/types'; \n\nlet dataInit=[];\n    // let temp=new Date(2019,10);\ndataInit.push( { name: String('January'), Fail:0, Success:0 });\ndataInit.push( { name: String('February'), Fail:0, Success:0 });\ndataInit.push( { name: String('March'), Fail:0, Success:0 });\ndataInit.push( { name: String('April'), Fail:0, Success:0 });\ndataInit.push( { name: String('May '), Fail:0, Success:0 });\ndataInit.push( { name: String('June  '), Fail:0, Success:0 });\ndataInit.push( { name: String('July  '), Fail:0, Success:0 });\ndataInit.push( { name: String('August '), Fail:0, Success:0 });\ndataInit.push( { name: String('September '),Fail:0, Success:0 });\ndataInit.push( { name: String('October '), Fail:0, Success:0 });\ndataInit.push( { name: String('November  '),Fail:0, Success:0 });\ndataInit.push( { name: String('December '), Fail:0, Success:0 });\nconst initialState = {\n    CurrentYear:dataInit,\n};\n\nexport default function(state=initialState, action) { \n   // console.log(\"CURRENT_YEAR\",action.payload);\nswitch(action.type){\n   case CURRENT_YEAR:\n   return {\n    CurrentYear:action.payload,\n   };\n   default:\n       return state;\n}\n}","\nimport {LAST_THREE_MONTHS} from '../actions/types';\n\n\nconst initialState = {\n    LastThreeMonths:{one:[],tow:[],three:[]}\n};\n\nexport default function(state=initialState, action) { \n  //  console.log(\"LAST_THREE_MONTHS\",action.payload);\nswitch(action.type){\n   case LAST_THREE_MONTHS:\n   return {\n    LastThreeMonths:action.payload,\n   };\n   default:\n       return state;\n}\n}","import {combineReducers} from 'redux';\r\nimport errorReducer from './errorReducer';\r\nimport authReducer from './authReducer';\r\nimport reducerDate from './reducersDate';\r\nimport saltReturns  from './saltReturns';\r\nimport saveMinion  from './saveMinion';\r\nimport listMinions  from './listMinions';\r\nimport graphDate  from './graphDate';\r\nimport saltReturnsGraph  from './saltReturnsGraph';\r\nimport CurrentMonth  from './CurrentMonth';\r\nimport CurrentYear  from './CurrentYear';\r\nimport LastThreeMonths  from './LastThreeMonths';\r\nconst appReducer = combineReducers({\r\n  saltReturns:saltReturns,\r\n  saltReturnsGraph:saltReturnsGraph,\r\n  date: reducerDate,\r\n  graphDate:graphDate,\r\n  auth: authReducer,\r\n  error: errorReducer,\r\n  saveMinion:saveMinion,\r\n  listMinions:listMinions,\r\n  CurrentMonth:CurrentMonth,\r\n  CurrentYear:CurrentYear,\r\n  LastThreeMonths:LastThreeMonths,\r\n  \r\n\r\n});\r\n\r\nexport default appReducer;\r\n","export const USER_LOADING = \"USER_LOADING\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\nexport const DATE_SELECT = \"DATE_SELECT\";\r\nexport const SALT_RETURNS = \"SALT_RETURNS\";\r\nexport const SAVE_MINION = \"SAVE_MINION\";\r\nexport const LIST_MINIONS = \"LIST_MINIONS\";\r\nexport const TEAM_LIST = \"TEAM_LIST\";\r\nexport const GRAPH_DATE_SELECT = \"GRAPH_DATE_SELECT\";\r\nexport const SALT_RETURNS_GRAPH = \"SALT_RETURNS_GRAPH\";\r\nexport const CURRENT_MONTH = \"CURRENT_MONTH\";\r\nexport const CURRENT_YEAR = \"CURRENT_YEAR\";\r\nexport const LAST_THREE_MONTHS = \"LAST_THREE_MONTHS\";","import { GET_ERRORS, CLEAR_ERRORS} from './types';\r\n\r\n// Return errors\r\nexport const returnErrors = (msg, status, id = null) => {\r\n    // console.log(msg,status)\r\n    return {\r\n        type: GET_ERRORS,\r\n        payload: { msg, status, id}\r\n    };\r\n};\r\n\r\n// Clear errors\r\nexport const clearErrors = () => {\r\n    return {\r\n        type: CLEAR_ERRORS\r\n    };\r\n};","import axios from 'axios';\r\nimport { returnErrors } from './errorActions';\r\n\r\nimport {\r\nAUTH_ERROR,\r\nLOGIN_SUCCESS,\r\nLOGIN_FAIL,\r\nLOGOUT_SUCCESS,\r\nREGISTER_SUCCESS,\r\nREGISTER_FAIL,\r\nUSER_LOADING,\r\nUSER_LOADED\r\n} from './types';\r\n\r\n\r\n\r\n// Check token & load user\r\nexport const loadUser = () => (dispatch, getState) => {\r\n    // User loading\r\n    dispatch({ type: USER_LOADING });\r\n    axios\r\n      .get('/auth/user', tokenConfig(getState))\r\n      .then(res =>\r\n        dispatch({\r\n          type: USER_LOADED,\r\n          payload: res.data\r\n        })\r\n      )\r\n      .catch(err => {\r\n        if(err.response){\r\n            dispatch(returnErrors(err.response.data, err.response.status));\r\n            dispatch({\r\n                type: AUTH_ERROR\r\n              });\r\n        }\r\n      });\r\n  };\r\n\r\n\r\nexport const register = ({ first_name, last_name, email, password }) => dispatch => {\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    // Request body\r\n    const body = JSON.stringify({first_name, last_name, email, password });\r\n     \r\n    axios.post('/register', body, config)\r\n    .then(res => dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data\r\n    }))\r\n    .catch(err => {\r\n        console.log(err)\r\n        dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        })\r\n    })\r\n}\r\n\r\nexport const login = ({ email, password }) => dispatch => {\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    // Request body\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    axios.post('/auth', body, config)\r\n    .then(res => dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n            \r\n    }))\r\n    .catch(err => {\r\n        dispatch(returnErrors(err.response.data.message, err.response.status, 'LOGIN_FAIL'));\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    })\r\n}\r\n\r\n\r\n// Logout User\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT_SUCCESS\r\n    })\r\n  };\r\n\r\n  \r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n       // Get token from localstorage\r\n       const token = getState().auth.token;\r\n  \r\n       // Headers\r\n       const config = {\r\n           headers: {\r\n               \"Content-type\": \"application/json\"\r\n           }\r\n       }\r\n   \r\n       // If token, add to headers\r\n       if(token) {\r\n          config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n       }\r\n\r\n    return config;\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nimport authReducer from './reducers/authReducer';\r\nimport { loadUser } from './actions/authActions';\r\n\r\nconst initialState = {};\r\n\r\nconst middleWare = [thunk];\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeEnhancers(applyMiddleware(...middleWare))\r\n);\r\n\r\n// store.dispatch(loadUser());\r\nexport default store;","import axios from 'axios';\r\nimport store from '../store'\r\n import { \r\n     DATE_SELECT,\r\n     SALT_RETURNS,\r\n     LIST_MINIONS,\r\n     TEAM_LIST,\r\n     GRAPH_DATE_SELECT,\r\n     SALT_RETURNS_GRAPH,\r\n     CURRENT_MONTH,\r\n     CURRENT_YEAR,\r\n     LAST_THREE_MONTHS\r\n    } from './types';\r\n import data from '../Component/test.json';\r\n // Date is select\r\n export const dateSelect = (start , end) => {\r\n\r\n     return  {\r\n                 type: DATE_SELECT,\r\n                 payload:{start,end}\r\n              };\r\n     // console.log(\"start \",start);\r\n     // console.log(\"end \",end);\r\n\r\n }\r\n export const grapgDateSelect = (graphDate) => {\r\n\r\n    return  {\r\n                type: GRAPH_DATE_SELECT,\r\n                payload:{graphDate}\r\n             };\r\n    // console.log(\"start \",start);\r\n    // console.log(\"end \",end);\r\n\r\n}\r\n export const listMinions =  () => (dispatch, getState) => {\r\n\r\n    axios.get('/get_connected_minions',tokenConfig(getState))\r\n    .then((res) => {\r\n            let minions=[];\r\n            for(let i=0;i<res.data.result.length;i++){\r\n               let minion={name:res.data.result[i]};\r\n               minions.push(minion);\r\n            }\r\n            //console.log(minions,\"minions\");   \r\n            store.dispatch({\r\n                type: TEAM_LIST,\r\n                payload: minions\r\n            });\r\n    })\r\n    .catch(err => {\r\n        console.log(err,\"err get_connected_minions\");\r\n\r\n       });\r\n    // console.log(\"start \",start);\r\n    // console.log(\"end \",end);\r\n\r\n}\r\nexport const teamList =  () => (dispatch, getState) => {\r\n\r\n    axios.get('/get_users',tokenConfig(getState))\r\n    .then((res) => { \r\n            store.dispatch({\r\n                type: TEAM_LIST,\r\n                payload: res.data\r\n            });\r\n    })\r\n    .catch(err => {\r\n        console.log(err);\r\n\r\n       });\r\n    // console.log(\"start \",start);\r\n    // console.log(\"end \",end);\r\n\r\n}\r\n\r\n export const saltReturns =  (str) => (dispatch, getState) => {\r\n     //console.log(\"----------------------storeeeee--------------\\n\",store)\r\n     const time =new Date().toDateString();\r\n        let MonthStart= String(parseInt(store.getState().date.start.getMonth()+1));\r\n        MonthStart=parseInt(MonthStart)<10?\"0\"+MonthStart:MonthStart;\r\n        let yearStart=String(store.getState().date.start.getFullYear());\r\n        let DayStart=store.getState().date.start.getDate();\r\n        DayStart=parseInt(DayStart)<10?\"0\"+DayStart:DayStart;\r\n        let Start=yearStart+String(MonthStart)+String(DayStart)+\"000000000000\"\r\n\r\n        let MonthEnd= String(parseInt(store.getState().date.end.getMonth())+1);\r\n        MonthEnd=parseInt(MonthEnd)<10?\"0\"+MonthEnd:MonthEnd;\r\n        let yearEnd=String(store.getState().date.end.getFullYear());\r\n        let DayEnd=store.getState().date.end.getDate()\r\n        DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n        //let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"000000000000\"\r\n        let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"235959595959\"\r\n        //  let startYear=new Date(year,Month,store.getState().date.start.getDate());\r\n        //  let endYear=store.getState().date.end;\r\n        //  let index = startYear;\r\n // if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\r\n        let minions=[];\r\n// for (let index = startYear; index <= endYear; index.setFullYear(index.getFullYear() + 1)) {\r\n   \r\n     if(str === \"CurrentYear\"){\r\n        \r\n       \r\n        let year=String(new Date().getFullYear());\r\n        let dayEnd=String(new Date(year, 12, 0).getDate());\r\n        DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n        Start= year+\"0101\"+\"000000000000\";\r\n        End= year+\"12\"+dayEnd+\"235959595959\";\r\n     }\r\n     else if(str === \"CurrentMonth\"){\r\n        \r\n       \r\n        let year=String(new Date().getFullYear());\r\n        let dayEnd=String(new Date(year, new Date().getMonth()+1, 0).getDate());\r\n        DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n        let satrtCurrentMonth=(new Date().getMonth()+1);\r\n        satrtCurrentMonth=parseInt( satrtCurrentMonth)<10?\"0\"+ satrtCurrentMonth: satrtCurrentMonth;\r\n        Start= year+satrtCurrentMonth+\"01\"+\"000000000000\";\r\n        End= year+satrtCurrentMonth+dayEnd+\"235959595959\";\r\n     }\r\n     else if(str === \"LastThreeMonths\"){\r\n        \r\n       \r\n        let yearTemp=String(new Date().getFullYear());\r\n        let year =String(new Date(yearTemp, new Date().getMonth()-2, 1).getFullYear());\r\n        let dayEnd=String(new Date(year, new Date().getMonth(), 0).getDate());\r\n        DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n        let satrtMonth=new Date(2020, new Date().getMonth()-2, 1).getMonth();\r\n        satrtMonth=parseInt(satrtMonth)<10?\"0\"+satrtMonth:satrtMonth;\r\n        let endtLastThreeMonths=String(new Date().getMonth());\r\n        endtLastThreeMonths=parseInt( endtLastThreeMonths)<10?\"0\"+ endtLastThreeMonths: endtLastThreeMonths;\r\n        Start= year+satrtMonth+\"01\"+\"000000000000\";\r\n        End= year+endtLastThreeMonths+dayEnd+\"235959595959\";\r\n     }\r\n    console.log(Start,\"Start\")\r\n    console.log(End,\"End\")\r\n     let url='/api/saltReturns/apply/'+Start+\"/\"+End;\r\n     //console.log(\"url\" ,url);\r\n     axios.get(url, tokenConfig(getState))\r\n    .then((res) => {\r\n        console.log(\"pppppppppppppppppppppppppppppppppppppp\")\r\n        minions=minions.concat(res.data);\r\n       // console.log(minions);\r\n       /// if(index === endYear){console.log(res,\"res \");}\r\n        store.dispatch({\r\n            type: SALT_RETURNS,\r\n            payload: minions\r\n        })\r\n        // console.log(res,\"res\");\r\n    })\r\n    .catch(err => {\r\n        console.log(err,\"error in data\");\r\n\r\n       });\r\n   // }\r\n\r\n\r\n       //console.log(store.getState(),\"the store \");\r\n       //console.log(minions,\"minions \");\r\n};\r\n\r\n\r\nexport const saltReturnsForgraph =  (str) => (dispatch, getState) => {\r\n    //console.log(\"----------------------storeeeee--------------\\n\",store)\r\n    const time =new Date().toDateString();\r\n       let MonthStart= String(parseInt(store.getState().graphDate.graphDate.getMonth()+1));\r\n       MonthStart=parseInt(MonthStart)<10?\"0\"+MonthStart:MonthStart;\r\n       let yearStart=String(store.getState().graphDate.graphDate.getFullYear());\r\n       let DayStart=store.getState().graphDate.graphDate.getDate();\r\n       DayStart=parseInt(DayStart)<10?\"0\"+DayStart:DayStart;\r\n       let Start=yearStart+String(MonthStart)+String(DayStart)+\"000000000000\"\r\n\r\n       let MonthEnd= String(parseInt(store.getState().graphDate.graphDate.getMonth())+1);\r\n       MonthEnd=parseInt(MonthEnd)<10?\"0\"+MonthEnd:MonthEnd;\r\n       let yearEnd=String(store.getState().graphDate.graphDate.getFullYear());\r\n       let DayEnd=store.getState().graphDate.graphDate.getDate()\r\n       DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n       //let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"000000000000\"\r\n       let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"235959595959\"\r\n       //  let startYear=new Date(year,Month,store.getState().date.start.getDate());\r\n       //  let endYear=store.getState().date.end;\r\n       //  let index = startYear;\r\n// if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\r\n       let minions=[];\r\n// for (let index = startYear; index <= endYear; index.setFullYear(index.getFullYear() + 1)) {\r\n  \r\n   \r\n    //console.log(Start,\"Start\")\r\n    //console.log(End,\"End\")\r\n    let url='/api/saltReturns/apply/'+Start+\"/\"+End;\r\n    //console.log(\"url\" ,url);\r\n    axios.get(url, tokenConfig(getState))\r\n   .then((res) => {\r\n\r\n       minions=minions.concat(res.data);\r\n      // console.log(minions);\r\n     // console.log(minions,\"minions\")\r\n      /// if(index === endYear){console.log(res,\"res \");}\r\n       store.dispatch({\r\n           type: SALT_RETURNS_GRAPH,\r\n           payload: minions\r\n       })\r\n       // console.log(res,\"res\");\r\n   })\r\n   .catch(err => {\r\n       console.log(err,\"error in data\");\r\n\r\n      });\r\n  // }\r\n\r\n\r\n      //console.log(store.getState(),\"the store \");\r\n      //console.log(minions,\"minions \");\r\n};\r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n   // console.log(\"getstatteeeeeslatl\",getState())\r\n    // Get token from localstorage\r\n    const token = getState().auth.token;\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"multipart/form-data\"\r\n        }\r\n    }\r\n\r\n    // If token, add to headers\r\n    if(token) {\r\n       config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n    }\r\n\r\n return config;\r\n}\r\n\r\nconst getDataFromServer = (str,start,end) => (dispatch, getState) => {\r\n    console.log(\"getDataFronServer\");\r\n        let minions=[];\r\n        let url='/api/saltReturns/apply/'+start+\"/\"+end;\r\n        //console.log(\"url\" ,url);\r\n        axios.get(url, tokenConfig(getState))\r\n        .then((res) => {\r\n          let dataInit=[];\r\n         console.log(str,\"str from server\")\r\n          let temp=new Date();\r\n           let mnonthDay =new Date(temp.getFullYear(), temp.getMonth()-1, 0).getDate();\r\n              for (let i=1;i<=mnonthDay;i++){\r\n               dataInit.push( { name: String(i), Fail:0, Success:0 });\r\n           }\r\n          minions=minions.concat(res.data);\r\n        \r\n          if(minions!==null){\r\n            \r\n            let funSaltReturns=minions\r\n         \r\n          .forEach((item) => {\r\n              let place= (parseInt(item.jid.slice(6,8))-1);\r\n             \r\n             let res=true;\r\n             let flag=0;\r\n            \r\n             if(Array.isArray(item.return)){ res=true;   {res === true ?(dataInit[place].Success++):(dataInit[place].Fail++)}}\r\n             else{\r\n              \r\n                 let dataTemp=Object.entries(item.return).map((e,index,arr) => {\r\n                  if((e[1].result === false) && (flag===0)){\r\n                    dataInit[place].Fail++;\r\n                    flag=1;\r\n                 \r\n                   }\r\n                  if(index===arr.length-1 && flag === 0){\r\n                    dataInit[place].Success++;\r\n                  }\r\n             \r\n               \r\n                });\r\n        \r\n             }\r\n           \r\n            })\r\n            store.dispatch({\r\n                type: str,\r\n                payload: dataInit\r\n            });\r\n            }\r\n            \r\n        \r\n            \r\n        })\r\n        .catch(err => {\r\n          console.log(err,\"error in data\");\r\n        \r\n         });\r\n    \r\n    }\r\n    \r\n    \r\nexport const CurrentMonthFun =  (str) => (dispatch, getState) => {\r\n    console.log(\"CurrentMonthFun\");\r\n    let year=String(new Date().getFullYear());\r\n    let dayEnd=String(new Date(year, new Date().getMonth()+1, 0).getDate());\r\n    dayEnd=parseInt(dayEnd)<10?\"0\"+dayEnd:dayEnd;\r\n    let satrtCurrentMonth=(new Date().getMonth()+1);\r\n    satrtCurrentMonth=parseInt( satrtCurrentMonth)<10?\"0\"+ satrtCurrentMonth: satrtCurrentMonth;\r\n    let start= year+satrtCurrentMonth+\"01\"+\"000000000000\";\r\n    let end= year+satrtCurrentMonth+dayEnd+\"235959595959\";\r\n    let minions=[];\r\n    let url='/api/saltReturns/apply/'+start+\"/\"+end;\r\n    //console.log(\"url\" ,url);\r\n    axios.get(url, tokenConfig(getState))\r\n    .then((res) => {\r\n      let dataInit=[];\r\n     console.log(str,\"str from server\")\r\n      let temp=new Date();\r\n       let mnonthDay =new Date(temp.getFullYear(), temp.getMonth()-1, 0).getDate();\r\n          for (let i=1;i<=mnonthDay;i++){\r\n           dataInit.push( { name: String(i), Fail:0, Success:0 });\r\n       }\r\n      minions=minions.concat(res.data);\r\n    \r\n      if(minions!==null){\r\n        \r\n        let funSaltReturns=minions\r\n     \r\n      .forEach((item) => {\r\n          let place= (parseInt(item.jid.slice(6,8))-1);\r\n         \r\n         let res=true;\r\n         let flag=0;\r\n        \r\n         if(Array.isArray(item.return)){ res=true;   {res === true ?(dataInit[place].Success++):(dataInit[place].Fail++)}}\r\n         else{\r\n          \r\n             let dataTemp=Object.entries(item.return).map((e,index,arr) => {\r\n              if((e[1].result === false) && (flag===0)){\r\n                dataInit[place].Fail++;\r\n                flag=1;\r\n             \r\n               }\r\n              if(index===arr.length-1 && flag === 0){\r\n                dataInit[place].Success++;\r\n              }\r\n         \r\n           \r\n            });\r\n    \r\n         }\r\n       \r\n        })\r\n        store.dispatch({\r\n            type: CURRENT_MONTH,\r\n            payload: dataInit\r\n        });\r\n        }\r\n        \r\n    \r\n        \r\n    })\r\n    .catch(err => {\r\n      console.log(err,\"error in data\");\r\n    \r\n     });\r\n          \r\n  \r\n\r\n}\r\n\r\n\r\n\r\nexport const CurrentYearFun =  (str) => (dispatch, getState) => {\r\n\r\n        let year=String(new Date().getFullYear());\r\n        let dayEnd=String(new Date(year, 12, 0).getDate());\r\n        dayEnd=parseInt(dayEnd)<10?\"0\"+dayEnd:dayEnd;\r\n        let start= year+\"0101\"+\"000000000000\";\r\n        let end= year+\"12\"+dayEnd+\"235959595959\";\r\n\r\n       \r\n\r\n\r\n\r\n            let minions=[];\r\n            let url='/api/saltReturns/apply/'+start+\"/\"+end;\r\n            //console.log(\"url\" ,url);\r\n            axios.get(url, tokenConfig(getState))\r\n            .then((res) => {\r\n              \r\n\r\n                let dataInit=[];\r\n                // let temp=new Date(2019,10);\r\n            \r\n                dataInit.push( { name: String('January'), Fail:0, Success:0 });\r\n                dataInit.push( { name: String('February'), Fail:0, Success:0 });\r\n                dataInit.push( { name: String('March'), Fail:0, Success:0 });\r\n                dataInit.push( { name: String('April'), Fail:0, Success:0 });\r\n                dataInit.push( { name: String('May '), Fail:0, Success:0 });\r\n                dataInit.push( { name: String('June  '), Fail:0, Success:0 });\r\n                dataInit.push( { name: String('July  '), Fail:0, Success:0 });\r\n                dataInit.push( { name: String('August '), Fail:0, Success:0 });\r\n                dataInit.push( { name: String('September '),Fail:0, Success:0 });\r\n                dataInit.push( { name: String('October '), Fail:0, Success:0 });\r\n                dataInit.push( { name: String('November  '),Fail:0, Success:0 });\r\n                dataInit.push( { name: String('December '), Fail:0, Success:0 });\r\n             console.log(str,\"str from server\")\r\n              //let temp=new Date();\r\n            \r\n              minions=minions.concat(res.data);\r\n            \r\n              if(minions!==null){\r\n                \r\n                let funSaltReturns=minions\r\n             \r\n              .forEach((item) => {\r\n                let str=item.jid.slice(0,4)+\"-\"+String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\r\n                    let time=new Date(str);\r\n                    let place=time.getMonth();\r\n                    let res=true;\r\n                    let flag=0;\r\n                \r\n                 if(Array.isArray(item.return)){ res=true;   {res === true ?(dataInit[place].Success++):(dataInit[place].Fail++)}}\r\n                 else{\r\n                  \r\n                     let dataTemp=Object.entries(item.return).map((e,index,arr) => {\r\n                      if((e[1].result === false) && (flag===0)){\r\n                        dataInit[place].Fail++;\r\n                        flag=1;\r\n                     \r\n                       }\r\n                      if(index===arr.length-1 && flag === 0){\r\n                        dataInit[place].Success++;\r\n                      }\r\n                 \r\n                   \r\n                    });\r\n            \r\n                 }\r\n               \r\n                })\r\n                store.dispatch({\r\n                    type: CURRENT_YEAR,\r\n                    payload: dataInit\r\n                });\r\n                }\r\n                \r\n            \r\n                \r\n            })\r\n            .catch(err => {\r\n              console.log(err,\"error in data\");\r\n            \r\n             });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            \r\n            // .forEach((item) => {\r\n            //     //     let str=item.jid.slice(0,4)+\"-\"+String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\r\n            //     //     let time=new Date(str);\r\n            //     //     let place=time.getMonth();\r\n            //     //     let res=true;\r\n            //     //     let flag=0;\r\n                 \r\n            //     //     if(Array.isArray(item.return)){ res=true;   {res === true ?(dataInit[place].Success++):(dataInit[place].Fail++)}}\r\n            //     //     else{\r\n                      \r\n            //     //         let dataTemp=Object.entries(item.return).map((e,index,arr) => {\r\n            //     //           if(e[1].result === false && flag===0){\r\n            //     //            dataInit[place].Fail++;\r\n            //     //            flag=1;\r\n            //     //            //break;\r\n            //     //           }\r\n            //     //          if(index===arr.length-1 && flag === 0){\r\n            //     //            dataInit[place].Success++;\r\n            //     //          }\r\n                       \r\n                      \r\n            //     //        });\r\n                      \r\n                       \r\n                    \r\n            //     //     }\r\n            \r\n            //     //   })\r\n   \r\n\r\n}\r\n\r\n\r\n\r\nexport const LastThreeMonthsfun = (str,start,end) => (dispatch, getState) => {\r\n   \r\n    let yearTemp=String(new Date().getFullYear());\r\n    let year =String(new Date(yearTemp, new Date().getMonth()-2, 1).getFullYear());\r\n    let dayEnd=String(new Date(year, new Date().getMonth(), 0).getDate());\r\n\r\n    dayEnd=parseInt(dayEnd)<10?\"0\"+dayEnd:dayEnd;\r\n\r\n    let satrtMonth=new Date(year, new Date().getMonth()-2, 1).getMonth();\r\n\r\n    satrtMonth=parseInt(satrtMonth)<10?\"0\"+satrtMonth:satrtMonth;\r\n\r\n    let endtLastThreeMonths=String(new Date().getMonth());\r\n    \r\n    endtLastThreeMonths=parseInt( endtLastThreeMonths)<10?\"0\"+ endtLastThreeMonths: endtLastThreeMonths;\r\n    start= year+satrtMonth+\"01\"+\"000000000000\";\r\n    end= year+endtLastThreeMonths+dayEnd+\"235959595959\";\r\n\r\n   // getDataFronServer(LAST_THREE_MONTHS,start,end);\r\n\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};","import React from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {dateSelect} from '../actions/date';\r\nimport { LineChart,\r\n         Line,\r\n         XAxis,\r\n         YAxis,\r\n         Label,\r\n         ResponsiveContainer,\r\n         Tooltip,\r\n         Legend,\r\n         CartesianGrid  \r\n} from 'recharts';\r\nimport store from '../store';\r\nimport Title from './Title';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { saltReturnsForgraph } from '../actions/date';\r\nimport { Store } from '@material-ui/icons';\r\nimport axios from 'axios';\r\n\r\n\r\nconst time =(str)=>{\r\n  const year =str.slice(0,4);\r\n  const month =String(parseInt(str.slice(4,6)));\r\n  const day =str.slice(6,8);\r\n  const hower= str.slice(8,10);\r\n\r\n  const minet=str.slice(10,12);\r\n  return String(hower)+\":\"+String(minet);\r\n\r\n}\r\nfunction createData(time,Success,Fail, amount) {\r\n  return { time,Success,Fail, amount };\r\n}\r\nconst demoOnClick= (e)=>{\r\n  // if(e){if(e.activeLabel){console.log(e.activeLabel);}}\r\n};\r\nconst INIT_DATA = [\r\n  createData('00:00',0,0, 0),\r\n  createData('03:00',0,0, 0),\r\n  createData('06:00',0,0, 0),\r\n  createData('09:00',0,0, 0),\r\n  createData('12:00',0,0, 0),\r\n  createData('15:00',0,0, 0),\r\n  createData('18:00',0,0, 0),\r\n  createData('21:00',0,0, 0),\r\n  createData('24:00',0,0, 0),\r\n];\r\n\r\nconst parseNumber= (str)=>{\r\n  let hower= parseInt(str.slice(8,10));\r\n  if(hower<=3){return \"03:00\"};\r\n  if(hower<=6){return \"06:00\"};\r\n  if(hower<=9){return \"09:00\"};\r\n  if(hower<=12){return \"12:00\"};\r\n  if(hower<=15){return \"15:00\"};\r\n  if(hower<=18){return \"18:00\"};\r\n  if(hower<=21){return \"21:00\"};\r\n  if(hower<=24){return \"24:00\"};\r\n  return \"00:00\";\r\n \r\n};\r\n const tokenConfig = getState => {\r\n  // console.log(\"getstatteeeeeslatl\",getState())\r\n   // Get token from localstorage\r\n   const token = store.getState().auth.token;\r\n\r\n   // Headers\r\n   const config = {\r\n       headers: {\r\n           \"Content-type\": \"multipart/form-data\"\r\n       }\r\n   }\r\n\r\n   // If token, add to headers\r\n   if(token) {\r\n      config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n   }\r\n\r\nreturn config;\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    marginLeft: theme.spacing(50),\r\n    marginTop:theme.spacing(11),\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n});\r\n\r\n class Chart extends React.PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.dataInit = this.dataInit.bind(this);\r\n    this.state = {\r\n      graphDate: new Date(),\r\n      flag:true,\r\n      minions:null,\r\n      graphIsPrepared:true,\r\n      data:  [{ time:\"00:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"03:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"06:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"09:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"12:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"15:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"18:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"21:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"24:00\",Success:0,Fail:0, amount:0 },]\r\n  };\r\n  this.dataInit();\r\n}\r\ndataInit(){\r\n  \r\n  let MonthStart= String(parseInt(store.getState().graphDate.graphDate.getMonth()+1));\r\n  MonthStart=parseInt(MonthStart)<10?\"0\"+MonthStart:MonthStart;\r\n  let yearStart=String(store.getState().graphDate.graphDate.getFullYear());\r\n  let DayStart=store.getState().graphDate.graphDate.getDate();\r\n  DayStart=parseInt(DayStart)<10?\"0\"+DayStart:DayStart;\r\n  let Start=yearStart+String(MonthStart)+String(DayStart)+\"000000000000\"\r\n\r\n  let MonthEnd= String(parseInt(store.getState().graphDate.graphDate.getMonth())+1);\r\n  MonthEnd=parseInt(MonthEnd)<10?\"0\"+MonthEnd:MonthEnd;\r\n  let yearEnd=String(store.getState().graphDate.graphDate.getFullYear());\r\n  let DayEnd=store.getState().graphDate.graphDate.getDate()\r\n  DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n  //let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"000000000000\"\r\n  let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"235959595959\"\r\n  //  let startYear=new Date(year,Month,store.getState().date.start.getDate());\r\n  //  let endYear=store.getState().date.end;\r\n  //  let index = startYear;\r\n// if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\r\n  let minions=[];\r\n// for (let index = startYear; index <= endYear; index.setFullYear(index.getFullYear() + 1)) {\r\n\r\n\r\n//console.log(Start,\"Start\")\r\n//console.log(End,\"End\")\r\nlet url='/api/saltReturns/apply/'+Start+\"/\"+End;\r\n//console.log(\"url\" ,url);\r\naxios.get(url, tokenConfig(store.getState()))\r\n.then((res) => {\r\n  let tempArray=[\r\n    { time:\"00:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"03:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"06:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"09:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"12:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"15:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"18:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"21:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"24:00\",Success:0,Fail:0, amount:0 },\r\n  ];\r\n  minions=minions.concat(res.data);\r\n //console.log(minions,\"minions\");\r\n// console.log(minions,\"minions\")\r\n /// if(index === endYear){console.log(res,\"res \");}\r\n  this.state.minions=minions;\r\n  //console.log( this.state.minions,\" this.state.minions\");\r\n  if(this.state.minions!==null)\r\n  {\r\n        // let MonthEnd= String(parseInt(store.getState().date.end.getMonth())+1);\r\n        // MonthEnd=parseInt(MonthEnd)<10?\"0\"+MonthEnd:MonthEnd;\r\n        // let yearEnd=String(store.getState().date.end.getFullYear());\r\n        // let DayEnd=store.getState().date.end.getDate()\r\n        // DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n        // let EndStart=parseInt(yearEnd+String(MonthEnd)+String(DayEnd)+\"000000000000\");\r\n\r\n        // let End=parseInt(yearEnd+String(MonthEnd)+String(DayEnd)+\"235959595959\")\r\n  \r\n      this.state.minions\r\n    \r\n      //  .filter((item)=>{\r\n    \r\n      //     if(parseInt(item.jid)>=EndStart && parseInt(item.jid)<=End){return item}\r\n      //   })\r\n        .forEach(item => {\r\n          let res=true;\r\n          let flag=0;\r\n         \r\n          if(Array.isArray(item.return)){ res=true;}\r\n          else{\r\n           \r\n              let dataTemp=Object.entries(item.return).map((e,index,arr) => {\r\n               if((e[1].result === false) && (flag===0)){\r\n                  res=false\r\n                 flag=1;\r\n              \r\n                }\r\n               if(index===arr.length-1 && flag === 0){\r\n                  flag=1;\r\n                  res=true;\r\n                \r\n               \r\n               }\r\n          \r\n            \r\n             });\r\n     \r\n          }\r\n        if(parseNumber(item.jid)===\"03:00\")\r\n        { res === true ?(tempArray[1].Success++):(tempArray[1].Fail++)};\r\n        if(parseNumber(item.jid)===\"06:00\")\r\n        { res === true ?(tempArray[2].Success++):(tempArray[2].Fail++)};\r\n        if(parseNumber(item.jid)===\"09:00\")\r\n        { res === true ?(tempArray[3].Success++):(tempArray[3].Fail++)};\r\n        if(parseNumber(item.jid)===\"12:00\")\r\n        { res === true ?(tempArray[4].Success++):(tempArray[4].Fail++)};\r\n        if(parseNumber(item.jid)===\"15:00\")\r\n        { res === true ?(tempArray[5].Success++):(tempArray[5].Fail++)};\r\n        if(parseNumber(item.jid)===\"18:00\")\r\n        { res === true ?(tempArray[6].Success++):(tempArray[6].Fail++)};\r\n        if(parseNumber(item.jid)===\"21:00\")\r\n        { res === true ?(tempArray[7].Success++):(tempArray[7].Fail++);};\r\n        if(parseNumber(item.jid)===\"24:00\")\r\n        { res === true ?(tempArray[8].Success++):(tempArray[8].Fail++)};\r\n      \r\n        \r\n        });\r\n    }\r\n    //console.log(tempArray,\"tempArray\")\r\n    this.state.data=tempArray;\r\n    this.setState({data:tempArray,graphIsPrepared:true})\r\n   // console.log(this.state.data,\"this.state.data\")\r\n   this.forceUpdate();\r\n}\r\n)\r\n.catch(err => {\r\n  console.log(err,\"error in data\");\r\n\r\n });\r\n// }\r\n}\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.dataInit();\r\n    \r\n}\r\n  \r\n// shouldComponentUpdate(nextState){\r\n// console.log('shouldComponentUpdate',this.state.flag)\r\n//   if(this.state.flag===true){\r\n//     this.state.data=nextState.data;\r\n//     this.state.flag=false;\r\n  \r\n//     return false;\r\n//   }\r\n//   this.state.flag=true;\r\n//   return true;\r\n// }  \r\n\r\n\r\n\r\n \r\n  render(){\r\n   // console.log(\"render\");\r\n    //console.log(this.state,\"this.state\");\r\n   // console.log(this.state.graphIsPrepared,\"pppppppppppppppp\")\r\n    if(this.state.graphIsPrepared===true){\r\n      return(\r\n        <React.Fragment>\r\n        {/*<Title style={{paddingLeft:5}}>{(this.state.start.toLocaleDateString() === this.state.end.toLocaleDateString())?this.state.start.toLocaleDateString():this.state.start.toLocaleDateString() + ' - '+ this.state.end.toLocaleDateString()}</Title>*/}\r\n         {<Title style={{paddingLeft:5}}> {store.getState().graphDate.graphDate.toLocaleDateString()}</Title>}\r\n        <ResponsiveContainer>\r\n            <LineChart\r\n              onClick={demoOnClick}\r\n              data={ this.state.data}\r\n              margin={{top: 16,right: 16,bottom: 0,left: 24,}}>\r\n            <XAxis dataKey=\"time\" /><YAxis >{/* <Label angle={270} position=\"left\" style={{ textAnchor: 'middle' }}>(A/T)</Label>*/ }   \r\n            </YAxis>\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"Success\" stroke=\"#82ca9d\" onClick={demoOnClick}/>\r\n            <Line type=\"monotone\" dataKey=\"Fail\" stroke=\"#ff6666\" onClick={demoOnClick} />\r\n           \r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </React.Fragment>\r\n      )\r\n    }\r\n else{\r\n   return(\r\n        <div className={this.props.classes.root}>\r\n        <CircularProgress />\r\n        </div>\r\n   )\r\n }\r\n   \r\n    \r\n }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    saltReturnsGraph: state.saltReturnsGraph,\r\n    graphDate: state.graphDate \r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Chart));","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport {DATE_SELECT} from \"../actions/types\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {Typography,Button,Grid} from '@material-ui/core';\r\nimport Title from './Title';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {KeyboardDatePicker,MuiPickersUtilsProvider,DatePicker} from \"@material-ui/pickers\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\n//import DateTime from 'react-datetime';\r\nimport {dateSelect} from '../actions/date.js';\r\nimport store from '../store';\r\nimport { saltReturns } from '../actions/date';\r\n// <DatePicker\r\n// disableFuture\r\n// openTo=\"year\"\r\n// id=\"date-picker-dialog\"\r\n// margin=\"normal\"\r\n// format=\"dd/MM/yyyy\"\r\n// label=\"Start\"\r\n// views={[\"year\", \"month\", \"date\"]}\r\n// KeyboardButtonProps={{\r\n//   'aria-label': 'change date',\r\n// }}\r\n\r\n// />\r\n\r\n\r\n\r\n\r\n\r\n class Deposits extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDateChangeStart = this.handleDateChangeStart.bind(this);\r\n    this.handleDateChangeEnd = this.handleDateChangeEnd.bind(this);\r\n    this.dateIsChanged = this.dateIsChanged.bind(this);\r\n  \r\n    this.state={start:this.props.date.start , end:this.props.date.end ,date:null};\r\n  \r\n  }\r\n//   shouldComponentUpdate(nextProps, nextState) {\r\n//   return this.state.value != nextState.value;\r\n// }\r\n  handleDateChangeStart(date){\r\n    this.setState({booleanStart:true,start:date});\r\n  }\r\n    \r\n  \r\n  handleDateChangeEnd (date){\r\n   this.setState({booleanEnd:true,end:date});\r\n  }\r\n \r\n  dateIsChanged(){\r\n      let start=this.state.start;\r\n      let end=this.state.end;\r\n     \r\n      store.dispatch({\r\n        type: DATE_SELECT,\r\n        payload: {start:start,end:end}\r\n       } );\r\n       store.dispatch(saltReturns());\r\n\r\n\r\n      // console.log(\"store\",store.getState());\r\n  }\r\n \r\n  //onChange = date => this.setState({ date })\r\n \r\n  render () {\r\n    return (\r\n      <React.Fragment style={{marginTop:-5}}>\r\n        <Typography  variant=\"h4\" >\r\n\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n            <Grid container justify=\"space-around\">\r\n            <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Table Start Date\"\r\n            format=\"dd/MM/yyyy\"\r\n            value={this.state.start}\r\n            onChange={(date)=>{this.handleDateChangeStart(date)}}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n\r\n          <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"Table End Date\"\r\n          format=\"dd/MM/yyyy\"\r\n          value={this.state.end}\r\n          onChange={(date)=>{this.handleDateChangeEnd(date)}}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n      \r\n      <Typography style={{flex: 1,paddingTop:12}}>\r\n      \r\n       \r\n       \r\n        <Button\r\n        variant=\"outlined\" color=\"primary\"\r\n        onClick={this.dateIsChanged}\r\n        endIcon={ <SearchIcon>Search</SearchIcon>}\r\n      >\r\n      Search\r\n      </Button>\r\n      </Typography>\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n\r\n        </Typography>\r\n       \r\n      </React.Fragment>\r\n    );\r\n  }\r\n    \r\n}\r\n\r\n const mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    date: state.date\r\n  }\r\n}\r\nfunction matchDispatchToProps(dispatch){\r\n  return bindActionCreators({dateSelect: dateSelect}, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps)(Deposits);","import axios from 'axios';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport React, { Component } from \"react\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport MaterialTable from 'material-table';\r\nimport {SALT_RETURNS} from \"../actions/types\";\r\nimport store from '../store';\r\nimport { saltReturns } from '../actions/date';\r\nimport { forwardRef } from 'react';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n    Typography,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    AddBox,\r\n    ArrowDownward,\r\n    Check,\r\n    ChevronLeft,\r\n    ChevronRight,\r\n    Clear,\r\n    DeleteOutline,\r\n    Edit,\r\n    FilterList,\r\n    FirstPage,\r\n    LastPage,\r\n    Remove,\r\n    SaveAlt,\r\n    Search,\r\n    ViewColumn,\r\n\r\n\r\n}from '@material-ui/icons';\r\n//import data from './f.json';\r\nimport data from '../Component/test.json';\r\n\r\nconst time =(str)=>{\r\n    const hower= str.slice(8,10);\r\n    const minet=str.slice(10,12);\r\n    return String(hower)+\":\"+String(minet);\r\n\r\n}\r\n\r\nconst  date=(str)=>{\r\n    const year =str.slice(0,4);\r\n    const month =String(parseInt(str.slice(4,6)));\r\n    const day =str.slice(6,8);\r\n   \r\n    return String(day)+\"/\"+String(month)+\"/\"+String(year);\r\n\r\n}\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) =>  <Edit {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\nconst dataColumns =[\r\n    { title: 'status', field: 'status',\r\n        //type: 'boolean'\r\n        cellStyle: x=>({\r\n            color:(x==='Success')?'#208000':'#ff0000'})\r\n\r\n    },\r\n    { title: 'Name', field: 'name',\r\n    },\r\n    { title: 'Date', field: 'date' },\r\n    { title: 'Time', field: 'time',\r\n        //type: 'time'\r\n    },\r\n\r\n\r\n\r\n]\r\n\r\nconst dataTable=[]\r\nconst styles = theme => ({\r\n    root:{\r\n        height: 240,\r\n        flexGrow: 1,\r\n        maxWidth: 900,\r\n        fontSize: 20,\r\n        \r\n    },\r\n  //  TreeStyle: ,\r\n      text:{\r\n        paddingLeft: theme.spacing(6),\r\n        fontSize: 16,\r\n       \r\n\r\n      },\r\n      title:{\r\n        fontSize: 16,\r\n        paddingLeft:theme.spacing(2)\r\n      },\r\n      TreeItem:{\r\n        marginTop:theme.spacing(3.5),\r\n        flexGrow: 1,\r\n        maxWidth: 950,\r\n        fontSize: 18,\r\n      },\r\n      TreeItemText:{\r\n        fontSize: 18,\r\n      },\r\n      \r\n});\r\n//console.log(data,'cccccccccccccccccccccccccccccccccccccccccc')\r\n// const m=JSON.parse(\"'[\"+data+\"]'\");\r\nconst x=Object.entries(data[0].return).map((e) => ( { [e[0]]: e[1] } ));\r\n//console.log(data,'data');\r\n//console.log(Object.entries(data[0].return),'llll')\r\n//console.log(x,'cccccccccccccccccccccccccccccccccccccccccc')\r\nclass Orders extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.selestMinion=this.selestMinion.bind(this);\r\n        this.handleClickOpen=this.handleClickOpen.bind(this);\r\n        this.handleClose=this.handleClose.bind(this);\r\n        store.dispatch(saltReturns());\r\n        \r\n        this.state = {\r\n            saltReturns: dataTable,\r\n            Returns:null,\r\n            dialogOpen:false,\r\n            minion:\"\",\r\n            data:[],\r\n            flag:false,\r\n        }\r\n       \r\n    }\r\n \r\n    componentWillMount(){\r\n       // console.log('componentWillMount');\r\n        if(store.getState().saltReturns.saltReturns!==null)\r\n        {\r\n            setTimeout(()=>{  \r\n                const start=store.getState().date.start;\r\n                let startTemp=new Date(start.getTime());\r\n            \r\n                startTemp.setHours(0,0,0);\r\n                const end=store.getState().date.end;\r\n                let endTemp=new Date(end.getTime());\r\n            \r\n            // console.log(endTemp,'new Date(end.getTime());')\r\n            // console.log(start,'store.getState().date.start;')\r\n                let saltTemp=store.getState().saltReturns.saltReturns\r\n                // .filter((item)=>{return item.full_ret.fun === \"state.apply\"})\r\n                // .filter((item)=>{\r\n                //     let str=item.jid.slice(0,4)+\"-\"+ String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\r\n                //     let time=new Date(str);\r\n                //     if(time >= startTemp && time<= endTemp){return item;}\r\n                // })\r\n                .map((item)=>{\r\n                    let res=true;\r\n                    let flag=0;\r\n                   \r\n                    if(Array.isArray(item.return)){ res=true;}\r\n                    else{\r\n                     \r\n                        let dataTemp=Object.entries(item.return).map((e,index,arr) => {\r\n                         if((e[1].result === false) && (flag===0)){\r\n                            res=false\r\n                           flag=1;\r\n                        \r\n                          }\r\n                         if(index===arr.length-1 && flag === 0){\r\n                            flag=1;\r\n                            res=true;\r\n                          \r\n                         \r\n                         }\r\n                    \r\n                      \r\n                       });\r\n               \r\n                    }\r\n                    return {\r\n        \r\n                        status:(res=== true)?'Success':'Fail',\r\n                        name:item.minion,\r\n                        date:date(item.jid),\r\n                        id:item._id,\r\n                        time: time(item.jid),\r\n        \r\n                        // return:item.return\r\n                    };}\r\n                )\r\n            \r\n                this.setState({saltReturns:saltTemp});\r\n            // console.log(this.state.saltReturns,'setTimeout(()=>{this.setState({saltReturns:saltTemp});}, 600);');\r\n            }, 500);\r\n            //setTimeout(()=>{;}, 1000);\r\n        }\r\n    }\r\n    selestMinion(event, rowData){\r\n        console.log(\"table - 213\");\r\n        //console.log(rowData, \" equl\");\r\n        if(rowData.status==='Success'){return}\r\n        let res = store.getState().saltReturns.saltReturns\r\n            .filter((item)=>{\r\n            //if((item.full_ret.success===false) && (item._id === rowData.id))\r\n            if((item._id === rowData.id))\r\n\r\n                     { \r\n                         let temp =Object.entries(item.return);\r\n                         if(temp[0][0]===\"0\"){ \r\n                             this.setState({flag:true,data:temp[0]});\r\n                             console.log(\"table - 225\");\r\n                            }\r\n                         else{\r\n                             let res=Object.entries(item.return).map((e) => ( { [e[0]]: e[1] } ));\r\n                             this.setState({data:res})\r\n                             console.log(\"table - 230\");\r\n                             }\r\n                         this.setState({dialogOpen:true,minion:item});\r\n                         console.log(\"table - 230\");\r\n                         return item;\r\n                    }\r\n                \r\n            \r\n            })\r\n\r\n\r\n    }\r\n    handleClickOpen () {\r\n        this.setState({dialogOpen:true});\r\n    };\r\n\r\n    handleClose () {\r\n        this.setState({dialogOpen:false});\r\n    };\r\n    componentWillReceiveProps(nextProps,nextState) {\r\n        //console.log('componentWillReceiveProps');\r\n        // console.log(store.getState(),\";;;;;;;;;;\");\r\n        if(store.getState().saltReturns.saltReturns!==null)\r\n        {\r\n            setTimeout(()=>{  \r\n                const start=store.getState().date.start;\r\n                let startTemp=new Date(start.getTime());\r\n            \r\n                startTemp.setHours(0,0,0);\r\n                const end=store.getState().date.end;\r\n                let endTemp=new Date(end.getTime());\r\n            \r\n            // console.log(endTemp,'new Date(end.getTime());')\r\n            // console.log(start,'store.getState().date.start;')\r\n                let saltTemp=store.getState().saltReturns.saltReturns\r\n                // .filter((item)=>{return item.full_ret.fun === \"state.apply\"})\r\n                // .filter((item)=>{\r\n                //     let str=item.jid.slice(0,4)+\"-\"+ String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\r\n                //     let time=new Date(str);\r\n                //     if(time >= startTemp && time<= endTemp){return item;}\r\n                // })\r\n                .map((item)=>{\r\n                    let res=true;\r\n                    let flag=0;\r\n                   \r\n                    if(Array.isArray(item.return)){ res=true;}\r\n                    else{\r\n                     \r\n                        let dataTemp=Object.entries(item.return).map((e,index,arr) => {\r\n                         if((e[1].result === false) && (flag===0)){\r\n                            res=false\r\n                           flag=1;\r\n                        \r\n                          }\r\n                         if(index===arr.length-1 && flag === 0){\r\n                            flag=1;\r\n                            res=true;\r\n                          \r\n                         \r\n                         }\r\n                    \r\n                      \r\n                       });\r\n               \r\n                    }\r\n         \r\n                    return {\r\n        \r\n                        status:(res=== true)?'Success':'Fail',\r\n                        name:item.minion,\r\n                        date:date(item.jid),\r\n                        id:item._id,\r\n                        time: time(item.jid),\r\n        \r\n                        // return:item.return\r\n                    };}\r\n                )\r\n            \r\n                this.setState({saltReturns:saltTemp});\r\n            // console.log(this.state.saltReturns,'setTimeout(()=>{this.setState({saltReturns:saltTemp});}, 600);');\r\n            }, 500);\r\n            //setTimeout(()=>{;}, 1000);\r\n        }\r\n\r\n\r\n\r\n    }\r\n    // componentWillUpdate() {\r\n  \r\n    // }\r\n    render(){\r\n\r\n        return (\r\n            <div>\r\n                <MaterialTable\r\n                    title=\"Minions Table\"\r\n                    columns={dataColumns}\r\n                    data={ this.state.saltReturns}\r\n                    icons={tableIcons}\r\n                    onRowClick={((evt, selectedRow) => this.setState({ selectedRow }))}\r\n\r\n\r\n                    options={{\r\n                        exportButton: true,\r\n                        filtering: true,\r\n\r\n                        //rowStyle: rowData => ({\r\n                        // color: (rowData.name==='su') ? '#daa9d9' : '#ff1a1a'})\r\n\r\n                    }}\r\n                    actions={[\r\n                        {\r\n\r\n                            icon: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n                            tooltip: 'View commands',\r\n                            onClick: (event, rowData) => {this.selestMinion(event, rowData)}\r\n                        }\r\n                    ]\r\n                    }\r\n                />\r\n\r\n                <Dialog\r\n                    open={this.state.dialogOpen}\r\n                    onClose={this.handleClose}\r\n\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                    maxWidth=\"lg\"\r\n                    scroll=\"paper\"\r\n                    aria-labelledby=\"confirmation-dialog-title\"\r\n                >\r\n\r\n                    <DialogTitle id=\"alert-dialog-title\">\r\n\r\n                        <Typography style={{color:\"#ff6666\",fontSize:18} }>\r\n                            {\"Failed \"}\r\n                            {this.state.minion.minion}\r\n                            {\" at date \"}\r\n                            {   (this.state.minion !== undefined )? (date(String(this.state.minion.jid))): \" \"}\r\n                            {' at hour '}\r\n                            {(this.state.minion !== undefined )? (time(String(this.state.minion.jid))): \" \"}\r\n                            {//console.log(this.state.minion,\"comment\")}\r\n                             }\r\n                        </Typography>\r\n                    </DialogTitle>\r\n\r\n\r\n                    <DialogContent dividers>\r\n                    {//if you want to chenge width with \r\n                    }\r\n                        <div style={{minWidth: 1000,}}>\r\n                            <div>\r\n                             \r\n\r\n                              \r\n                                <TreeView\r\n                                style={{\r\n                                   \r\n                                    fontSize:18,\r\n                                }}\r\n                                defaultCollapseIcon={<ExpandMoreIcon />}\r\n                                defaultExpandIcon={<ChevronRightIcon />}\r\n                                >\r\n                                 {this.state.data.map((item,index)=>{\r\n                                        if(this.state.flag===false){\r\n                                            return (\r\n                                                <Typography  className={this.props.classes.TreeItem} > \r\n                                                        <TreeItem \r\n                                                        nodeId={index} \r\n                                                        label={Object.keys(item)[0]} \r\n                                                        style={{\r\n                                                            color:(Object.values(item)[0].result===true)?'#26a852':\"#ff6666\",\r\n                                                            fontSize:18,\r\n                                                        }}\r\n                                                        className={this.props.classes.TreeItemText}> \r\n    \r\n                                                            {console.log(\"table - 394\")}\r\n                                                            \r\n                                                            <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n                                                            comment : \r\n                                                            \r\n                                                            </Typography>\r\n    \r\n                                                            <Typography color=\"textSecondary\" className={this.props.classes.text}>{(Object.values(item)[0]).comment}</Typography>\r\n    \r\n                                                            \r\n                                                            <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n                                                             changes :\r\n                                                            </Typography>\r\n    \r\n                                                            <Typography color=\"textSecondary\" className={this.props.classes.text}>{(String(Object.values(item)[0]).changes)}</Typography>\r\n    \r\n                                                            <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n                                                              _id_ : \r\n                                                            </Typography>\r\n    \r\n                                                            <Typography color=\"textSecondary\" className={this.props.classes.text}>{(Object.values(item)[0])._id_}</Typography>\r\n                                               \r\n                                                        </TreeItem>\r\n                                                    </Typography>\r\n                                                       )\r\n                                        }\r\n                                        else{\r\n                                            if(index===1){\r\n                                                return(\r\n                                                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                                                                  return : {this.state.minion.return}\r\n                                                    </Typography>\r\n                                                )\r\n                                            }\r\n                                           \r\n                                        }\r\n                                           \r\n\r\n                                 })}\r\n                                 </TreeView>\r\n                       \r\n                                <CardActions>\r\n\r\n                                </CardActions>\r\n                            </div>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n                          close\r\n                        </Button>\r\n                    </DialogActions>\r\n\r\n                </Dialog>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        saltReturns: state.saltReturns,\r\n        date: state.date\r\n    }\r\n}\r\nfunction matchDispatchToProps(dispatch){\r\n    return bindActionCreators({saltReturns: saltReturns}, dispatch);\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Orders));","import React from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport store from '../store';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport {SAVE_MINION} from \"../actions/types\";\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nconst styles = theme => ({\r\n  root: {\r\n    maxWidth: 400,\r\n    Width:400,\r\n    margin: theme.spacing(1),\r\n    marginLeft: theme.spacing(0),\r\n  },\r\n  root2: {\r\n    width: 230,\r\n    maxWidth: 360,\r\n    fontSize:12,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n    overflow:'wrap',\r\n    paddingLeft: theme.spacing(2),\r\n   // paddingTop: theme.spacing(2),\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    fontSize: 12,\r\n  },\r\n  container: {\r\n    width: 500,\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    overflow:'wrap'\r\n  },\r\n  minions:{\r\n    height: 240,\r\n    flexGrow: 1,\r\n    maxWidth: 400,\r\n  },\r\n  CardContent:{\r\n    maxWidth: 400,\r\n    width: 400,\r\n  \r\n  },\r\n  CircularProgress:{\r\n     paddingLeft: theme.spacing(20),\r\n    //paddingTop: theme.spacing(),\r\n  },\r\n  TreeItem:{\r\n    color:'#26a852',\r\n  },\r\n});\r\n\r\n\r\nclass MinionCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        \r\n        const commentg= this.props.comment;\r\n       // console.log(this.props.id,'constructor');\r\n       this.state={ \r\n          open: false,\r\n          defer: false,\r\n          click:false,\r\n          comment: commentg,\r\n          listOpen:false,\r\n          open:false,\r\n        };\r\n        this.onClickMinion = this.onClickMinion.bind(this);\r\n        this.handleClickButton = this.handleClickButton.bind(this);\r\n        this.handleClickOpen = this.handleClickOpen.bind(this);\r\n        this. handleClose = this. handleClose.bind(this);\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n      //console.log(nextProps,\"nextProps\")\r\n      if(nextProps.prepared!==this.props.prepared){\r\n\r\n      }\r\n    }\r\n    onClickMinion(){\r\n    \r\n      // console.log(store.getState(),\"store.getState() from minionCard\");\r\n    }\r\n    handleClickButton(){\r\n      this.state.listOpen=!(this.state.listOpen);\r\n  \r\n  \r\n    }\r\n    handleClickOpen(){\r\n      this.setState((prevState) => ({open:!prevState.open}));\r\n      console.log(this.state,\"stste from handleClickOpen\")\r\n    }\r\n    handleClose(){\r\n      this.setState((prevState) => ({open:!prevState.open}));\r\n      this.setState({click:true});\r\n      let array =store.getState().saveMinion.saveMinion;\r\n      \r\n     \r\n      let minions=array.filter((item)=>{\r\n        if(item.id !==this.props.id){return (item)}\r\n      });\r\n      minions=minions.map((item,index)=>{\r\n       return( {...item,id:index+1});\r\n      })\r\n      // minions.unshift(this.state.saveMinion[0]);\r\n      store.dispatch({\r\n          type: SAVE_MINION,\r\n          payload: minions\r\n      });\r\n    }\r\nrender(){\r\n  // id={item.id} minion={item.minions} comment={item.comment}\r\n    const bull = <span className={this.props.classes.bullet}>•</span>;\r\n    console.log(this.props,\"this.props\")\r\n    if(this.state.comment===''){this.state.click =true}\r\n    if(this.state.click === false && this.props.prepared===true){\r\n      return (\r\n     \r\n        <Card className={this.props.classes.root}>\r\n          <CardContent>\r\n  \r\n           \r\n              <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n              Function: {this.props.comment}\r\n              {/*this.props.fun*/}\r\n              </Typography>\r\n              <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n              Parameter: {this.props.Parameter}\r\n              {/*this.props.fun*/}\r\n              </Typography>\r\n        \r\n              <Typography variant=\"h5\" component=\"h2\" color=\"textSecondary\" >\r\n                <div>\r\n                  <div className={this.props.classes.container}>\r\n                                <TreeView\r\n                                className={this.props.classes.root}\r\n                                defaultCollapseIcon={<ExpandMoreIcon />}\r\n                                defaultExpandIcon={<ChevronRightIcon />}\r\n                              >\r\n                        <TreeItem nodeId=\"1\" label=\"See Minions\">\r\n                        {\r\n                            this.props.minion.map((item,index)=>{\r\n                              console.log(\"minion card item\", item)\r\n                              return(\r\n                                <TreeItem nodeId={index+2} label={item[0]} className={this.props.classes.TreeItem}>\r\n                                    <Typography  color=\"textSecondary\" >\r\n                                  <TreeItem nodeId={index+3} label={item[1]} />\r\n                                  </Typography>\r\n                                  \r\n                                </TreeItem>\r\n                            )\r\n                            })\r\n                          }\r\n                          </TreeItem>\r\n                    </TreeView>\r\n                  </div>\r\n                 </div>\r\n              </Typography>\r\n              \r\n            {/*button*/}\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n        \r\n        <IconButton \r\n        aria-label=\"share\"\r\n        variant=\"outlined\" \r\n        //color=\"primary\" \r\n        onClick={this.handleClickOpen}\r\n          //onClick={this.handleExpandClick}\r\n        color='secondary'\r\n          >\r\n              <DeleteIcon />\r\n        </IconButton>\r\n        <Dialog\r\n        open={this.state.open}\r\n        onClose={this.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        >\r\n  \r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n          Are you sure you want to delete the command from history?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button onClick={this.handleClickOpen} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n          <Button onClick={this.handleClose} color=\"secondary\" autoFocus>\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n        </Dialog>\r\n        {/*\r\n            <IconButton\r\n              className={clsx(this.props.classes.expand, {\r\n                [this.props.classes.expandOpen]: this.state.expanded,\r\n              })}\r\n              onClick={this.handleExpandClick}\r\n              aria-expanded={this.state.expanded}\r\n              aria-label=\"show more\"\r\n            >\r\n              <ExpandMoreIcon />\r\n            </IconButton>\r\n            */}\r\n          </CardActions>\r\n  \r\n        </Card>\r\n       \r\n         \r\n        );\r\n    }\r\n  \r\n      else if (this.props.prepared===false)\r\n      {\r\n        //console.log(\"props from minioncard\")\r\n        //console.log(this.props,\"props from minioncard\")\r\n        return(\r\n          <Card className={this.props.classes.root}>\r\n            \r\n            <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n              Function: {this.props.comment}\r\n              {/*this.props.fun*/}\r\n              </Typography>\r\n              <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n              Parameter: {this.props.Parameter}\r\n              {/*this.props.fun*/}\r\n              </Typography>\r\n           \r\n            <CardContent className={this.props.classes.CardContent}>\r\n              <div className={this.props.classes.CircularProgress}> <CircularProgress /></div>\r\n            \r\n            </CardContent>\r\n          </Card>\r\n        );\r\n      }\r\n      else{return(<div></div>);}\r\n}\r\n  \r\n}\r\n\r\nexport default withStyles(styles)(MinionCard);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../actions/authActions';\r\nimport PropTypes from 'prop-types';\r\nimport store from '../../store';\r\nimport Button from '@material-ui/core/Button';\r\nexport class Logout extends Component {\r\n  static propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n  };\r\n\r\n\r\n  render() {\r\n    // console.log(this.props)\r\n    return (\r\n        <Button  style={{color:'#fff',border:'none'}}  variant='outlined'  onClick={()=> store.dispatch(logout())}>\r\n          Log out\r\n        </Button>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n  null,\r\n  { logout }\r\n)(Logout);","\r\n\r\nimport React, { Component } from \"react\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport MaterialTable from 'material-table';\r\nimport { forwardRef } from 'react';\r\nimport store from '../store';\r\nimport { saveMinion } from '../actions/date';\r\nimport {SAVE_MINION} from \"../actions/types\";\r\nimport axios from 'axios';\r\nimport {\r\n    AddBox,\r\n    ArrowDownward,\r\n    Check,\r\n    ChevronLeft,\r\n    ChevronRight,\r\n    Clear,\r\n    DeleteOutline,\r\n    Edit,\r\n    FilterList,\r\n    FirstPage,\r\n    LastPage,\r\n    Remove,\r\n    SaveAlt,\r\n    Search,\r\n    ViewColumn,\r\n\r\n\r\n}from '@material-ui/icons';\r\nimport { withAlert } from 'react-alert';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport MinionCard from './MinionCard';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { returnErrors } from '../actions/errorActions';\r\nimport { listMinions } from '../actions/date';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) =>  <Edit {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst styles = theme => ({\r\n    MaterialTable:{\r\n        marginLeft: theme.spacing(12),\r\n        marginTop: theme.spacing(1),\r\n        width:450, \r\n    },\r\n    root: {\r\n      padding: '2px 4px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      width: 500,\r\n      height:70,\r\n      marginTop: theme.spacing(1)\r\n    },\r\n    paperParms:{\r\n        padding: '3px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 400,\r\n        height:50,\r\n        marginTop: theme.spacing(3)\r\n    },\r\n   \r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      marginTop: 0,\r\n      \r\n      flex: 1,\r\n    },\r\n    inputparms:{\r\n        marginLeft: theme.spacing(1),\r\n    \r\n        //width: 400,\r\n        flex: 1,\r\n    },\r\n    minionStyle:{\r\n        marginTop: theme.spacing(5),\r\n        width:200\r\n    },\r\n   \r\n    iconButton: {\r\n      padding: 10,\r\n      height:55\r\n    },\r\n    Divider: {\r\n      marginTop: theme.spacing(5),\r\n      height: 50,\r\n      margin: 4,\r\n    },\r\n    iconButtonParms: {\r\n     \r\n        padding: 10,\r\n        height: 10,\r\n        width:4,\r\n      },\r\n      dividerParms: {\r\n        marginTop: theme.spacing(5),\r\n        height: '100%',\r\n        margin: 4,\r\n      },\r\n    msg:{\r\n        width: '100%',\r\n        '& > * + *': {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n    Comments:{\r\n        marginTop: theme.spacing(4),\r\n    },\r\n   \r\n    ButtonGroup: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        \r\n        '& > *': {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n      },\r\n      button: {\r\n       //paddingRight:70,\r\n       height:50,\r\n      // width:60\r\n      },\r\n    \r\n  });\r\n\r\n\r\n\r\n \r\n\r\nclass SaltStack extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.clickOpen = this.clickOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.sentCommand = this.sentCommand.bind(this);\r\n        this.getMinionsFromServer = this.getMinionsFromServer.bind(this);\r\n        this.tokenConfig = this.tokenConfig.bind(this);\r\n        store.dispatch(listMinions());\r\n        this.state={\r\n        alert:false,\r\n        msg:false,\r\n        menu:\"Dashboard\",\r\n        open: false,\r\n        defer: false,\r\n        clickSave:false,\r\n        history:[],\r\n        input:'',\r\n        parms:\"\",\r\n        saveMinion:{},\r\n        countSaveMinion:0,\r\n        warninginput:false,\r\n        warningNoMinionSelected:false,\r\n        err_cmd:\"\",\r\n        err_cmd_flag:false,\r\n        data:[],\r\n        };\r\n        \r\n        \r\n       this.getMinionsFromServer();\r\n    }\r\n    getMinionsFromServer(){\r\n       \r\n        let tokenTemp=this.tokenConfig();\r\n      \r\n        axios.get('/get_connected_minions',tokenTemp)\r\n        .then((res) => {\r\n                let arr=[];\r\n                for(let i=0;i<res.data.result.length;i++){\r\n                   let minion={name:res.data.result[i]}\r\n                   arr.push(minion);\r\n                }             \r\n                this.setState({data:arr})\r\n        })\r\n        .catch(err => {\r\n            console.log(err,\"err get_connected_minions\");\r\n    \r\n           });\r\n        };\r\n        tokenConfig = () => {\r\n            //console.log(\"getstatteeeeeslatl\",store.getState())\r\n            // Get token from localstorage\r\n            const token = store.getState().auth.token;\r\n        \r\n            // Headers\r\n            const config = {\r\n                headers: {\r\n                    \"Content-type\": \"application/json\"\r\n                }\r\n            }\r\n        \r\n            // If token, add to headers\r\n            if(token) {\r\n               config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n            }\r\n        \r\n         return config;\r\n    };\r\n    handleClose = (event, reason) => \r\n    {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n     \r\n        this.setState({msg:false,warninginput:false,warningNoMinionSelected:false});\r\n    };\r\n\r\n    handleClick = () => \r\n    {\r\n        this.state.countSaveMinion--;\r\n        \r\n        if((this.state.input !== '')  &&  (this.state.countSaveMinion===0)){\r\n            this.state.saveMinion.prepared=false;\r\n            setTimeout(()=>{this.setState({msg:false,clickSave:false});}, 2200);\r\n            this.state.saveMinion.comment=this.state.input;\r\n\r\n            let minions =store.getState().saveMinion.saveMinion;\r\n            \r\n            const words = this.state.input.split(' ');\r\n            const parms_send=this.state.parms.split(' ');\r\n           \r\n            let res={\r\n                func:words[0],\r\n                tgt:this.state.saveMinion.minions,\r\n                salt_cmd:this.state.parms===\"\"?\"\":parms_send,\r\n            }\r\n        \r\n           this.state.saveMinion.Parameter=parms_send;\r\n            this.setState({parms:\"\"});\r\n         \r\n            const body = JSON.stringify(res);\r\n            let tokenTemp=this.tokenConfig();\r\n            this.state.history.unshift(this.state.saveMinion);\r\n            minions.unshift(this.state.saveMinion);\r\n            store.dispatch({\r\n                type: SAVE_MINION,\r\n                payload: minions\r\n            });\r\n            \r\n            axios.post('/saltstack_cmd',body, tokenTemp)\r\n            .then((res) => {\r\n                const temp=res.data.res;\r\n                const result = Object.keys(temp).map((key) => [String(key), temp[key]]);\r\n               let buildRes=[];\r\n                result.forEach(minionRes => {\r\n                    minions[0].minions.map((item)=>{\r\n                        if(minionRes[0]===item){\r\n                            buildRes.push([minionRes[0],minionRes[1]])\r\n                            item = buildRes;\r\n                        }\r\n                    \r\n                })\r\n            \r\n                });\r\n                this.state.saveMinion.prepared=true;\r\n                this.state.history.unshift(this.state.saveMinion);\r\n                minions[0].minions=buildRes;\r\n                minions.shift();\r\n                minions.unshift(this.state.saveMinion);\r\n                console.log(minions,\"minions 2\")\r\n                store.dispatch({\r\n                    type: SAVE_MINION,\r\n                    payload: minions\r\n                });\r\n                this.setState({msg:true});\r\n            })\r\n            .catch(err => {\r\n                //console.log(\"err from SaltStack\")\r\n                this.setState({err_cmd:err.response.data.message,err_cmd_flag:true})\r\n                //console.log(this.state,\"opopopopopopoo\")\r\n                setTimeout(()=>{this.setState({err_cmd_flag:false});}, 2200);\r\n                store.dispatch(returnErrors(err.response.data.message, err.response.status, 'CMD_FAIL'));\r\n                // dispatch({\r\n                //     type: LOGIN_FAIL\r\n                // })\r\n            })\r\n        \r\n          \r\n            //console.log(store.getState(),\"store from saltstack\");\r\n            \r\n        }\r\n        \r\n        if(this.state.input === ''){ \r\n            this.setState({warninginput:true});\r\n            setTimeout(()=>{this.setState({warninginput:false});}, 2200);\r\n        }\r\n        if((this.state.countSaveMinion !==0) && (this.state.countSaveMinion!==1) &&(this.state.input !== '')  ){ \r\n            this.setState({warningNoMinionSelected:true});\r\n            setTimeout(()=>{this.setState({warningNoMinionSelected:false});}, 2200);\r\n        }\r\n\r\n        this.setState({input:'',parms:\"\"});\r\n\r\n\r\n      };\r\n   \r\n    clickOpen (rowData){\r\n        //  console.log(rowData,'rowData')\r\n        this.state.countSaveMinion=0;\r\n        this.state.countSaveMinion++;\r\n        const data=rowData.map((row)=>row.name);\r\n        let commntId=(store.getState().saveMinion.saveMinion.length)+1; \r\n        this.state.saveMinion={minions:data,id:commntId,comment:'',prepared:false};\r\n       // this.getMinionsFromServer();\r\n        this.setState({alert:true,clickSave:true,});\r\n        setTimeout(()=>{this.setState({alert:false,});}, 2200);\r\n        \r\n    };\r\n\r\nsentCommand(command){\r\n        \r\n        this.state.countSaveMinion--;\r\n        if( (this.state.countSaveMinion===0)){\r\n\r\n           \r\n            this.state.saveMinion.prepared=false;\r\n\r\n           \r\n            this.state.saveMinion.comment=command;\r\n            \r\n            let minions =store.getState().saveMinion.saveMinion;\r\n            //  console.log(store.getState().saveMinion.saveMinion,\"store.getState().saveMinion.saveMinion\")\r\n           \r\n          \r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n            const words = this.state.input.split(' ');\r\n            const parms_send=this.state.parms.split(' ');\r\n           \r\n            let res={\r\n                func:command,\r\n                tgt:this.state.saveMinion.minions,\r\n                salt_cmd:this.state.parms===\"\"?\"\":parms_send,\r\n            }\r\n            this.state.saveMinion.Parameter=parms_send;\r\n            this.setState({parms:\"\"});\r\n\r\n            const body = JSON.stringify(res);\r\n            let tokenTemp=this.tokenConfig();\r\n            this.state.history.unshift(this.state.saveMinion);\r\n            minions.unshift(this.state.saveMinion);\r\n          \r\n            store.dispatch({\r\n                type: SAVE_MINION,\r\n                payload: minions\r\n            });\r\n            console.log(store.getState(),\"store.getState() first\")\r\n            axios.post('/saltstack_cmd',body, tokenTemp)\r\n            .then((res) => {\r\n                console.log(\"CMD_RESULT\",res)\r\n                const temp=res.data.res;\r\n                console.log(\"data.res\",temp)\r\n                const result = Object.keys(temp).map((key) => [String(key), temp[key]]);\r\n                console.log(\"result\",result)\r\n\r\n               let buildRes=[];\r\n                result.forEach(item => buildRes.push([item[0],item[1]]))\r\n                // result.forEach(minionRes => {\r\n                //     minions[0].minions.map((item)=>{\r\n                //         console.log(\"item\",item)\r\n                //         if(minionRes[0]===item){\r\n                //             buildRes.push([minionRes[0],minionRes[1]])\r\n                //             item = buildRes;\r\n                //         }\r\n                    \r\n                // })\r\n            \r\n                // });\r\n                this.state.saveMinion.prepared=true;\r\n                this.state.history.unshift(this.state.saveMinion);\r\n                minions[0].minions=buildRes;\r\n                minions.shift();\r\n                minions.unshift(this.state.saveMinion);\r\n                console.log(minions,\"minions 2\")\r\n                store.dispatch({\r\n                    type: SAVE_MINION,\r\n                    payload: minions\r\n                });\r\n                this.setState({msg:true});\r\n      \r\n\r\n            })\r\n            .catch(err => {\r\n                //console.log(\"err from SaltStack\")\r\n                //this.setState({err_cmd:err.response.data.message,err_cmd_flag:true})\r\n               \r\n                setTimeout(()=>{this.setState({err_cmd_flag:false});}, 4000);\r\n                //store.dispatch(returnErrors(err.response.data.message, err.response.status, 'CMD_FAIL'));\r\n                // dispatch({\r\n                //     type: LOGIN_FAIL\r\n                // })\r\n            })\r\n          \r\n           // console.log(this.state.history,'this.state.history')\r\n            \r\n            setTimeout(()=>{this.setState({msg:false,clickSave:false});}, 2200);\r\n         \r\n        }\r\n      \r\n        if((this.state.countSaveMinion !==0) && (this.state.countSaveMinion!==1)   ){ \r\n            this.setState({warningNoMinionSelected:true});\r\n            setTimeout(()=>{this.setState({warningNoMinionSelected:false});}, 2200);\r\n        }\r\n        this.setState({parms:\"\"});\r\n\r\n    };\r\n\r\n\r\n\r\n  render(){\r\n  \r\n    return (\r\n\r\n<div style={{display: 'flex',flexDirection: 'row',}}>\r\n\r\n<div style={{display: 'flex',flexDirection: 'column',}}>\r\n   \r\n    <Paper component=\"form\" className={this.props.classes.root}>\r\n        <IconButton className={this.props.classes.iconButton} aria-label=\"menu\">\r\n            <MenuIcon />\r\n        </IconButton>\r\n            \r\n        <InputBase\r\n        autoComplete\r\n        autoFocus='true'\r\n        value={this.state.input}\r\n        onChange={(event)=>{this.setState({input:event.target.value})}}\r\n        className={this.props.classes.input}\r\n        placeholder=\"Command Line\"\r\n        inputProps={{ 'aria-label': 'Command Line' }}\r\n        />\r\n        {\r\n            this.state.input!==\"\"?(\r\n                <div>\r\n          \r\n            <IconButton color=\"primary\" className={this.props.classes.iconButton} aria-label=\"directions\" onClick={()=>{this.setState({input:\"\"})}}>\r\n              <ClearIcon />\r\n            </IconButton>\r\n            </div>\r\n            )\r\n            :(<div></div>)\r\n        }\r\n        <Divider className={this.props.classes.divider} orientation=\"vertical\" />     \r\n        <IconButton fontSize=\"small\" color='primary' size='medium' className={this.props.classes.iconButton} aria-label=\"directions\" onClick={this.handleClick}>\r\n            <SendIcon />\r\n        </IconButton>\r\n    </Paper>\r\n\r\n\r\n\r\n\r\n{\r\n    /////////////////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n<div className={this.props.classes.Comments}>\r\n    Parameters\r\n        <Divider light  style={{width:200}}/>\r\n    </div>\r\n\r\n\r\n    <Paper component=\"form\" className={this.props.classes.paperParms}>\r\n    <InputBase\r\n    autoComplete\r\n    autoFocus='true'\r\n    value={this.state.parms}\r\n    onChange={(event)=>{this.setState({parms:event.target.value})}}\r\n    className={this.props.classes.inputparms}\r\n    placeholder=\"Parameters\"\r\n    inputProps={{ 'aria-label': 'Parameters' }}\r\n    />\r\n    {\r\n    //     this.state.parms!==\"\"?(\r\n            \r\n     \r\n    //         <Divider className={this.props.classes.divider} orientation=\"vertical\" />\r\n       \r\n    //     )\r\n    //     :(<div></div>)\r\n    }\r\n  \r\n    {\r\n        this.state.parms!==\"\"?(\r\n            \r\n     \r\n        <IconButton fontSize=\"small\" color=\"primary\" className={this.props.classes.iconButton} aria-label=\"directions\" onClick={()=>{this.setState({parms:\"\"})}}>\r\n        <ClearIcon />\r\n      </IconButton>\r\n       \r\n        )\r\n        :(<div></div>)\r\n    }\r\n    {\r\n//     <Divider orientation=\"vertical\" flexItem/>   \r\n//    <Button\r\n//         variant=\"contained\"\r\n//         color=\"primary\"\r\n//         className={this.props.classes.button}\r\n//         //disabled\r\n//         //endIcon={<SendIcon />}\r\n//       >\r\n//         {//Send\r\n//         }\r\n//      </Button>\r\n    }\r\n\r\n    </Paper>\r\n\r\n\r\n\r\n\r\n    <div className={this.props.classes.Comments}>\r\n        commands\r\n        <Divider light  style={{width:200}}/>\r\n    </div>\r\n\r\n    <div className={this.props.classes.ButtonGroup}>\r\n        <ButtonGroup \r\n            size=\"large\" \r\n            color=\"primary\" \r\n            orientation=\"horizontal\"\r\n            color=\"primary\"\r\n            aria-label=\"vertical contained primary button group\"\r\n            variant=\"text\"\r\n            style={{ marginTop:35,width:380,height:50,}}>\r\n           \r\n           <Button onClick={()=>this.sentCommand('state.apply')}>state.apply</Button>\r\n            <Button onClick={()=>this.sentCommand('test.ping')}>test.ping</Button>\r\n            <Button onClick={()=>this.sentCommand('grains.items')}>grains.items</Button>\r\n\r\n        \r\n\r\n        </ButtonGroup>\r\n      \r\n    </div>\r\n\r\n    <div className={this.props.classes.Divider}>\r\n        History\r\n        <Divider light  style={{width:400}}/>\r\n    </div>\r\n\r\n\r\n    {\r\n        <div style={{ display: 'flex',flexDirection: 'row',flexFlow: 'row wrap',maxWidth:600}}>\r\n        {store.getState().saveMinion.saveMinion.map(item =>{\r\n            return(\r\n                \r\n                  <MinionCard  id={item.id} minion={item.minions} comment={item.comment} prepared={item.prepared} Parameter={item.Parameter}/>\r\n        )})}\r\n        </div>\r\n    }  \r\n\r\nMinion\r\n    <div className={this.props.classes.Divider}>\r\n        <Divider light  style={{width:400}}/>\r\n    </div>\r\n\r\n\r\n    </div>\r\n<div>\r\n  \r\n\r\n    <div className={this.props.classes.MaterialTable}>\r\n        {\r\n            this.state.alert?\r\n            (   <div className={this.props.classes.msg}>\r\n                   \r\n                        <Alert severity=\"success\">\r\n                                The minions you selected were  — <strong>accepted in the system</strong>\r\n                        </Alert>\r\n                   \r\n                </div>\r\n            ):<div></div>\r\n        }\r\n        <MaterialTable\r\n        \r\n            title='Minions'\r\n            icons={tableIcons}\r\n            columns={[{ title: 'Name', field: 'name' },]}\r\n            data={this.state.data} \r\n            options={{selection: true}}       \r\n            actions=\r\n            {[{\r\n                icon: forwardRef((props, ref) => <SaveIcon color='action' {...props} ref={ref} />),\r\n                tooltip: 'Save Minions',\r\n                onClick: (event, rowData) => {this.clickOpen(rowData)}\r\n            }]}\r\n        />\r\n        {\r\n            this.state.clickSave === true?\r\n                (<div className={this.props.classes.msg}>\r\n                    <Snackbar open={this.state.msg} autoHideDuration={6000} onClose={this.handleClose}>\r\n                        <Alert onClose={this.handleClose} severity=\"success\">\r\n                            The commands you made were received in the system!\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </div>\r\n                ):<div></div>\r\n        }\r\n        {\r\n            this.state.warninginput === true ?\r\n            (   <div className={this.props.classes.msg}>\r\n                <Snackbar open={this.state.warninginput} autoHideDuration={6000} onClose={this.handleClose}>\r\n                    <Alert onClose={this.handleClose} severity=\"warning\">\r\n                          command not sent because     <strong> no command entered   </strong>\r\n                        </Alert>\r\n                  \r\n                    </Snackbar>\r\n                   \r\n                </div>\r\n            )\r\n            :<div></div>\r\n        }\r\n        {\r\n            this.state.warningNoMinionSelected === true ?\r\n            (   <div className={this.props.classes.msg}>\r\n                <Snackbar open={this.state.warningNoMinionSelected} autoHideDuration={6000} onClose={this.handleClose}>\r\n                    <Alert onClose={this.handleClose} severity=\"warning\">\r\n                              command not sent because <strong>no minion selected   </strong>\r\n                        </Alert>\r\n                  \r\n                    </Snackbar>\r\n                   \r\n                </div>\r\n            )\r\n            :<div></div>\r\n        }\r\n          {\r\n            this.state.err_cmd_flag === true ?\r\n            (   <div className={this.props.classes.msg}>\r\n                <Snackbar open={this.state.err_cmd_flag} autoHideDuration={6000} onClose={this.handleClose}>\r\n                    <Alert onClose={this.handleClose} severity=\"error\">\r\n                              command not sent because <strong>Internal Server Error   </strong>\r\n                        </Alert>\r\n                  \r\n                    </Snackbar>\r\n                   \r\n                </div>\r\n            )\r\n            :<div></div>\r\n        }\r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n</div>\r\n</div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(SaltStack);","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport {DATE_SELECT} from \"../actions/types\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {Typography,Button,Grid} from '@material-ui/core';\r\nimport Title from './Title';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {KeyboardDatePicker,MuiPickersUtilsProvider,DatePicker} from \"@material-ui/pickers\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\n//import DateTime from 'react-datetime';\r\nimport {dateSelect} from '../actions/date.js';\r\nimport store from '../store';\r\nimport { saltReturnsForgraph } from '../actions/date';\r\nimport graphDate from '../reducers/graphDate';\r\nimport {GRAPH_DATE_SELECT} from \"../actions/types\";\r\n// <DatePicker\r\n// disableFuture\r\n// openTo=\"year\"\r\n// id=\"date-picker-dialog\"\r\n// margin=\"normal\"\r\n// format=\"dd/MM/yyyy\"\r\n// label=\"Start\"\r\n// views={[\"year\", \"month\", \"date\"]}\r\n// KeyboardButtonProps={{\r\n//   'aria-label': 'change date',\r\n// }}\r\n\r\n// />\r\n\r\n\r\n\r\n\r\n\r\n class SearchTimeGraph extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.dateIsChanged = this.dateIsChanged.bind(this);\r\n    this.state={graphDate:this.props.graphDate.graphDate,};\r\n  \r\n  }\r\n//   shouldComponentUpdate(nextProps, nextState) {\r\n//   return this.state.value != nextState.value;\r\n// }\r\n  \r\n    \r\n  \r\n  handleDateChange (date){\r\n    this.setState({graphDate:date});\r\n  \r\n  //  console.log(this.state,'this.state');\r\n  //  console.log(store.getState(),'store');\r\n   store.dispatch(saltReturnsForgraph());\r\n   setTimeout(() => {\r\n    store.dispatch({\r\n      type: GRAPH_DATE_SELECT,\r\n      payload: {graphDate:date}\r\n     } );\r\n   }, 0);\r\n  \r\n  }\r\n \r\n\r\n  dateIsChanged(){\r\n    //this.setState({graphDate:date});\r\n  //   let date=this.state.graphDate;\r\n  //  store.dispatch({\r\n  //   type: GRAPH_DATE_SELECT,\r\n  //   payload: {graphDate:date}\r\n  //  } );\r\n  //  store.dispatch(saltReturnsForgraph());\r\n\r\n\r\n    // console.log(\"store\",store.getState());\r\n}\r\n \r\n \r\n  render () {\r\n    return (\r\n      <React.Fragment>\r\n        <Typography component=\"p\" variant=\"h4\">\r\n\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid container justify=\"space-around\">\r\n            <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Graph Date\"\r\n            format=\"dd/MM/yyyy\"\r\n            value={this.state.graphDate}\r\n            onChange={(date)=>{this.handleDateChange(date)}}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n\r\n\r\n        \r\n   \r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n\r\n        </Typography>\r\n       \r\n      </React.Fragment>\r\n    );\r\n  }\r\n    \r\n}\r\n\r\n const mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    graphDate: state.graphDate\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SearchTimeGraph);","\nimport { withStyles } from \"@material-ui/core/styles\";\nimport React, { PureComponent } from 'react';\nimport {\n  BarChart, Bar, Brush, ReferenceLine, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\nimport store from '../store';\nimport axios from 'axios'\nimport { saltReturns } from '../actions/date';\nimport {connect} from 'react-redux';\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n    },\n});\n\nexport const tokenConfig = getState => {\n  // console.log(\"getstatteeeeeslatl\",getState())\n   // Get token from localstorage\n   const token = store.getState().auth.token;\n\n   // Headers\n   const config = {\n       headers: {\n           \"Content-type\": \"multipart/form-data\"\n       }\n   }\n\n   // If token, add to headers\n   if(token) {\n      config.headers[\"Authorization\"] = ` Bearer ${token} `;\n   }\n\nreturn config;\n}\nclass CurrentMonth extends PureComponent {\n    constructor(props) {\n        super(props);\n         //this.dataInit = this.dataInit.bind(this);\n         //store.dispatch(saltReturns(\"CurrentMonth\"));\n         //console.log(store.getState(),\"store.getState()\")\n        this.state = {\n            start: new Date(),\n            end:new Date(),\n            data: store.getState().CurrentMonth.CurrentMonth,\n            flag:true,\n        };\n      }\n \n      // componentWillUpdate(){\n      //   this.setState({data:this.dataInit(),flag:false});\n      // }\n     \n    //   dataInit(){\n    //     let time_1=new Date().getTime();\n    //     let year=String(new Date().getFullYear());\n    //     let dayEnd=String(new Date(year, new Date().getMonth()+1, 0).getDate());\n    //     dayEnd=parseInt(dayEnd)<10?\"0\"+dayEnd:dayEnd;\n    //     let satrtCurrentMonth=(new Date().getMonth()+1);\n    //     satrtCurrentMonth=parseInt( satrtCurrentMonth)<10?\"0\"+ satrtCurrentMonth: satrtCurrentMonth;\n    //     let Start= year+satrtCurrentMonth+\"01\"+\"000000000000\";\n    //     let End= year+satrtCurrentMonth+dayEnd+\"235959595959\";\n    //     //  let startYear=new Date(year,Month,store.getState().date.start.getDate());\n    //     //  let endYear=store.getState().date.end;\n    //     //  let index = startYear;\n    //   // if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\n    //     let minions=[];\n    //   // for (let index = startYear; index <= endYear; index.setFullYear(index.getFullYear() + 1)) {\n      \n      \n     \n    //   //console.log(Start,\"Start\")\n    //   //console.log(End,\"End\")\n    //   let url='/api/saltReturns/apply/'+Start+\"/\"+End;\n    //   //console.log(\"url\" ,url);\n    //   axios.get(url, tokenConfig(store.getState()))\n    //   .then((res) => {\n    //     let dataInit=[];\n       \n    //     let temp=new Date();\n    //      let mnonthDay =new Date(temp.getFullYear(), temp.getMonth()-1, 0).getDate();\n    //         for (let i=1;i<=mnonthDay;i++){\n    //          dataInit.push( { name: String(i), Fail:0, Success:0 });\n    //      }\n    //     minions=minions.concat(res.data);\n     \n    //     if(minions!==null){\n          \n    //       let funSaltReturns=minions\n       \n    //     .forEach((item) => {\n    //         let place= (parseInt(item.jid.slice(6,8))-1);\n           \n    //        let res=true;\n    //        let flag=0;\n          \n    //        if(Array.isArray(item.return)){ res=true;   {res === true ?(dataInit[place].Success++):(dataInit[place].Fail++)}}\n    //        else{\n            \n    //            let dataTemp=Object.entries(item.return).map((e,index,arr) => {\n    //             if((e[1].result === false) && (flag===0)){\n    //               dataInit[place].Fail++;\n    //               flag=1;\n               \n    //              }\n    //             if(index===arr.length-1 && flag === 0){\n    //               dataInit[place].Success++;\n    //             }\n           \n             \n    //           });\n      \n    //        }\n         \n    //       })\n    //       let time_2=new Date().getTime();\n    //       console.log((time_2-time_1),\"Time from month\");\n    //       }\n          \n\n    //       this.state.data= dataInit;\n    //       this.forceUpdate();\n    // })\n    // .catch(err => {\n    //     console.log(err,\"error in data\");\n\n    //    });\n\n    //   }\n      \n    render() {\n     // console.log(\"this.state 2\",this.state)\n        return (\n          <BarChart\n            width={1220}\n            height={500}\n            data={this.state.data}\n            margin={{\n              top: 5, right: 20, left: 10, bottom: 5,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\n            <ReferenceLine y={0} stroke=\"#000\" />\n            <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" />\n            <Bar dataKey=\"Fail\" fill=\"#ff6666\"/>\n            <Bar dataKey=\"Success\" fill=\"#82ca9d\" />\n          </BarChart>\n        );\n      }\n    }\n    \n    const mapStateToProps = (state, ownProps) => {\n      return {\n          saltReturns: state.saltReturns,\n          date: state.date\n      }\n  }\n    export default connect(mapStateToProps)(withStyles(styles)(CurrentMonth));\n\n\n\n\n\n\n\n\n// export default class Example extends PureComponent {\n//   static jsfiddleUrl = 'https://jsfiddle.net/alidingling/mc8r7e6p/';\n\n","\nimport { withStyles } from \"@material-ui/core/styles\";\nimport React, { PureComponent } from 'react';\nimport {\n  BarChart, Bar, Brush, ReferenceLine, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\nimport store from '../store';\n\nimport { saltReturns } from '../actions/date';\nimport {connect} from 'react-redux';\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n    },\n});\n\n\nclass CurrentYear extends PureComponent {\n    constructor(props) {\n        super(props);\n         //this.dataInit = this.dataInit.bind(this);\n        // store.dispatch(saltReturns(\"CurrentYear\"));\n        this.state = {\n            start: new Date(),\n            end:new Date(),\n            data:  store.getState().CurrentYear.CurrentYear,\n            flag:true,\n        };\n      }\n    \n      // componentWillReceiveProps(nextProps) {\n      //   if( (((this.props.date.start.toLocaleDateString()!== nextProps.date.start.toLocaleDateString()) || (this.props.date.end.toLocaleDateString()!== nextProps.date.end.toLocaleDateString() ))) \n      //   && (this.state.flag===true)){\n\n      //      this.setState({data:this.dataInit()});\n          \n      //   }\n      // }\n      // shouldComponentUpdate(nextProps, nextState) {\n      //   if(this.state.flag===true){\n      //     this.setState({data:this.dataInit(),flag:false});\n      //     return true;\n      //   }\n      //  return false;\n        \n      // }\n     \n      // componentWillUpdate() {\n      //   this.setState({data:this.dataInit()});\n    //   // }\n    //   dataInit(){\n    //     let time_1=new Date().getTime();\n    //     let dataInit=[];\n    //     // let temp=new Date(2019,10);\n    \n    //     dataInit.push( { name: String('January'), Fail:0, Success:0 });\n    //     dataInit.push( { name: String('February'), Fail:0, Success:0 });\n    //     dataInit.push( { name: String('March'), Fail:0, Success:0 });\n    //     dataInit.push( { name: String('April'), Fail:0, Success:0 });\n    //     dataInit.push( { name: String('May '), Fail:0, Success:0 });\n    //     dataInit.push( { name: String('June  '), Fail:0, Success:0 });\n    //     dataInit.push( { name: String('July  '), Fail:0, Success:0 });\n    //     dataInit.push( { name: String('August '), Fail:0, Success:0 });\n    //     dataInit.push( { name: String('September '),Fail:0, Success:0 });\n    //     dataInit.push( { name: String('October '), Fail:0, Success:0 });\n    //     dataInit.push( { name: String('November  '),Fail:0, Success:0 });\n    //     dataInit.push( { name: String('December '), Fail:0, Success:0 });\n        \n    //     if(store.getState().saltReturns.saltReturns!==null){\n\n        \n    //     let funSaltReturns=store.getState().saltReturns.saltReturns\n\n    //   .forEach((item) => {\n    //     let str=item.jid.slice(0,4)+\"-\"+String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\n    //     let time=new Date(str);\n    //     let place=time.getMonth();\n    //     let res=true;\n    //     let flag=0;\n     \n    //     if(Array.isArray(item.return)){ res=true;   {res === true ?(dataInit[place].Success++):(dataInit[place].Fail++)}}\n    //     else{\n          \n    //         let dataTemp=Object.entries(item.return).map((e,index,arr) => {\n    //           if(e[1].result === false && flag===0){\n    //            dataInit[place].Fail++;\n    //            flag=1;\n    //            //break;\n    //           }\n    //          if(index===arr.length-1 && flag === 0){\n    //            dataInit[place].Success++;\n    //          }\n           \n          \n    //        });\n          \n           \n        \n    //     }\n\n    //   })\n        \n    \n    //     let time_2=new Date().getTime();\n    //     console.log((time_2-time_1),\"Time from year\");\n    //     return dataInit;\n    // }\n    //   }\n   \n    render() {\n        return (\n            <BarChart   \n                width={1220}\n                height={500} \n                data={this.state.data}\n                margin={{top: 5, right: 20, left: 10, bottom: 5,}}\n                >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\n                <ReferenceLine y={0} stroke=\"#000\" />\n              \n                <Bar dataKey=\"Fail\" fill=\"#ff6666\"/>\n                <Bar dataKey=\"Success\" fill=\"#82ca9d\" />\n            </BarChart>\n        \n      \n        );\n      }\n    }\n    \n    const mapStateToProps = (state, ownProps) => {\n      return {\n          saltReturns: state.saltReturns,\n          date: state.date\n      }\n  }\n\n  \n  \n  \nexport default connect(mapStateToProps)(withStyles(styles)(CurrentYear));\n\n\n\n\n\n\n\n\n\n// export default class Example extends PureComponent {\n//   static jsfiddleUrl = 'https://jsfiddle.net/alidingling/mc8r7e6p/';\n\n","import { withStyles } from \"@material-ui/core/styles\";\nimport React, { PureComponent } from 'react';\nimport {\n  BarChart, Bar, Brush, ReferenceLine, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\nimport store from '../store';\nimport { saltReturns } from '../actions/date';\nimport {connect} from 'react-redux';\n\nimport TreeView from '@material-ui/lab/TreeView';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport TreeItem from '@material-ui/lab/TreeItem';\n\n\nconst styles = theme => ({\n    root: {\n        \n        flexGrow: 1,\n        maxWidth: 400,\n      },\n});\n\n\nclass LastThreeMonths extends PureComponent {\n    constructor(props) {\n        super(props);\n         this.dataInitOne = this.dataInitOne.bind(this);\n         this.dataInitTow = this.dataInitTow.bind(this);\n         this.dataInitThree = this.dataInitThree.bind(this);\n         store.dispatch(saltReturns(\"LastThreeMonths\"));\n        //  this.listMonth = this.listMonth.bind(this);\n        this.state = {\n            start: new Date(),\n            end:new Date(),\n            nameOne:'',\n            nameTow:'',\n            nameThree:'',\n            one: this.dataInitOne(),\n            tow: this.dataInitTow(),\n            three: this.dataInitThree(),\n            flag:true,\n         \n        };\n      }\n      componentWillReceiveProps(nextProps) {\n        if( (((this.props.date.start.toLocaleDateString()!== nextProps.date.start.toLocaleDateString()) || (this.props.date.end.toLocaleDateString()!== nextProps.date.end.toLocaleDateString() ))) \n        && (this.state.flag===true)){\n\n           this.setState({one: this.dataInitOne(),\n            tow: this.dataInitTow(),\n            three: this.dataInitThree()});\n          \n        }\n      }\n      shouldComponentUpdate(nextProps, nextState) {\n        if(this.state.flag===true){\n          this.setState({one: this.dataInitOne(),\n            tow: this.dataInitTow(),\n            three: this.dataInitThree(),flag:false});\n          return true;\n        }\n       return false;\n        \n      }\n      dataInitOne(){\n        let dataInit=[];\n        let listMonth=['January','February','March','April',\n        'May','June','July','August','September',\n        'October','November','December'];\n          let temp=new Date();\n         //let temp=new Date(2020,8);\n        let tempMonth=temp.getMonth()-2;\n        if(tempMonth<0){tempMonth+=12}\n     \n        let monthDay =new Date(temp.getFullYear(), temp.getMonth()-4, 0).getDate();\n      \n     \n      \n           for (let i=1;i<=monthDay;i++){\n            dataInit.push( { name: String(i), Fail:0, Success:0 });\n        }\n   \n        if(store.getState().saltReturns.saltReturns!==null){\n        let funSaltReturns=store.getState().saltReturns.saltReturns\n      //   .filter((item)=>{return item.full_ret.fun === \"state.apply\"})\n        .filter((item)=>{\n      if(tempMonth===parseInt(item.jid.slice(4,6))){return item;}\n      })\n      .forEach((item,index) => {\n        let place= (parseInt(item.jid.slice(6,8))-1);\n        \n        let flag=0;\n        let res=true;\n      \n        let temp =Object.entries(item.return);\n        if(Array.isArray(item.return)){ res=true;  res === true ?(dataInit[place].Success++):(dataInit[place].Fail++);}\n        else{\n\n          let dataTemp=Object.entries(item.return).map((e,index,arr) => {\n            if(e[1].result === false && flag===0){\n             dataInit[place].Fail++;\n             flag=1;\n         \n            }\n           if(index===arr.length-1 && flag === 0){\n             dataInit[place].Success++;\n           }\n      \n        \n         });\n \n      }\n\n\n\n\n        })\n\n        }\n\n        return dataInit;\n      \n      }\n\n\n      dataInitTow(){\n        let dataInit=[];\n        let listMonth=['January','February','March','April',\n        'May','June','July','August','September',\n        'October','November','December'];\n        let temp=new Date();\n        //let temp=new Date(2020,8);\n        let tempMonth=temp.getMonth()-1;\n        if(tempMonth<0){tempMonth+=12}\n   \n        let monthDay =new Date(temp.getFullYear(), temp.getMonth()-3, 0).getDate();\n      \n     \n      \n           for (let i=1;i<=monthDay;i++){\n            dataInit.push( { name: String(i), Fail:0, Success:0 });\n        }\n       \n     \n        if(store.getState().saltReturns.saltReturns!==null){\n        let funSaltReturns=store.getState().saltReturns.saltReturns\n      //   .filter((item)=>{return item.full_ret.fun === \"state.apply\"})\n      .filter((item)=>{\n      if(tempMonth===parseInt(item.jid.slice(4,6))){return item;}\n      })\n      .forEach((item,index) => {\n          let place= (parseInt(item.jid.slice(6,8))-1);\n         let flag=0;\n         let res=true;\n    \n         if(Array.isArray(item.return)){ res=true;   {res === true ?(dataInit[place].Success++):(dataInit[place].Fail++)}}\n         else{\n          let dataTemp=Object.entries(item.return).map((e,index,arr) => {\n            if(e[1].result === false && flag===0){\n             dataInit[place].Fail++;\n             flag=1;\n            }\n           if(index===arr.length-1 && flag === 0){\n             dataInit[place].Success++;\n           }\n      \n        \n         });\n \n      }\n\n\n        })\n\n        }\n        \n \n        return dataInit;\n      \n      }\n\n      dataInitThree(){\n        let dataInit=[];\n       \n        let temp=new Date();\n        //let temp=new Date(2020,8);\n        let tempMonth=temp.getMonth();\n        if(tempMonth<0){tempMonth+=12}\n    \n      \n        let monthDay =new Date(temp.getFullYear(), temp.getMonth()-2, 0).getDate();\n       \n        // this.state.nameThree=this.state.month[monthDay-2];\n        //console.log(this.state.month,\"this.state.month\");\n           for (let i=1;i<=monthDay;i++){\n            dataInit.push( { name: String(i), Fail:0, Success:0 });\n        }\n  \n        if(store.getState().saltReturns.saltReturns!==null){\n        let funSaltReturns=store.getState().saltReturns.saltReturns\n         //.filter((item)=>{return item.full_ret.fun === \"state.apply\"})\n       .filter((item)=>{\n      if(tempMonth===parseInt(item.jid.slice(4,6))){return item;}\n       })\n      .forEach((item,index) => {\n     \n        let place= (parseInt(item.jid.slice(6,8))-1);\n        let res=true;\n        let flag=0;\n      \n       if(Array.isArray(item.return)){ res=true;   {res === true ?(dataInit[place].Success++):(dataInit[place].Fail++)}}\n       else{\n        \n        let dataTemp=Object.entries(item.return).map((e,index,arr) => {\n          if(e[1].result === false && flag===0){\n           dataInit[place].Fail++;\n           flag=1;\n           \n          }\n         if(index===arr.length-1 && flag === 0){\n           dataInit[place].Success++;\n         }\n      \n      \n       });\n      \n    }\n        \n\n        })\n\n        }\n  \n        return dataInit;\n      \n      }\n\n\n      componentDidMount(){\n       \n      }\n   \n    render() {\n        let listMonth=['January','February','March','April',\n        'May','June','July','August','September',\n        'October','November','December'];\n        let temp=new Date();\n        let tempMonth=temp.getMonth();\n        if((tempMonth-1)<0){tempMonth+=12;}\n        this.state.nameThree=listMonth[tempMonth-1];\n        if((tempMonth-2)<0){tempMonth+=12;}\n        this.state.nameTow=listMonth[tempMonth-2];\n        if((tempMonth-3)<0){tempMonth+=12;}\n        this.state.nameOne=listMonth[tempMonth-3];\n    \n        return (\n            \n            <TreeView\n            className={this.props.classes.root}\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpandIcon={<ChevronRightIcon />}\n            >\n                <TreeItem nodeId=\"1\" label={this.state.nameOne} >\n                    <BarChart\n                    width={1170}\n                    height={500}\n                    data={this.state.one}\n                    margin={{\n                    top: 5, right: 20, left: 10, bottom: 5,\n                    }}\n                    >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\n                    <ReferenceLine y={0} stroke=\"#000\" />\n                    <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" />\n                    <Bar dataKey=\"Fail\" fill=\"#ff6666\"/>\n                    <Bar dataKey=\"Success\" fill=\"#82ca9d\" />\n                </BarChart>\n                </TreeItem>\n\n                <TreeItem nodeId=\"2\" label={this.state.nameTow}>\n                    <BarChart\n                    width={1170}\n                    height={500}\n                    data={this.state.tow}\n                    margin={{\n                    top: 5, right: 20, left: 10, bottom: 5,\n                    }}\n                    >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\n                    <ReferenceLine y={0} stroke=\"#000\" />\n                    <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" />\n                    <Bar dataKey=\"Fail\" fill=\"#ff6666\"/>\n                    <Bar dataKey=\"Success\" fill=\"#82ca9d\" />\n                    </BarChart>\n                </TreeItem>\n\n\n                <TreeItem nodeId=\"3\" label={this.state.nameThree}>\n                    <BarChart\n                    width={1170}\n                    height={500}\n                    data={this.state.three}\n                    margin={{\n                    top: 5, right: 20, left: 10, bottom: 5,\n                    }}\n                    >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\n                    <ReferenceLine y={0} stroke=\"#000\" />\n                    <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" />\n                    <Bar dataKey=\"Fail\" fill=\"#ff6666\"/>\n                    <Bar dataKey=\"Success\" fill=\"#82ca9d\" />\n                    </BarChart>\n                </TreeItem>\n\n            \n            \n          </TreeView>\n\n          \n       \n        );\n      }\n    }\n    \n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n      saltReturns: state.saltReturns,\n      date: state.date\n  }\n}\nexport default connect(mapStateToProps)(withStyles(styles)(LastThreeMonths));","import { withStyles } from \"@material-ui/core/styles\";\r\nimport React, { PureComponent } from 'react';\r\nimport store from '../store';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from 'axios';\r\nconst styles = theme => ({\r\n    root: {\r\n        minWidth: 345,\r\n        maxWidth: 400,\r\n        margin:theme.spacing(2.5),\r\n       \r\n      },\r\n      media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n      },\r\n      expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n          duration: theme.transitions.duration.shortest,\r\n        }),\r\n      },\r\n      expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n      },\r\n      avatar: {\r\n        backgroundColor: red[500],\r\n      },\r\n      paragraph:{\r\n          paddingLeft:theme.spacing(7.8),\r\n          wordWrap:'break-word',\r\n      },\r\n});\r\n\r\nconst tokenConfig = getState => {\r\n  // console.log(\"getstatteeeeeslatl\",getState())\r\n   // Get token from localstorage\r\n   const token = getState().auth.token;\r\n\r\n   // Headers\r\n   const config = {\r\n       headers: {\r\n          'Content-Type': 'application/json'\r\n       }\r\n   }\r\n\r\n   // If token, add to headers\r\n   if(token) {\r\n      config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n   }\r\n\r\nreturn config;\r\n}\r\nclass TeamCard extends React.Component {\r\n    constructor(props) {\r\n        super(props); \r\n        //this.handleExpandClick = this.handleExpandClick.bind(this);\r\n        this.deleteIcon = this.deleteIcon.bind(this);\r\n        this.handleClickOpen = this.handleClickOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.state={expanded:false,UpperCase:'',open:false,isDelete:false};\r\n        let strName=this.props.first_name.toUpperCase();\r\n        this.props.first_name !== ''?this.state.UpperCase=this.props.first_name.toUpperCase()[0]:this.state.UpperCase=\"\";\r\n    }\r\n    handleClose(){\r\n      this.setState((prevState) => ({open:!prevState.open}));\r\n      const { password, ReturnPassword,Role,Email,first_name,last_name } = this.state;\r\n      const body = JSON.stringify({first_name:first_name,last_name:last_name,role:Role,email:Email, password:password });\r\n      axios.delete(\"/delete/\"+this.props.id, tokenConfig(store.getState))\r\n      .then((res)=> {\r\n        this.setState({isDelete:true});});\r\n          //  this.props.arr=temp;\r\n    }\r\n    handleClickOpen(){\r\n      this.setState((prevState) => ({open:!prevState.open}));\r\n    }\r\n    deleteIcon(){\r\n\r\n    }\r\n    // handleExpandClick(){\r\n    //       this.setState((prevState) => ({expanded:!prevState.expanded}));\r\n    // }\r\n\r\n\r\n\r\n    render()\r\n    {\r\n      const colors = ['#ff0000', '#00ff00', '#0000ff'];\r\n      const random_color = colors[Math.floor(Math.random() * colors.length)];\r\n      //console.log(this.props);\r\n        return (\r\n      this.state.isDelete===false?\r\n      (<Card className={this.props.classes.root}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"recipe\" className={this.props.classes.avatar}>\r\n              {this.state.UpperCase}\r\n            </Avatar>\r\n          }\r\n      // action={\r\n      //       <IconButton aria-label=\"settings\">\r\n      //         <AccountCircleIcon />\r\n      //       </IconButton>\r\n      //     }first_name\r\n          title={this.props.first_name+' '+this.props.last_name}\r\n          subheader={this.props.role}\r\n        />\r\n      \r\n        <CardContent>\r\n          <Typography paragraph className={this.props.classes.paragraph}>\r\n          Email:{this.props.mail}\r\n          </Typography>\r\n          <Typography paragraph className={this.props.classes.paragraph}>\r\n        {/* number:0549494949*/}\r\n          </Typography>\r\n\r\n        </CardContent>\r\n\r\n        <CardActions disableSpacing>\r\n        \r\n      <IconButton \r\n      aria-label=\"share\"\r\n      variant=\"outlined\" \r\n      //color=\"primary\" \r\n      onClick={this.handleClickOpen}\r\n        //onClick={this.handleExpandClick}\r\n      color='secondary'\r\n        >\r\n            <DeleteIcon />\r\n      </IconButton>\r\n      <Dialog\r\n      open={this.state.open}\r\n      onClose={this.handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n      >\r\n\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n        Are you sure you want to delete a user from the system?\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n      <Button onClick={this.handleClickOpen} color=\"primary\">\r\n        Cancel\r\n      </Button>\r\n        <Button onClick={this.handleClose} color=\"secondary\" autoFocus>\r\n          Delete\r\n        </Button>\r\n      </DialogActions>\r\n      </Dialog>\r\n      {/*\r\n          <IconButton\r\n            className={clsx(this.props.classes.expand, {\r\n              [this.props.classes.expandOpen]: this.state.expanded,\r\n            })}\r\n            onClick={this.handleExpandClick}\r\n            aria-expanded={this.state.expanded}\r\n            aria-label=\"show more\"\r\n          >\r\n            <ExpandMoreIcon />\r\n          </IconButton>\r\n          */}\r\n        </CardActions>\r\n\r\n\r\n        {/*<Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <Typography paragraph>\r\n              Heat\r\n            </Typography>\r\n          </CardContent>\r\n        </Collapse>*/}\r\n      </Card>)\r\n:<div></div>\r\n    \r\n\r\n\r\n          );\r\n        }\r\n    \r\n}\r\n\r\nexport default withStyles(styles)(TeamCard);","\nimport { withStyles } from \"@material-ui/core/styles\";\nimport React, { PureComponent } from 'react';\nimport store from '../store';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Button from '@material-ui/core/Button';\n\nimport {REGISTER_SUCCESS,REGISTER_FAIL} from '../actions/types';\nimport {returnErrors}  from '../actions/errorActions';\n\nimport IconButton from '@material-ui/core/IconButton';\n\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport TeamCard from './TeamCard';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { ContactsOutlined } from \"@material-ui/icons\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { teamList } from '../actions/date';\nimport axios from 'axios';\nconst styles = theme => ({\n    root: {\n      // maxWidth: 1000,\n      // display: 'flex',\n      // flexDirection: 'row',\n      // flexWrap:'warp',\n      //justifyContent:'space-around', \n      display: 'flex',\n      flexDirection: 'row',\n      flexFlow: 'row wrap',\n      maxWidth:1300,\n      justifyContent:'space around'\n\n      },\n      field:{\n        display: 'flex',\n        flexDirection: 'column',\n        maxWidth:250,\n        justifyContent:'space around',\n        marginTop:theme.spacing(0),\n        marginLeft:theme.spacing(55.5),\n      },\n      input:{\n        paddingTop:theme.spacing(2),\n        paddingLeft:theme.spacing(-4)\n      },\n      paragraph:{\n          paddingLeft:theme.spacing(7.8)\n      },\n      fab:{\n        color:'#fff',\n        //cursor: 'pointer',\n        border:'none',\n        outline: 'none',\n        outlineOffset: 'none',\n        marginLeft:theme.spacing(4),\n        marginTop:theme.spacing(4)\n      },\n      button:{\n        marginTop:theme.spacing(6)\n      },\n      form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n      },\n      msg:{\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n    },\n});\n\n const tokenConfig = getState => {\n    // console.log(\"getstatteeeeeslatl\",getState())\n     // Get token from localstorage\n     const token = getState().auth.token;\n \n     // Headers\n     const config = {\n         headers: {\n            'Content-Type': 'application/json'\n         }\n     }\n \n     // If token, add to headers\n     if(token) {\n        config.headers[\"Authorization\"] = ` Bearer ${token} `;\n     }\n \n  return config;\n }\nclass Team extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleExpandClick = this.handleExpandClick.bind(this);\n        this.ClickFab = this.ClickFab.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.signIn = this.signIn.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleClickShowPassword = this.handleClickShowPassword.bind(this);\n        this.handleMouseDownPassword = this.handleMouseDownPassword.bind(this);\n        this.handleClickShowPasswordReturn = this.handleClickShowPasswordReturn.bind(this);\n        this.handleMouseDownPasswordReturn = this.handleMouseDownPasswordReturn.bind(this);\n        this.initTeam = this.initTeam.bind(this);\n        //this.handleCloseAlert = this.handleCloseAlert.bind(this);\n        this.state=\n        {\n          expanded:false,\n          fab:false,\n          first_name:'',\n          last_name:'',\n          Role:'',\n          Email:'',\n          Password:'',\n          ReturnPassword:'',\n          showPasswordReturn:'password',\n          showPassword:'password',\n          errPassword:false,\n          saveCard:false,\n          Team:[],\n          counter:0,\n          err_first_name:false,\n          err_last_name:false,\n          err_Role:false,\n          err_Email:false,\n          err_Password:false,\n          no_add_card:false,\n          \n        };\n        this.initTeam();\n    }\n\n    initTeam(){\n      axios.get('/get_users',tokenConfig(store.getState))\n      .then((res) => { \n       \n        this.setState({Team:res.data});\n      })\n      .catch(err => {\n          console.log(err);\n  \n         });\n   \n      \n    }\n\n    handleClickShowPassword(){\n      this.setState({showPassword:'text'});\n    }\n    handleMouseDownPassword(){\n      this.setState({showPassword:'password'});\n    }\n    handleClickShowPasswordReturn(){\n      this.setState({showPasswordReturn:'text'});\n    }\n    handleMouseDownPasswordReturn(){\n      this.setState({showPasswordReturn:'password'});\n    }\n\n\n\n\n\n\n\n\n\n    handleExpandClick(){\n          this.setState((prevState) => ({expanded:!prevState.expanded}));\n    }\n \n    ClickFab(){\n      this.setState((prevState) => ({\n      fab:!prevState.fab,password:'',\n      first_name:'',\n      lastName:'',\n      Role:'',\n      Email:'',\n      Password:'',\n      ReturnPassword:'',}));\n    \n    }\n   \n    signIn(event){\n      \n      event.preventDefault();\n      const { password, ReturnPassword,Role,Email,first_name,last_name } = this.state;\n      //send cardTeam to server\n      //console.log(\"event.preventDefault()\");\n      const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\n      const emailRegex = new RegExp(\"[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,6}\");    \n      let flag=true;\n      if((strongRegex.test(password)===false) || ( password.length>30)  ){flag=false;this.setState({err_Password:true});setTimeout(()=>{this.setState({err_Password:false});}, 10000);}\n      if(first_name.length>30 ){flag=false;this.setState({err_first_name:true});setTimeout(()=>{this.setState({err_first_name:false});}, 6000);}\n      if(last_name.length>30 ){flag=false;this.setState({err_last_name:true});setTimeout(()=>{this.setState({err_last_name:false});}, 6000);}\n      if(Role.length>30 ){flag=false;this.setState({err_Role:true});setTimeout(()=>{this.setState({err_Role:false});}, 6000);}\n      if((Email.length>50) || (emailRegex.test(this.state.Email.toUpperCase())===false)){flag=false;this.setState({err_Email:true});setTimeout(()=>{this.setState({err_Email:false});}, 6000);}\n      if (password===ReturnPassword){}\n      else\n      {\n        this.setState({errPassword:true});\n        setTimeout(()=>{this.setState({errPassword:false});}, 6000);\n      }\n\n      if((password===ReturnPassword) && (flag===true)){\n\n        this.setState((prevState) => ({fab:false}));\n         \n\n            const body = JSON.stringify({first_name:first_name,last_name:last_name,role:Role,email:Email, password:password });\n            //console.log(body,'body')\n            axios.post(\"/register\", body, tokenConfig(store.getState))\n          .then(res => \n            {\n              this.state.Team.push({first_name:first_name,mail:Email,role:Role,last_name:last_name});\n              this.setState({saveCard:true});\n              setTimeout(()=>{this.setState({saveCard:false});}, 4000);\n            }\n          )\n            .catch(err => {\n            console.log(err)\n            this.setState({no_add_card:true});\n            setTimeout(()=>{this.setState({no_add_card:false});}, 4000);\n            })\n\n            \n\n            this.setState({expanded:false,\n              fab:false,\n              first_name:'',\n              last_name:'',\n              Role:'',\n              Email:'',\n              Password:'',\n              ReturnPassword:'',\n              showPasswordReturn:'password',\n              showPassword:'password',\n              errPassword:false,\n              UnsecuredPassword:false,\n            });\n             \n           \n          \n          \n            setTimeout(()=>{this.initTeam();}, 500);\n         \n      }\n   \n      \n   \n    }\n    // shouldComponentUpdate(nextState) {\n    //   console.log(nextState,\"nextState\")\n    //   if(this.state.Password === nextState.ReturnPassword || nextState.Password === this.state.ReturnPassword){\n    //     console.log(\"7878787\")\n    //     //this.setState((prevState) => ({fab:false}));\n    //   }UnsecuredPassword:false\n    // }\n    handleInputChange(e) {\n  \n      this.setState({ [e.target.name] : e.target.value});\n      // console.log(this.state);\n    }\n    handleClose (event, reason) \n    {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        \n        this.setState({errPassword:false,saveCard:false});\n    }\n    // handleCloseAlert(event){\n      \n    //   this.setState({ [event] : false});\n    //   console.log(this.state[event],)\n    // }\n    // shouldComponentUpdate(nextProps, nextState) {\n    //   console.log(nextState,\"nextState\");\n    //  }\n    // componentWillReceiveProps(){\n    //   this.initTeam();\n    // }\n    // shouldComponentUpdate(){\n    //   this.initTeam();\n    // }\n    // componentWillUpdate(){\n    //  console.log(this.state.counter,'this.state.counter');\n    //   if(this.state.counter<=1)\n    //   { \n        \n    //     axios.get('/get_users',tokenConfig(store.getState))\n    //   .then((res) => { \n       \n    //     this.setState({Team:res.data});\n    //   })\n    //   .catch(err => {\n    //       console.log(err);\n  \n    //      });\n    //      this.setState((prevState) => ({counter:2}));\n    // }}\n     \n    render()\n   \n    {\n      \n      if(this.state.fab === false){\n\n          return(\n\n            <div>\n              \n              \n              <div className={this.props.classes.msg}>\n                <Snackbar open={this.state.saveCard} autoHideDuration={6000} onClose={this.handleClose}>\n                    <Alert onClose={this.handleClose} severity=\"success\">\n                    The system added  <strong>a new staff member   </strong>\n                    </Alert>\n                    </Snackbar>\n                </div>\n\n                <div className={this.props.classes.msg}>\n                <Snackbar open={this.state.no_add_card} autoHideDuration={6000} onClose={this.handleClose}>\n                    <Alert onClose={this.handleClose} severity=\"error\">\n                    The system   <strong> not added a new staff member   </strong>\n                    </Alert>\n                    </Snackbar>\n                </div>\n               \n                <div className={this.props.classes.root}> \n                {\n                \n                  this.state.Team.map((item,arr)=>{\n                  if(this.state.Team.length !== 0){ \n                    \n                    return <TeamCard  arr={arr} first_name={item.first_name}  last_name={item.last_name} role={item.role} mail={item.email} id={item._id}/>\n                  }\n                  \n                })\n              }\n              </div>\n              <Fab color=\"primary\" aria-label=\"add\" className={this.props.classes.fab} onClick={this.ClickFab}>\n              <AddIcon />\n            </Fab>\n           </div>\n          );\n\n      }\n\n      else\n      {\n       \n        return(\n          <div className={this.props.classes.field}>\n          <form className={this.props.classes.form} onSubmit={this.signIn} >\n            <div className={this.props.classes.input}>\n  \n              <TextField\n                className={this.props.classes.margin}\n                id=\"input-with-icon-textfield\"\n                label=\"First Name\"\n                required\n                fullWidth\n                name='first_name'\n                value={this.state.first_name}\n                onChange={this.handleInputChange}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <AccountCircle />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n  \n            </div>\n  \n            {\n              this.state.err_first_name===true?\n              (   <div className={this.props.classes.msg}>\n                \n                  <Alert onClose={() =>{this.setState({err_first_name:false})}} severity=\"error\">\n                  The first name must be less than  <strong>30 characters  </strong>\n                  </Alert>\n                  </div>\n              )\n              :<div></div>\n           }\n            <div className={this.props.classes.input}>\n  \n            <TextField\n              className={this.props.classes.margin}\n              id=\"input-with-icon-textfield\"\n              label=\"Last Name\"\n              fullWidth\n              name='last_name'\n             \n              value={this.state.last_name}\n              onChange={this.handleInputChange}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <AccountCircle />\n                  </InputAdornment>\n                ),\n              }}\n            />\n\n          </div>\n\n\n          {\n            this.state.err_last_name===true?\n            (   <div className={this.props.classes.msg}>\n              \n                <Alert onClose={() =>{this.setState({err_last_name:false})}} severity=\"error\">\n                The last name must be less than  <strong>30 characters  </strong>\n                </Alert>\n                </div>\n            )\n            :<div></div>\n         }\n            <div className={this.props.classes.input}>\n  \n              <TextField\n                className={this.props.classes.margin}\n                id=\"input-with-icon-textfield\"\n                label=\"Email\"\n                required\n                fullWidth\n                name='Email'\n                value={this.state.Email}\n                onChange={this.handleInputChange}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <AccountCircle />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n  \n            </div>\n  \n\n            {\n              this.state.err_Email===true?\n              (   <div className={this.props.classes.msg}>\n                \n                  <Alert onClose={() =>{this.setState({err_Email:false})}} severity=\"error\">\n                   <strong> Invalid mail  </strong>\n                  </Alert>\n                  </div>\n              )\n              :<div></div>\n           }\n  \n            <div className={this.props.classes.input}>\n  \n              <TextField\n                className={this.props.classes.margin}\n                id=\"input-with-icon-textfield\"\n                label=\"Role\"\n                name='Role'\n                fullWidth\n                value={this.state.Role}\n                onChange={this.handleInputChange}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <AccountCircle />\n                    </InputAdornment>\n                  ),\n                }}\n                \n              />\n  \n            </div>\n\n            {\n              this.state.err_Role===true?\n              (   <div className={this.props.classes.msg}>\n                \n                  <Alert onClose={() =>{this.setState({err_Role:false})}} severity=\"error\">\n                  The role name must be less than  <strong>30 characters  </strong>\n                  </Alert>\n                  </div>\n              )\n              :<div></div>\n           }\n            <div className={this.props.classes.input}>\n  \n              <TextField\n                className={this.props.classes.margin}\n                id=\"input-with-icon-textfield\"\n                label=\"password\"\n                //variant=\"outlined\"\n                //margin=\"normal\"\n                required\n                fullWidth\n               \n                name=\"password\"\n                label=\"Password\"\n                type={this.state.showPassword==='text'  ? 'text' : 'password'}\n                value={this.state.password}\n                onChange={this.handleInputChange}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <AccountCircle />\n                    </InputAdornment>\n                  ),\n                  endAdornment:(\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={this.handleClickShowPassword}\n                        onMouseDown={this.handleMouseDownPassword}\n                      >\n                        {this.state.showPassword==='text' ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  )\n                }}\n               \n              />\n           \n\n            </div>\n            {\n              this.state.err_Password===true?\n              (   <div className={this.props.classes.msg}>\n                \n                  <Alert onClose={() =>{this.setState({err_Password:false})}} severity=\"error\">\n                  The password <strong>must </strong>  be at least 8 characters long, and include uppercase and lowercase letters, and special characters\n                       <strong>{\"{ !, @, #, \\, $,%, \\, ^ &, \\, * }\"}  </strong>\n                  </Alert>\n                  </div>\n              )\n              :<div></div>\n           }\n            \n            <div className={this.props.classes.input}>\n  \n            <TextField\n              className={this.props.classes.margin}\n              id=\"input-with-icon-textfield\"\n              label=\"password\"\n              //variant=\"outlined\"\n              //margin=\"normal\"\n              required\n              fullWidth\n              name=\"ReturnPassword\"\n              label=\"Repeat Password\"\n              type={this.state.showPasswordReturn==='text' ? 'text' : 'password'}\n              value={this.state.ReturnPassword}\n                onChange={this.handleInputChange}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <AccountCircle />\n                  </InputAdornment>\n                ),\n                endAdornment:(\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={this.handleClickShowPasswordReturn}\n                      onMouseDown={this.handleMouseDownPasswordReturn}\n                    >\n                      {this.state.showPasswordReturn==='text' ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                )\n              }}\n             \n            />\n  \n          </div>\n\n      \n\n          {\n            this.state.errPassword===true?\n            (   <div className={this.props.classes.msg}>\n              \n                <Alert onClose={() =>{this.setState({errPassword:false})}} severity=\"error\">\n                 Passwords  <strong>unequal   </strong>\n                </Alert>\n                </div>\n            )\n            :<div></div>\n         }\n      \n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n              size=\"small\"\n              fullWidth\n              className={this.props.classes.button}\n             // onClick={this.ClickFab}\n              startIcon={<SaveIcon />}\n            >\n              Save\n              </Button>\n             \n          </form> \n            \n          </div>\n        )\n      }\n   \n    \n    }\n  }\n\nexport default withStyles(styles)(Team);","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nimport Graph from './Component/Graph';\r\nimport SearchTime from './Component/SearchTime';\r\nimport Table from './Component/Table';\r\nimport MinionCard from './Component/MinionCard';\r\nimport { saltReturns } from './actions/date';\r\nimport { CurrentMonthFun } from './actions/date';\r\nimport { CurrentYearFun } from './actions/date';\r\nimport store from './store';\r\nimport { Logout } from './Component/auth/Logout';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SimCardIcon from '@material-ui/icons/SimCard';\r\n\r\nimport SaltStack from './Component/SaltStack';\r\nimport SearchTimeGraph from './Component/SearchTimeGraph';\r\nimport CurrentMonth from './Component/CurrentMonth';\r\n\r\nimport CurrentYear from './Component/CurrentYear';\r\nimport LastThreeMonths from './Component/LastThreeMonths';\r\nimport Team from './Component/Team';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nimport {\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListSubheader\r\n}from '@material-ui/core/';\r\n\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport { listMinions } from './actions/date';\r\n //while(store.getState().saltReturns.saltReturns===null);\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    paddingRight: theme.spacing(3.5),\r\n    paddingTop:theme.spacing(2),\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  table: {\r\n    // marginLeft:theme.spacing(0),\r\n    // marginTop:theme.spacing(4),\r\n    paddingRight: 3.5,\r\n    paddingTop:1,\r\n    paddingLeft:1,\r\n    paddingBottom: 3,\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  \r\n  },\r\n  fixedHeight: {\r\n    height: 363,\r\n  },\r\n  fixedHeightFirst:{\r\n    marginTop:theme.spacing(2),\r\n    height: 235,\r\n  },\r\n  fixedHeightTow:{\r\n   // marginTop:theme.spacing(2),\r\n    height: 113,\r\n  },\r\n  Logout:{\r\n   \r\n  },\r\n  AccountCircleIcon:{\r\n  \r\n  },\r\n  NotificationsIcon:{\r\n    display:'flex',\r\n    justifyContent:'space-between',\r\n    width:43\r\n  }\r\n});\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      //console.log(store.getState(),\"store from dashboard 1\");\r\n      //store.dispatch(saltReturns());\r\n      store.dispatch(CurrentMonthFun());\r\n      store.dispatch(CurrentYearFun());\r\n     // store.dispatch(listMinions());\r\n      //console.log(store.getState(),\"store from dashboard 2\");\r\n      this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\r\n      this.handleDrawerClose = this.handleDrawerClose.bind(this);\r\n      this.SelectMenu = this.SelectMenu.bind(this);\r\n      this.state={open:true,menu:\"Dashboard\"};\r\n      console.log(store.getState(),\"store.getState()\")\r\n  }\r\n  \r\n \r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({open:true});\r\n  };\r\n  handleDrawerClose = () => {\r\n    this.setState({open:false});\r\n  };\r\n \r\n  SelectMenu = (str) => {\r\n    this.setState({menu:str});\r\n  };\r\n  render(){  \r\n    const fixedHeightPaper = clsx(this.props.classes.paper, this.props.classes.fixedHeight);\r\n    const fixedHeightPaperFirst = clsx(this.props.classes.paper, this.props.classes.fixedHeightFirst);\r\n    const fixedHeightPaperTow = clsx(this.props.classes.paper, this.props.classes.fixedHeightTow);\r\n    \r\n    if(this.state.menu==='Dashboard')\r\n    {\r\n      return (\r\n        <div className={this.props.classes.root}>\r\n    \r\n          <CssBaseline />\r\n          <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n    \r\n            <Toolbar className={this.props.classes.toolbar}>\r\n          \r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={this.handleDrawerOpen}\r\n                className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n              >\r\n    \r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n                Dashboard\r\n              </Typography>\r\n              \r\n             \r\n\r\n          \r\n\r\n                <Logout />\r\n             \r\n            \r\n            \r\n         \r\n    \r\n            </Toolbar>\r\n          </AppBar>\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            classes={{\r\n              paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n            }}\r\n            open={this.state.open}\r\n          >\r\n            <div className={this.props.classes.toolbarIcon}>\r\n              <IconButton onClick={this.handleDrawerClose}>\r\n                <ChevronLeftIcon />\r\n              </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n    \r\n            <ListItem button\r\n            onClick={()=>{this.SelectMenu('Dashboard')}}\r\n            >\r\n            <ListItemIcon>\r\n              <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dashboard\" />\r\n          </ListItem>\r\n          <ListItem button\r\n          onClick={()=>{this.SelectMenu('Commands')}}\r\n          >\r\n            <ListItemIcon>\r\n            <SimCardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Commands\" />\r\n          </ListItem>\r\n          <ListItem button\r\n          onClick={()=>{this.SelectMenu('Team')}}\r\n          >\r\n            <ListItemIcon>\r\n              <PeopleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Team\" />\r\n          </ListItem>\r\n         \r\n            </List>\r\n            <Divider />\r\n            <ListSubheader inset>Saved reports</ListSubheader>\r\n            <List>\r\n            <ListItem button   onClick={()=>{this.SelectMenu('Current month')}}>\r\n            <ListItemIcon>\r\n              <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Current month\" />\r\n          </ListItem>\r\n          <ListItem button   onClick={()=>{this.SelectMenu('Last three months')}}>\r\n            <ListItemIcon>\r\n              <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Last three months\" />\r\n          </ListItem>\r\n          <ListItem button   onClick={()=>{this.SelectMenu('Current year')}}>\r\n            <ListItemIcon>\r\n              <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Current year\" />\r\n          </ListItem>\r\n            \r\n            \r\n            \r\n            </List>\r\n          </Drawer>\r\n          <main className={this.props.classes.content}>\r\n            <div className={this.props.classes.appBarSpacer} />\r\n            <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n              <Grid container spacing={3}>\r\n                {/* Graph */}\r\n                <Grid item xs={12} md={8} lg={9}>\r\n                  <Paper className={fixedHeightPaper}>\r\n                    <Graph />\r\n                  </Paper>\r\n                </Grid>\r\n                {/* Recent SearchTime */}\r\n                <Grid item xs={12} md={4} lg={3}>\r\n                <Paper className={fixedHeightPaperTow}>\r\n                    < SearchTimeGraph />\r\n                  </Paper>\r\n                  <Paper className={fixedHeightPaperFirst}>\r\n                    <SearchTime />\r\n                  </Paper>\r\n                  \r\n                </Grid>\r\n                {/* Recent Table */}\r\n                <Grid item xs={20}>\r\n                  <div className={this.props.classes.paper}>\r\n                    <Table />\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n       \r\n    \r\n          </main>\r\n    \r\n        </div>\r\n      );\r\n    }\r\n      else if (this.state.menu==='Commands'){\r\n\r\n        return (\r\n          <div className={this.props.classes.root}>\r\n      \r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n      \r\n            <Toolbar className={this.props.classes.toolbar}>\r\n          \r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={this.handleDrawerOpen}\r\n              className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n            >\r\n  \r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n            Commands\r\n            </Typography>\r\n            \r\n           \r\n\r\n           \r\n\r\n              <Logout />\r\n           \r\n          \r\n          \r\n       \r\n  \r\n          </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n              variant=\"permanent\"\r\n              classes={{\r\n                paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n              }}\r\n              open={this.state.open}\r\n            >\r\n              <div className={this.props.classes.toolbarIcon}>\r\n                <IconButton onClick={this.handleDrawerClose}>\r\n                  <ChevronLeftIcon />\r\n                </IconButton>\r\n              </div>\r\n              <Divider />\r\n              <List>\r\n      \r\n              <ListItem button\r\n              onClick={()=>{this.SelectMenu('Dashboard')}}\r\n              >\r\n              <ListItemIcon>\r\n                <DashboardIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Dashboard\" />\r\n            </ListItem>\r\n            <ListItem button\r\n            onClick={()=>{this.SelectMenu('Commands')}}\r\n            >\r\n              <ListItemIcon>\r\n                <SimCardIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Commands\" />\r\n            </ListItem>\r\n            <ListItem button\r\n            onClick={()=>{this.SelectMenu('Team')}}\r\n            >\r\n              <ListItemIcon>\r\n                <PeopleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Team\" />\r\n            </ListItem>\r\n           \r\n              </List>\r\n              <Divider />\r\n\r\n              <ListSubheader inset>Saved reports</ListSubheader>\r\n\r\n              <List>\r\n              <ListItem button   onClick={()=>{this.SelectMenu('Current month')}}>\r\n              <ListItemIcon>\r\n                <AssignmentIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Current month\" />\r\n            </ListItem>\r\n            <ListItem button   onClick={()=>{this.SelectMenu('Last three months')}}>\r\n              <ListItemIcon>\r\n                <AssignmentIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Last three months\" />\r\n            </ListItem>\r\n            <ListItem button   onClick={()=>{this.SelectMenu('Current year')}}>\r\n              <ListItemIcon>\r\n                <AssignmentIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Current year\" />\r\n            </ListItem>\r\n              \r\n              \r\n              \r\n              </List>\r\n\r\n\r\n\r\n\r\n\r\n            </Drawer>\r\n\r\n            <main className={this.props.classes.content}>\r\n              <div className={this.props.classes.appBarSpacer} />\r\n              <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n\r\n              <Grid item  xs >\r\n              <div className={this.props.classes.table}>\r\n                  <SaltStack/>\r\n              </div>\r\n   \r\n                </Grid>\r\n\r\n              </Container>\r\n            </main>\r\n      \r\n          </div>\r\n        );}\r\n\r\n\r\n\r\n        else if (this.state.menu==='Current month'){\r\n\r\n          return (\r\n            <div className={this.props.classes.root}>\r\n        \r\n              <CssBaseline />\r\n              <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n        \r\n              <Toolbar className={this.props.classes.toolbar}>\r\n            \r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={this.handleDrawerOpen}\r\n                className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n              >\r\n    \r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n              Current month\r\n              </Typography>\r\n              \r\n             \r\n  \r\n  \r\n                <Logout />\r\n             \r\n            \r\n            \r\n         \r\n    \r\n            </Toolbar>\r\n              </AppBar>\r\n              <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                  paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n                }}\r\n                open={this.state.open}\r\n              >\r\n                <div className={this.props.classes.toolbarIcon}>\r\n                  <IconButton onClick={this.handleDrawerClose}>\r\n                    <ChevronLeftIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n        \r\n                <ListItem button\r\n                onClick={()=>{this.SelectMenu('Dashboard')}}\r\n                >\r\n                <ListItemIcon>\r\n                  <DashboardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Dashboard\" />\r\n              </ListItem>\r\n              <ListItem button\r\n              onClick={()=>{this.SelectMenu('Commands')}}\r\n              >\r\n                <ListItemIcon>\r\n                  <SimCardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Commands\" />\r\n              </ListItem>\r\n              <ListItem button\r\n              onClick={()=>{this.SelectMenu('Team')}}\r\n              >\r\n                <ListItemIcon>\r\n                  <PeopleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Team\" />\r\n              </ListItem>\r\n              \r\n                </List>\r\n                <Divider />\r\n  \r\n                <ListSubheader inset>Saved reports</ListSubheader>\r\n  \r\n                <List>\r\n                <ListItem button   onClick={()=>{this.SelectMenu('Current month')}}>\r\n                <ListItemIcon>\r\n                  <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Current month\" />\r\n              </ListItem>\r\n              <ListItem button   onClick={()=>{this.SelectMenu('Last three months')}}>\r\n                <ListItemIcon>\r\n                  <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Last three months\" />\r\n              </ListItem>\r\n              <ListItem button   onClick={()=>{this.SelectMenu('Current year')}}>\r\n                <ListItemIcon>\r\n                  <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Current year\" />\r\n              </ListItem>\r\n                \r\n                \r\n                \r\n                </List>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n              </Drawer>\r\n  \r\n              <main className={this.props.classes.content}>\r\n                <div className={this.props.classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n  \r\n                <Grid item  xs >\r\n                <div className={this.props.classes.table}>\r\n                    <CurrentMonth/>\r\n                </div>\r\n     \r\n                  </Grid>\r\n  \r\n                </Container>\r\n              </main>\r\n        \r\n            </div>\r\n          );\r\n              }\r\n\r\n              \r\n        else if (this.state.menu==='Current year'){\r\n\r\n          return (\r\n            <div className={this.props.classes.root}>\r\n        \r\n              <CssBaseline />\r\n              <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n        \r\n              <Toolbar className={this.props.classes.toolbar}>\r\n            \r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={this.handleDrawerOpen}\r\n                className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n              >\r\n    \r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n              Current year\r\n              </Typography>\r\n              \r\n             \r\n  \r\n          \r\n  \r\n                <Logout />\r\n             \r\n            \r\n            \r\n         \r\n    \r\n            </Toolbar>\r\n              </AppBar>\r\n              <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                  paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n                }}\r\n                open={this.state.open}\r\n              >\r\n                <div className={this.props.classes.toolbarIcon}>\r\n                  <IconButton onClick={this.handleDrawerClose}>\r\n                    <ChevronLeftIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n        \r\n                <ListItem button\r\n                onClick={()=>{this.SelectMenu('Dashboard')}}\r\n                >\r\n                <ListItemIcon>\r\n                  <DashboardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Dashboard\" />\r\n              </ListItem>\r\n              <ListItem button\r\n              onClick={()=>{this.SelectMenu('Commands')}}\r\n              >\r\n                <ListItemIcon>\r\n                  <SimCardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Commands\" />\r\n              </ListItem>\r\n              <ListItem button\r\n              onClick={()=>{this.SelectMenu('Team')}}\r\n              >\r\n                <ListItemIcon>\r\n                  <PeopleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Team\" />\r\n              </ListItem>\r\n             \r\n                </List>\r\n                <Divider />\r\n  \r\n                <ListSubheader inset>Saved reports</ListSubheader>\r\n  \r\n                <List>\r\n                <ListItem button   onClick={()=>{this.SelectMenu('Current month')}}>\r\n                <ListItemIcon>\r\n                  <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Current month\" />\r\n              </ListItem>\r\n              <ListItem button   onClick={()=>{this.SelectMenu('Last three months')}}>\r\n                <ListItemIcon>\r\n                  <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Last three months\" />\r\n              </ListItem>\r\n              <ListItem button   onClick={()=>{this.SelectMenu('Current year')}}>\r\n                <ListItemIcon>\r\n                  <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Current year\" />\r\n              </ListItem>\r\n                \r\n                \r\n                \r\n                </List>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n              </Drawer>\r\n  \r\n              <main className={this.props.classes.content}>\r\n                <div className={this.props.classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n  \r\n                <Grid item  xs >\r\n                <div className={this.props.classes.table}>\r\n                    <CurrentYear/>\r\n                </div>\r\n     \r\n                  </Grid>\r\n  \r\n                </Container>\r\n              </main>\r\n        \r\n            </div>\r\n          );\r\n              }\r\n\r\n             \r\n              \r\n\r\n              else if (this.state.menu==='Last three months'){\r\n\r\n                return (\r\n                  <div className={this.props.classes.root}>\r\n              \r\n                    <CssBaseline />\r\n                    <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n              \r\n                    <Toolbar className={this.props.classes.toolbar}>\r\n                  \r\n                    <IconButton\r\n                      edge=\"start\"\r\n                      color=\"inherit\"\r\n                      aria-label=\"open drawer\"\r\n                      onClick={this.handleDrawerOpen}\r\n                      className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n                    >\r\n          \r\n                      <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n                    Last three months\r\n                    </Typography>\r\n                    \r\n                   \r\n        \r\n                 \r\n        \r\n                      <Logout />\r\n                   \r\n                  \r\n                  \r\n               \r\n          \r\n                  </Toolbar>\r\n                    </AppBar>\r\n                    <Drawer\r\n                      variant=\"permanent\"\r\n                      classes={{\r\n                        paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n                      }}\r\n                      open={this.state.open}\r\n                    >\r\n                      <div className={this.props.classes.toolbarIcon}>\r\n                        <IconButton onClick={this.handleDrawerClose}>\r\n                          <ChevronLeftIcon />\r\n                        </IconButton>\r\n                      </div>\r\n                      <Divider />\r\n                      <List>\r\n              \r\n                      <ListItem button\r\n                      onClick={()=>{this.SelectMenu('Dashboard')}}\r\n                      >\r\n                      <ListItemIcon>\r\n                        <DashboardIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Dashboard\" />\r\n                    </ListItem>\r\n                    <ListItem button\r\n                    onClick={()=>{this.SelectMenu('Commands')}}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <SimCardIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Commands\" />\r\n                    </ListItem>\r\n                    <ListItem button\r\n                    onClick={()=>{this.SelectMenu('Team')}}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <PeopleIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Team\" />\r\n                    </ListItem>\r\n                  \r\n                  \r\n                      </List>\r\n                      <Divider />\r\n        \r\n                      <ListSubheader inset>Saved reports</ListSubheader>\r\n        \r\n                      <List>\r\n                      <ListItem button   onClick={()=>{this.SelectMenu('Current month')}}>\r\n                      <ListItemIcon>\r\n                        <AssignmentIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Current month\" />\r\n                    </ListItem>\r\n                    <ListItem button   onClick={()=>{this.SelectMenu('Last three months')}}>\r\n                      <ListItemIcon>\r\n                        <AssignmentIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Last three months\" />\r\n                    </ListItem>\r\n                    <ListItem button   onClick={()=>{this.SelectMenu('Current year')}}>\r\n                      <ListItemIcon>\r\n                        <AssignmentIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Current year\" />\r\n                    </ListItem>\r\n                      \r\n                      \r\n                      \r\n                      </List>\r\n        \r\n        \r\n        \r\n        \r\n        \r\n                    </Drawer>\r\n        \r\n                    <main className={this.props.classes.content}>\r\n                      <div className={this.props.classes.appBarSpacer} />\r\n                      <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n        \r\n                      <Grid item  xs >\r\n                      <div className={this.props.classes.table}>\r\n                          <LastThreeMonths/>\r\n                      </div>\r\n           \r\n                        </Grid>\r\n        \r\n                      </Container>\r\n                    </main>\r\n              \r\n                  </div>\r\n                );\r\n                    }\r\n                    \r\n              else if (this.state.menu==='Team'){\r\n\r\n                return (\r\n                  <div className={this.props.classes.root}>\r\n              \r\n                    <CssBaseline />\r\n                    <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n              \r\n                    <Toolbar className={this.props.classes.toolbar}>\r\n                  \r\n                    <IconButton\r\n                      edge=\"start\"\r\n                      color=\"inherit\"\r\n                      aria-label=\"open drawer\"\r\n                      onClick={this.handleDrawerOpen}\r\n                      className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n                    >\r\n          \r\n                      <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n                    Team\r\n                    </Typography>\r\n                    \r\n                   \r\n        \r\n                     \r\n        \r\n                      <Logout />\r\n                   \r\n                  \r\n                  \r\n               \r\n          \r\n                  </Toolbar>\r\n                    </AppBar>\r\n                    <Drawer\r\n                      variant=\"permanent\"\r\n                      classes={{\r\n                        paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n                      }}\r\n                      open={this.state.open}\r\n                    >\r\n                      <div className={this.props.classes.toolbarIcon}>\r\n                        <IconButton onClick={this.handleDrawerClose}>\r\n                          <ChevronLeftIcon />\r\n                        </IconButton>\r\n                      </div>\r\n                      <Divider />\r\n                      <List>\r\n              \r\n                      <ListItem button\r\n                      onClick={()=>{this.SelectMenu('Dashboard')}}\r\n                      >\r\n                      <ListItemIcon>\r\n                        <DashboardIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Dashboard\" />\r\n                    </ListItem>\r\n                    <ListItem button\r\n                    onClick={()=>{this.SelectMenu('Commands')}}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <SimCardIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Commands\" />\r\n                    </ListItem>\r\n                    <ListItem button\r\n                    onClick={()=>{this.SelectMenu('Team')}}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <PeopleIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Team\" />\r\n                    </ListItem>\r\n                   \r\n                      </List>\r\n                      <Divider />\r\n        \r\n                      <ListSubheader inset>Saved reports</ListSubheader>\r\n        \r\n                      <List>\r\n                      <ListItem button   onClick={()=>{this.SelectMenu('Current month')}}>\r\n                      <ListItemIcon>\r\n                        <AssignmentIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Current month\" />\r\n                    </ListItem>\r\n                    <ListItem button   onClick={()=>{this.SelectMenu('Last three months')}}>\r\n                      <ListItemIcon>\r\n                        <AssignmentIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Last three months\" />\r\n                    </ListItem>\r\n                    <ListItem button   onClick={()=>{this.SelectMenu('Current year')}}>\r\n                      <ListItemIcon>\r\n                        <AssignmentIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Current year\" />\r\n                    </ListItem>\r\n                      \r\n                      \r\n                      \r\n                      </List>\r\n        \r\n        \r\n        \r\n        \r\n        \r\n                    </Drawer>\r\n        \r\n                    <main className={this.props.classes.content}>\r\n                      <div className={this.props.classes.appBarSpacer} />\r\n                      <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n        \r\n                      <Grid item  xs >\r\n                      <div className={this.props.classes.table}>\r\n                          <Team/>\r\n                      </div>\r\n           \r\n                        </Grid>\r\n        \r\n                      </Container>\r\n                    </main>\r\n              \r\n                  </div>\r\n                );\r\n                    }\r\n              \r\n              \r\n}\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Dashboard);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass ForgotPassword extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.resetPass = this.resetPass.bind(this);\r\n    this.state = {\r\n      email: { value: null, error: false, helperText: null },\r\n      msg: null\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    reset_password: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n  \r\n\r\n  resetPass(event){\r\n    event.preventDefault();\r\n    if (this.emailInput.value === \"\") {\r\n      this.setState({\r\n        email: {\r\n          value: this.emailInput.value,\r\n          error: true,\r\n          helperText: \"Your email must be specified.\"\r\n        }\r\n      });\r\n      this.emailInput.focus();\r\n    }\r\n    else{\r\n    \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const email = this.emailInput.value\r\n        // Request body\r\n        const body = JSON.stringify({ email });\r\n    \r\n        axios.post('/forgot_password', body, config)\r\n        .then(res =>{\r\n            this.setState({ msg: res.message })\r\n            }\r\n          \r\n        )\r\n        .catch(err => {\r\n            this.setState({ msg: err.message })\r\n      \r\n        })\r\n        \r\n     }\r\n    \r\n    \r\n    }\r\n\r\n\r\n  render(){\r\n    const { classes } = this.props;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n             Enter Your Email Address\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={this.resetPass} >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              required\r\n              inputRef={input => (this.emailInput = input)}\r\n              error={this.state.email.error}\r\n              helperText={this.state.email.helperText}\r\n            />\r\n       <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n             Reset Password\r\n            </Button>\r\n\r\n            {this.state.msg  ? (\r\n            <Alert severity=\"error\">{this.state.msg}</Alert>\r\n              ) : (\r\n              null\r\n              )}\r\n             <Grid item xs>\r\n                <Link onClick={this.props.handler} variant=\"body2\">\r\n                  Back to login\r\n                </Link>\r\n              </Grid>\r\n          </form>\r\n        </div>\r\n       \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(\r\n)(withStyles(styles)(ForgotPassword))","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass ChangePasswordForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updatePass = this.updatePass.bind(this);\r\n    this.state = {\r\n      email: { value: null, error: false, helperText: null },\r\n      old_password1: { value: null, error: false, helperText: null },\r\n      old_password2: { value: null, error: false, helperText: null },\r\n      new_password: { value: null, error: false, helperText: null },\r\n      msg: null\r\n    };\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error } = this.props;\r\n    if (error !== prevProps.error) {\r\n      // Check for register error\r\n      if (error.id === 'Weak Password') {\r\n        this.setState({ msg: error.msg.msg });\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  updatePass(event){\r\n    event.preventDefault();\r\n    if (this.emailInput.value === \"\") {\r\n      this.setState({\r\n        email: {\r\n          value: this.emailInput.value,\r\n          error: true,\r\n          helperText: \"Your email must be specified.\"\r\n        }\r\n      });\r\n      this.emailInput.focus();\r\n    }\r\n    else{\r\n    \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n         const user = {\r\n              email: this.emailInput.value,\r\n              old_password1: this.old_password1.value,\r\n              old_password2: this.old_password2.value,\r\n              new_password: this.new_password.value,\r\n\r\n            };\r\n\r\n\r\n        // Request body\r\n        const body = JSON.stringify({ user });\r\n    \r\n        axios.post('/forgot_password', body, config)\r\n        .then(res =>{\r\n            this.setState({ msg: res.message })\r\n            }\r\n          \r\n        )\r\n        .catch(err => {\r\n            this.setState({ msg: err.message })\r\n      \r\n        })\r\n        \r\n     }\r\n  }\r\n\r\n\r\n  render(){\r\n    const { classes } = this.props;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Update Password\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={this.signIn} >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              required\r\n              inputRef={input => (this.emailInput = input)}\r\n              error={this.state.email.error}\r\n              helperText={this.state.email.helperText}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password1\"\r\n              label=\"Password1\"\r\n              type=\"password1\"\r\n              id=\"password1\"\r\n              autoComplete=\"current-password\"\r\n              inputRef={input => (this.passwordInput = input)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password2\"\r\n              label=\"Password2\"\r\n              type=\"password2\"\r\n              id=\"password2\"\r\n              autoComplete=\"current-password\"\r\n              inputRef={input => (this.passwordInput = input)}\r\n            />\r\n           \r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Update Password\r\n            </Button>\r\n\r\n            {this.state.msg  ? (\r\n            <Alert severity=\"error\">{this.state.msg}</Alert>\r\n              ) : (\r\n              null\r\n              )}\r\n              \r\n              <Grid item xs>\r\n                <Link onClick={this.props.handler} variant=\"body2\">\r\n                  Back to login\r\n                </Link>\r\n              </Grid>\r\n            \r\n          </form>\r\n        </div>\r\n        \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n)(withStyles(styles)(ChangePasswordForm))","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { login } from '../../actions/authActions';\r\nimport { clearErrors } from '../../actions/errorActions';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { StoreTwoTone } from '@material-ui/icons';\r\nimport store from '../../store';\r\nimport { Route } from 'react-router-dom';\r\nimport ForgotPasswordForm from './ForgotPasswordForm';\r\nimport ChangePasswordForm from './ChangePasswordForm';\r\n\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.signIn = this.signIn.bind(this);\r\n    this.handler = this.handler.bind(this);\r\n    this.state = {\r\n      email: { value: null, error: false, helperText: null },\r\n      password: { value: null, error: false, helperText: null },\r\n      msg: null\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, isAuthenticated } = this.props;\r\n    if (error !== prevProps.error) {\r\n      // Check for register error\r\n      if (error.id === 'LOGIN_FAIL') {\r\n        this.setState({ msg: error.msg });\r\n        setTimeout(function(){\r\n          this.setState({msg:null});\r\n          }.bind(this),3000);  // clear error after 3 seconds\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n   handler(){\r\n     this.setState(\r\n      {screen: 'login'}\r\n     )\r\n   }\r\n  \r\n\r\n   signIn(event){\r\n    event.preventDefault();\r\n    if (this.emailInput.value === \"\") {\r\n      this.setState({\r\n        email: {\r\n          value: this.emailInput.value,\r\n          error: true,\r\n          helperText: \"Your email must be specified.\"\r\n        }\r\n      });\r\n      this.emailInput.focus();\r\n    }\r\n    else{\r\n      const user = {\r\n        email: this.emailInput.value,\r\n        password: this.passwordInput.value,\r\n       };\r\n  \r\n      const log = this.props.login(user);\r\n      console.log(log)\r\n      this.props.history.push('/'); \r\n    }\r\n\r\n  }\r\n  \r\n\r\n  render(){\r\n    if (this.state.screen === 'forgot')\r\n      return <ForgotPasswordForm handler={this.handler}/>\r\n    if (this.state.screen === 'change')\r\n      return <ChangePasswordForm handler={this.handler}/>\r\n\r\n    const { classes } = this.props;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={this.signIn} >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              required\r\n              inputRef={input => (this.emailInput = input)}\r\n              error={this.state.email.error}\r\n              helperText={this.state.email.helperText}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              inputRef={input => (this.passwordInput = input)}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n\r\n            {this.state.msg  ? (\r\n            <Alert severity=\"error\">{this.state.msg}</Alert>\r\n              ) : (\r\n              null\r\n              )}\r\n\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link onClick={() => this.setState({screen:'forgot'})} variant=\"body2\">\r\n                {\"Reset Your Password\"}\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link onClick={() => this.setState({screen:'change'})} variant=\"body2\">\r\n                  {\"Do you want to update your password?\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { login, clearErrors }\r\n)(withStyles(styles)(LoginForm))","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport * as authActions from '../../actions/authActions'\r\nimport Dashboard from '../../Dashboard';\r\nimport LoginForm from '../auth/LoginForm';\r\nimport ChangePasswordForm from '../auth/ChangePasswordForm';\r\nimport PropTypes from 'prop-types';\r\nimport ForgotPasswordForm from '../auth/ForgotPasswordForm';\r\n\r\nclass Routes extends Component {\r\n\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n    // Similar to componentDidMount and componentDidUpdate:\r\n  render() {\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <PrivateRoute exact path=\"/\" component={Dashboard} authed={this.props.auth.isAuthenticated} />\r\n          <Route exact path=\"/login\" component={LoginForm} />\r\n\r\n\r\n        </div>\r\n      </BrowserRouter>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, authed, ...rest }) => (\r\n  // console.log(\"private routhh\", authed),\r\n  <Route\r\n    {...rest}\r\n    render={props => (\r\n      authed\r\n        ? <Component {...props} />\r\n        : <LoginForm {...props}/>\r\n    )}\r\n  />\r\n);\r\n\r\n\r\nconst mapStateToProps = state => ({ auth: state.auth });\r\n\r\nexport default connect(mapStateToProps, authActions)(Routes);\r\n","import React, { Component } from 'react';\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './App.css';\r\nimport Routes from './Component/routers/Routes';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    // console.log(\"rendering\")\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(\"dispatchhhhh from App\")\r\n    //store.dispatch(loadUser());\r\n    //console.log(store.getState(),\"state from app\");\r\n\r\n\r\n  }\r\n\r\n\r\n  static propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n  };\r\n\r\n\r\n  render() {\r\n     return (\r\n      <Routes />\r\n     )\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Dashboard from './Dashboard';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore } from 'redux';\r\nimport appReducer from './reducers/index';\r\nimport {Provider} from 'react-redux';\r\nimport App from './App';\r\nimport store from './store';\r\n\r\n// const store = createStore(appReducer);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n   , document.getElementById('root'),\r\n  );\r\n\r\n\r\n// ReactDOM.render( <Provider store={store}>\r\n//    <Dashboard />\r\n// </Provider> , document.getElementById('root'));\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();"],"sourceRoot":""}