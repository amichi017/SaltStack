{"version":3,"sources":["reducers/errorReducer.js","reducers/authReducer.js","reducers/reducersDate.js","reducers/saltReturns.js","reducers/saveMinion.js","reducers/listMinions.js","reducers/index.js","actions/types.js","actions/errorActions.js","actions/authActions.js","store.js","actions/date.js","Component/Title.js","Component/Graph.js","Component/SearchTime.js","Component/Table.js","Component/MinionCard.js","Component/auth/Logout.js","Component/SaltStack.js","Component/TeamCard.js","Component/Team.js","Dashboard.js","serviceWorker.js","Component/auth/ForgotPasswordForm.js","Component/auth/ChangePasswordForm.js","Component/auth/LoginForm.js","Component/routers/Routes.js","App.js","index.js"],"names":["initialState","msg","status","id","token","isAuthenticated","isLoading","user","start","Date","end","saltReturns","saveMinion","listMinions","appReducer","combineReducers","state","action","type","payload","date","auth","localStorage","setItem","access_token","removeItem","error","console","log","returnErrors","loadUser","dispatch","getState","axios","get","tokenConfig","then","res","data","catch","err","response","register","first_name","last_name","email","password","body","JSON","stringify","post","headers","login","message","logout","config","middleWare","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","toDateString","Month","String","parseInt","getMonth","year","getFullYear","startYear","getDate","endYear","minions","index","setFullYear","url","concat","Title","props","Typography","component","variant","color","gutterBottom","children","createData","time","Success","Fail","amount","demoOnClick","e","parseNumber","str","hower","slice","Chart","InitData","bind","nextProps","this","toLocaleDateString","setState","temp","Succeeded","filter","item","full_ret","fun","jid","startTemp","getTime","endTemp","setHours","forEach","success","Fragment","style","paddingLeft","onClick","margin","top","right","bottom","left","dataKey","stroke","React","PureComponent","connect","Deposits","handleDateChangeStart","handleDateChangeEnd","dateIsChanged","booleanStart","booleanEnd","utils","DateFnsUtils","Grid","container","justify","label","format","value","onChange","KeyboardButtonProps","flex","paddingTop","Button","endIcon","Component","ownProps","minet","month","day","tableIcons","Add","forwardRef","ref","AddBox","Check","Clear","Delete","Edit","DetailPanel","ChevronRight","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ArrowDownward","ThirdStateCheck","Remove","ViewColumn","dataColumns","title","field","cellStyle","x","dataTable","Orders","selestMinion","handleClickOpen","handleClose","Returns","dialogOpen","minion","setTimeout","saltTemp","map","name","_id","event","rowData","nextState","return","columns","icons","onRowClick","evt","selectedRow","options","exportButton","filtering","actions","icon","tooltip","Dialog","open","onClose","aria-describedby","maxWidth","scroll","aria-labelledby","DialogTitle","fontSize","undefined","DialogContent","dividers","minWidth","CardActions","DialogActions","autoFocus","MinionCard","onClickMinion","handleClickButton","commentg","comment","defer","click","listOpen","classes","bullet","Card","className","root","CardContent","List","root2","ListItem","button","ListItemIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","nested","withStyles","theme","spacing","marginLeft","width","backgroundColor","palette","background","paper","display","transform","overflow","pos","marginBottom","flexWrap","Logout","border","SaltStack","reason","warninginput","warningNoMinionSelected","handleClick","countSaveMinion","input","clickSave","history","unshift","clickOpen","sentCommand","getMinionsFromServer","i","result","length","push","alert","menu","tokenTemp","arr","row","commntId","command","cmd_body","func","tgt","salt_cmd","cmd_args","flexDirection","Paper","IconButton","iconButton","aria-label","InputBase","autoComplete","target","placeholder","inputProps","size","Comments","Divider","light","ButtonGroup","orientation","marginTop","height","flexFlow","MaterialTable","Alert","severity","selection","Snackbar","autoHideDuration","padding","alignItems","minionStyle","TeamCard","deleteIcon","expanded","UpperCase","isDelete","toUpperCase","prevState","Role","ReturnPassword","Email","role","delete","colors","Math","floor","random","CardHeader","avatar","Avatar","subheader","paragraph","mail","disableSpacing","DialogContentText","media","expand","transition","transitions","create","duration","shortest","expandOpen","red","wordWrap","Team","handleExpandClick","ClickFab","signIn","handleInputChange","handleClickShowPassword","handleMouseDownPassword","handleClickShowPasswordReturn","handleMouseDownPasswordReturn","initTeam","fab","Password","showPasswordReturn","showPassword","errPassword","saveCard","counter","err_first_name","err_last_name","err_Role","err_Email","err_Password","no_add_card","lastName","preventDefault","strongRegex","RegExp","emailRegex","flag","test","UnsecuredPassword","Fab","form","onSubmit","TextField","required","fullWidth","InputProps","startAdornment","InputAdornment","position","endAdornment","onMouseDown","startIcon","justifyContent","outline","outlineOffset","Dashboard","handleDrawerOpen","handleDrawerClose","SelectMenu","fixedHeightPaper","clsx","fixedHeight","CssBaseline","AppBar","appBar","appBarShift","Toolbar","toolbar","edge","menuButton","menuButtonHidden","noWrap","NotificationsIcon","Badge","badgeContent","Drawer","drawerPaper","drawerPaperClose","toolbarIcon","content","appBarSpacer","Container","xs","md","lg","Graph","SearchTime","Table","table","paddingRight","mixins","zIndex","drawer","easing","sharp","leavingScreen","enteringScreen","marginRight","flexGrow","whiteSpace","overflowX","breakpoints","up","paddingBottom","AccountCircleIcon","Boolean","location","hostname","match","ForgotPassword","resetPass","helperText","emailInput","focus","submit","Link","handler","secondary","main","ChangePasswordForm","updatePass","current_password","confirm_password","new_password","prevProps","inputRef","LoginForm","screen","passwordInput","ForgotPasswordForm","FormControlLabel","control","Checkbox","clearErrors","Routes","exact","path","authed","PrivateRoute","rest","render","authActions","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c04e6692.chunk.js","sourcesContent":["import {GET_ERRORS, CLEAR_ERRORS} from '../actions/types';\n\n\nconst initialState = {\n    msg: {},\n    status: null,\n    id: null\n}\n\n\nexport default function(state=initialState, action) {\n\n    switch(action.type){\n        case GET_ERRORS:\n            return {\n                msg: action.payload.msg,\n                status: action.payload.status,\n                id: action.payload.id\n            };\n        case CLEAR_ERRORS:\n            return {\n                msg: {},\n                status: null,\n                id: null\n            };\n        default:\n            return state;\n    }\n}","import {\n    USER_LOADED,\n    USER_LOADING,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n} from '../actions/types';\n\nconst initialState = {\n    token: null,\n    isAuthenticated: null,\n    isLoading: false,\n    user: null,\n\n};\n\nexport default function(state = initialState, action){\n    switch(action.type){\n        case USER_LOADING:\n            return {\n                ...state,\n                isLoading: true\n            };\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                isLoading: false,\n                user: action.payload\n            };\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', action.payload.access_token);\n            return {\n                token: action.payload.access_token,\n                isAuthenticated: true,\n                isLoading: false,\n            };\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT_SUCCESS:\n        case REGISTER_FAIL:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                user: null,\n                isAuthenticated: false,\n                isLoading: false\n            };\n        default:\n            return state;\n    }\n}\n"," import {DATE_SELECT} from '../actions/types';\n\n\n const initialState = {\n\n     start: new Date(),\n     end: new Date(),\n\n\n};\n\n export default function(state=initialState, action) {\n//console.log(\"state\",state);\n  switch(action.type){\n      case DATE_SELECT:\n        return {\n                start:action.payload.start,\n                end:action.payload.end,\n\n              };\n\n\n        default:\n               return state;\n  }\n\n }\n\n\n","\n import {SALT_RETURNS} from '../actions/types';\n\n\n const initialState = {\n    saltReturns:null,\n};\n\nexport default function(state=initialState, action) { \n//console.log(\"SALT_RETURNS\",action.payload);\nswitch(action.type){\n    case SALT_RETURNS:\n    return {\n        saltReturns:action.payload,\n    };\n    default:\n        return state;\n }\n}","\nimport {SAVE_MINION} from '../actions/types';\n\n\n const initialState = {\n    saveMinion:[],\n};\n\nexport default function(state=initialState, action) { \n //console.log(\"SALT_RETURNS\",action.payload);\nswitch(action.type){\n    case SAVE_MINION:\n    return {\n        saveMinion:action.payload,\n    };\n    default:\n        return state;\n }\n}","\nimport {LIST_MINIONS} from '../actions/types';\n\n\nconst initialState = {\n   listMinions:[],\n};\n\nexport default function(state=initialState, action) { \n    console.log(action.payload,'action.payload')\nswitch(action.type){\n   case LIST_MINIONS:\n    return {\n        listMinions:action.payload,\n    };\n   default:\n       return state;\n}\n}","import {combineReducers} from 'redux';\nimport errorReducer from './errorReducer';\nimport authReducer from './authReducer';\nimport reducerDate from './reducersDate';\nimport saltReturns  from './saltReturns';\nimport saveMinion  from './saveMinion';\nimport listMinions  from './listMinions';\n\nconst appReducer = combineReducers({\n  saltReturns:saltReturns,\n  date: reducerDate,\n  auth: authReducer,\n  error: errorReducer,\n  saveMinion:saveMinion,\n  listMinions:listMinions,\n  \n\n});\n\nexport default appReducer;\n","export const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\nexport const DATE_SELECT = \"DATE_SELECT\";\nexport const SALT_RETURNS = \"SALT_RETURNS\";\nexport const SAVE_MINION = \"SAVE_MINION\";\nexport const LIST_MINIONS = \"LIST_MINIONS\";\nexport const TEAM_LIST = \"TEAM_LIST\";","import { GET_ERRORS, CLEAR_ERRORS} from './types';\n\n// Return errors\nexport const returnErrors = (msg, status, id = null) => {\n    // console.log(msg,status)\n    return {\n        type: GET_ERRORS,\n        payload: { msg, status, id}\n    };\n};\n\n// Clear errors\nexport const clearErrors = () => {\n    return {\n        type: CLEAR_ERRORS\n    };\n};","import axios from 'axios';\nimport { returnErrors } from './errorActions';\n\nimport {\nAUTH_ERROR,\nLOGIN_SUCCESS,\nLOGIN_FAIL,\nLOGOUT_SUCCESS,\nREGISTER_SUCCESS,\nREGISTER_FAIL,\nUSER_LOADING,\nUSER_LOADED\n} from './types';\n\n\n\n// Check token & load user\nexport const loadUser = () => (dispatch, getState) => {\n    // User loading\n    dispatch({ type: USER_LOADING });\n    axios\n      .get('/auth/user', tokenConfig(getState))\n      .then(res =>\n        dispatch({\n          type: USER_LOADED,\n          payload: res.data\n        })\n      )\n      .catch(err => {\n        if(err.response){\n            dispatch(returnErrors(err.response.data, err.response.status));\n            dispatch({\n                type: AUTH_ERROR\n              });\n        }\n      });\n  };\n\n\nexport const register = ({ first_name, last_name, email, password }) => dispatch => {\n    // Headers\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    // Request body\n    const body = JSON.stringify({first_name, last_name, email, password });\n     \n    axios.post('/register', body, config)\n    .then(res => dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n    }))\n    .catch(err => {\n        console.log(err)\n        dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\n        dispatch({\n            type: REGISTER_FAIL\n        })\n    })\n}\n\nexport const login = ({ email, password }) => dispatch => {\n    // Headers\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    // Request body\n    const body = JSON.stringify({ email, password });\n\n    axios.post('/auth', body, config)\n    .then(res => dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n            \n    }))\n    .catch(err => {\n        dispatch(returnErrors(err.response.data.message, err.response.status, 'LOGIN_FAIL'));\n        dispatch({\n            type: LOGIN_FAIL\n        })\n    })\n}\n\n\n// Logout User\nexport const logout = () => dispatch => {\n    dispatch({\n        type: LOGOUT_SUCCESS\n    })\n  };\n\n  \n// Setup config/headers and token\nexport const tokenConfig = getState => {\n       // Get token from localstorage\n       const token = getState().auth.token;\n  \n       // Headers\n       const config = {\n           headers: {\n               \"Content-type\": \"application/json\"\n           }\n       }\n   \n       // If token, add to headers\n       if(token) {\n          config.headers[\"Authorization\"] = ` Bearer ${token} `;\n       }\n\n    return config;\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport authReducer from './reducers/authReducer';\nimport { loadUser } from './actions/authActions';\n\nconst initialState = {};\n\nconst middleWare = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancers(applyMiddleware(...middleWare))\n);\n\n// store.dispatch(loadUser());\nexport default store;","import axios from 'axios';\nimport store from '../store'\n import { DATE_SELECT, SALT_RETURNS,LIST_MINIONS,TEAM_LIST} from './types';\n // Date is select\n export const dateSelect = (start , end) => {\n\n     return  {\n                 type: DATE_SELECT,\n                 payload:{start,end}\n              };\n     // console.log(\"start \",start);\n     // console.log(\"end \",end);\n\n }\n export const listMinions =  () => (dispatch, getState) => {\n\n    axios.get('/get_connected_minions',tokenConfig(getState))\n    .then((res) => {\n            let minions=[];\n            for(let i=0;i<res.data.result.length;i++){\n               let minion={name:res.data.result[i]};\n               minions.push(minion);\n            }\n            console.log(minions,\"minions\");   \n            store.dispatch({\n                type: TEAM_LIST,\n                payload: minions\n            });\n    })\n    .catch(err => {\n        console.log(err,\"err get_connected_minions\");\n\n       });\n    // console.log(\"start \",start);\n    // console.log(\"end \",end);\n\n}\nexport const teamList =  () => (dispatch, getState) => {\n\n    axios.get('/get_users',tokenConfig(getState))\n    .then((res) => { \n            store.dispatch({\n                type: TEAM_LIST,\n                payload: res.data\n            });\n    })\n    .catch(err => {\n        console.log(err);\n\n       });\n    // console.log(\"start \",start);\n    // console.log(\"end \",end);\n\n}\n//  // Clear date\n//   export const saltReturns =  () => (dispatch, getState) => {\n\n//     const time =new Date().toDateString();\n//     let Month= String(parseInt(store.getState().date.start.getMonth()));\n//     Month=parseInt(Month)<10?\"0\"+Month:Month;\n//     let year=String(store.getState().date.start.getFullYear());\n\n\n//     let startYear=new Date(year,Month,store.getState().date.start.getDate());\n//     let endYear=store.getState().date.end;\n\n//     console.log(startYear,\"startYear\");\n//     console.log(endYear,\"endYear\");\n\n\n//  if(store.getState().auth.token !== null){   }  // console.log(\"ppppppppppppppppp\");}\n\n//    let data=[];\n\n// //  for (let index = startYear; index <= endYear; index.setFullYear(index.getFullYear() + 1)) {\n//     let index = startYear\n//     let url='/api/saltReturns/apply/'+index.getFullYear();\n//     console.log(\"url\" ,url);\n//     axios.get(url, tokenConfig(getState))\n//     .then((res) => {\n//         console.log(\"res.data\" ,res.data);\n//         store.dispatch({\n//             type: SALT_RETURNS,\n//             payload: res.data\n//         })\n\n//     })\n//     .catch(err => {\n//         console.log(err,\"error in data\");\n\n//        });\n//  //}\n\n// console.log(store.getState(),\"the store from date \");\n// };\n //Clear date\n export const saltReturns =  () => (dispatch, getState) => {\n     //console.log(\"----------------------storeeeee--------------\\n\",store)\n     const time =new Date().toDateString();\n     let Month= String(parseInt(store.getState().date.start.getMonth()));\n         Month=parseInt(Month)<10?\"0\"+Month:Month;\n         let year=String(store.getState().date.start.getFullYear());\n\n\n         let startYear=new Date(year,Month,store.getState().date.start.getDate());\n         let endYear=store.getState().date.end;\n         let index = startYear;\n // if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\n        let minions=[];\n for (let index = startYear; index <= endYear; index.setFullYear(index.getFullYear() + 1)) {\n\n     let url='/api/saltReturns/apply/'+index.getFullYear();\n     //console.log(\"url\" ,url);\n     axios.get(url, tokenConfig(getState))\n    .then((res) => {\n\n        minions=minions.concat(res.data);\n       /// if(index === endYear){console.log(res,\"res \");}\n        store.dispatch({\n            type: SALT_RETURNS,\n            payload: minions\n        })\n        // console.log(res,\"res\");\n    })\n    .catch(err => {\n        console.log(err,\"error in data\");\n\n       });\n    }\n\n\n       //console.log(store.getState(),\"the store \");\n       //console.log(minions,\"minions \");\n};\n\n\n\n// Setup config/headers and token\nexport const tokenConfig = getState => {\n   // console.log(\"getstatteeeeeslatl\",getState())\n    // Get token from localstorage\n    const token = getState().auth.token;\n\n    // Headers\n    const config = {\n        headers: {\n            \"Content-type\": \"multipart/form-data\"\n        }\n    }\n\n    // If token, add to headers\n    if(token) {\n       config.headers[\"Authorization\"] = ` Bearer ${token} `;\n    }\n\n return config;\n}\n\n\n\n\n// export const saltReturns =  () => (dispatch, getState) => {\n\n//     const time =new Date().toDateString();\n\n// // if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\n//     axios.get('/api/saltReturns/apply/2020', tokenConfig(getState))\n//    .then((res) => {\n\n//        // console.log(res,\"res\");\n//    store.dispatch({\n//        type: SALT_RETURNS,\n//        payload: res.data\n//    })})\n//    .catch(err => {\n//        console.log(err,\"error in data\");\n\n//       });\n\n//       console.log(store.getState(),\"the store \");\n// };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React from 'react';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {dateSelect} from '../actions/date';\nimport { LineChart,\n         Line,\n         XAxis,\n         YAxis,\n         Label,\n         ResponsiveContainer,\n         Tooltip,\n         Legend,\n         CartesianGrid  \n} from 'recharts';\nimport store from '../store';\nimport Title from './Title';\nimport { saltReturns } from '../actions/date';\nimport { Store } from '@material-ui/icons';\n// import SaltData from'../demo/jsonPars.json';\n// Generate Sales Data\n\n\nconst time =(str)=>{\n  const year =str.slice(0,4);\n  const month =String(parseInt(str.slice(4,6)));\n  const day =str.slice(6,8);\n  const hower= str.slice(8,10);\n  //console.log(month,'montg from graph');\n  const minet=str.slice(10,12);\n  return String(hower)+\":\"+String(minet);\n\n}\nfunction createData(time,Success,Fail, amount) {\n  return { time,Success,Fail, amount };\n}\n\nconst INIT_DATA = [\n  createData('00:00',0,0, 0),\n  createData('03:00',0,0, 0),\n  createData('06:00',0,0, 0),\n  createData('09:00',0,0, 0),\n  createData('12:00',0,0, 0),\n  createData('15:00',0,0, 0),\n  createData('18:00',0,0, 0),\n  createData('21:00',0,0, 0),\n  createData('24:00',0,0, 0),\n];\nconst demoOnClick= (e)=>{\n  // if(e){if(e.activeLabel){console.log(e.activeLabel);}}\n};\nconst parseNumber= (str)=>{\n  let hower= parseInt(str.slice(8,10));\n  if(hower<=3){return \"03:00\"};\n  if(hower<=6){return \"06:00\"};\n  if(hower<=9){return \"09:00\"};\n  if(hower<=12){return \"12:00\"};\n  if(hower<=15){return \"15:00\"};\n  if(hower<=18){return \"18:00\"};\n  if(hower<=21){return \"21:00\"};\n  if(hower<=24){return \"24:00\"};\n  return \"00:00\";\n \n};\n\n\n\n class Chart extends React.PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.InitData=this.InitData.bind(this);\n    this.state = {\n      start: new Date(),\n      end:new Date(),\n      data:  [{ time:\"00:00\",Success:0,Fail:0, amount:0 },\n              { time:\"03:00\",Success:0,Fail:0, amount:0 },\n              { time:\"06:00\",Success:0,Fail:0, amount:0 },\n              { time:\"09:00\",Success:0,Fail:0, amount:0 },\n              { time:\"12:00\",Success:0,Fail:0, amount:0 },\n              { time:\"15:00\",Success:0,Fail:0, amount:0 },\n              { time:\"18:00\",Success:0,Fail:0, amount:0 },\n              { time:\"21:00\",Success:0,Fail:0, amount:0 },\n              { time:\"24:00\",Success:0,Fail:0, amount:0 },]\n  };\n}\nInitData(){\n  \n}\n  componentWillReceiveProps(nextProps) {\n    if( (((this.props.date.start.toLocaleDateString()!== nextProps.date.start.toLocaleDateString()) || (this.props.date.end.toLocaleDateString()!== nextProps.date.end.toLocaleDateString() )))){\n      this.setState({start:nextProps.date.start,end:nextProps.date.end});\n      const start=store.getState().date.start;\n      const end=store.getState().date.end;\n      let temp=[\n        { time:\"00:00\",Succeeded:0,Fail:0, amount:0 },\n        { time:\"03:00\",Succeeded:0,Fail:0, amount:0 },\n        { time:\"06:00\",Succeeded:0,Fail:0, amount:0 },\n        { time:\"09:00\",Succeeded:0,Fail:0, amount:0 },\n        { time:\"12:00\",Succeeded:0,Fail:0, amount:0 },\n        { time:\"15:00\",Succeeded:0,Fail:0, amount:0 },\n        { time:\"18:00\",Succeeded:0,Fail:0, amount:0 },\n        { time:\"21:00\",Succeeded:0,Fail:0, amount:0 },\n        { time:\"24:00\",Succeeded:0,Fail:0, amount:0 },\n      ];\n      if(nextProps.saltReturns.saltReturns!==null)\n      {\n        //console.log(nextProps.saltReturns.saltReturns,'data from graph conponent')\n      \n       nextProps.saltReturns.saltReturns\n       .filter((item)=>{return item.full_ret.fun === \"state.apply\"})\n       .filter((item)=>{\n          let str=item.jid.slice(0,4)+\"-\"+String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\n          //let time=new Date(str);\n          // if(time >= start && time<= end){return item;}\n          let time=new Date(str);\n          let startTemp=new Date(end.getTime());\n          let endTemp=new Date(end.getTime());\n          startTemp.setHours(0,0,0);\n          endTemp.setHours(23,59,59);\n          if(((time.getTime() >=startTemp.getTime()))  && (time.getTime() <=endTemp.getTime())){return item;}\n        })\n        .forEach(item => {\n        if(parseNumber(item.full_ret.jid)===\"03:00\")\n        { item.full_ret.success === true ?(temp[1].Success++):(temp[1].Fail++)};\n        if(parseNumber(item.full_ret.jid)===\"06:00\")\n        { item.full_ret.success === true ?(temp[2].Success++):(temp[2].Fail++)};\n        if(parseNumber(item.full_ret.jid)===\"09:00\")\n        { item.full_ret.success === true ?(temp[3].Success++):(temp[3].Fail++)};\n        if(parseNumber(item.full_ret.jid)===\"12:00\")\n        { item.full_ret.success === true ?(temp[4].Success++):(temp[4].Fail++)};\n        if(parseNumber(item.full_ret.jid)===\"15:00\")\n        { item.full_ret.success === true ?(temp[5].Success++):(temp[5].Fail++)};\n        if(parseNumber(item.full_ret.jid)===\"18:00\")\n        { item.full_ret.success === true ?(temp[6].Success++):(temp[6].Fail++)};\n        if(parseNumber(item.full_ret.jid)===\"21:00\")\n        { item.full_ret.success === true ?(temp[7].Success++):(temp[7].Fail++)};\n        if(parseNumber(item.full_ret.jid)===\"24:00\")\n        { item.full_ret.success === true ?(temp[8].Success++):(temp[8].Fail++)};\n       \n        \n        });\n      }\n        this.state.data=temp;\n\n        //console.log(this.state.data,\"this.state.data                             \");\n      //  console.log(\"state                               \",store.getState());\n    }\n    \n      const startTemp=store.getState().date.start;\n      const endTemp=store.getState().date.end;\n      if((startTemp.getTime()> endTemp.getTime())){\n      let temp=[\n        { time:\"00:00\",Succeeded:0,Fail:0, amount:0 },\n        { time:\"03:00\",Succeeded:0,Fail:0, amount:0 },\n        { time:\"06:00\",Succeeded:0,Fail:0, amount:0 },\n        { time:\"09:00\",Succeeded:0,Fail:0, amount:0 },\n        { time:\"12:00\",Succeeded:0,Fail:0, amount:0 },\n        { time:\"15:00\",Succeeded:0,Fail:0, amount:0 },\n        { time:\"18:00\",Succeeded:0,Fail:0, amount:0 },\n        { time:\"21:00\",Succeeded:0,Fail:0, amount:0 },\n        { time:\"24:00\",Succeeded:0,Fail:0, amount:0 },\n      ];\n      this.state.data=temp;\n    }\n  }\n  componentWillUpdate() {\n    const start=store.getState().date.start;\n    const end=store.getState().date.end;\n   // console.log(store.getState());\n    // while (store.getState().saltReturns.saltReturns === null) {  }\n   let temp=  \n   [{ time:\"00:00\",Success:0,Fail:0, amount:0 },\n   { time:\"03:00\",Success:0,Fail:0, amount:0 },\n   { time:\"06:00\",Success:0,Fail:0, amount:0 },\n   { time:\"09:00\",Success:0,Fail:0, amount:0 },\n   { time:\"12:00\",Success:0,Fail:0, amount:0 },\n   { time:\"15:00\",Success:0,Fail:0, amount:0 },\n   { time:\"18:00\",Success:0,Fail:0, amount:0 },\n   { time:\"21:00\",Success:0,Fail:0, amount:0 },\n   { time:\"24:00\",Success:0,Fail:0, amount:0 },];\n\n   if( store.getState().saltReturns.saltReturns!==null)\n   {\n    store.getState().saltReturns.saltReturns\n    .filter((item)=>{return item.full_ret.fun === \"state.apply\"})\n    .filter((item)=>{\n    let str=item.jid.slice(0,4)+\"-\"+String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\n    // let time=new Date(str);\n    // // if(time >= start && time<= end){return item;}\n    \n    let time=new Date(str);\n    let startTemp=new Date(end.getTime());\n    let endTemp=new Date(end.getTime());\n    startTemp.setHours(0,0,0);\n    endTemp.setHours(23,59,59);\n    if(((time.getTime() >=startTemp.getTime()))  && (time.getTime() <=endTemp.getTime())){return item;}\n  })\n  .forEach(item => {\n  if(parseNumber(item.full_ret.jid)===\"03:00\")\n  { item.full_ret.success === true ?(temp[1].Success++):(temp[1].Fail++)};\n  if(parseNumber(item.full_ret.jid)===\"06:00\")\n  { item.full_ret.success === true ?(temp[2].Success++):(temp[2].Fail++)};\n  if(parseNumber(item.full_ret.jid)===\"09:00\")\n  { item.full_ret.success === true ?(temp[3].Success++):(temp[3].Fail++)};\n  if(parseNumber(item.full_ret.jid)===\"12:00\")\n  { item.full_ret.success === true ?(temp[4].Success++):(temp[4].Fail++)};\n  if(parseNumber(item.full_ret.jid)===\"15:00\")\n  { item.full_ret.success === true ?(temp[5].Success++):(temp[5].Fail++)};\n  if(parseNumber(item.full_ret.jid)===\"18:00\")\n  { item.full_ret.success === true ?(temp[6].Success++):(temp[6].Fail++)};\n  if(parseNumber(item.full_ret.jid)===\"21:00\")\n  { item.full_ret.success === true ?(temp[7].Success++):(temp[7].Fail++)};\n  if(parseNumber(item.full_ret.jid)===\"24:00\")\n  { item.full_ret.success === true ?(temp[8].Success++):(temp[8].Fail++)};\n  });\n  \n  }\n  this.state.data= temp;\n  //console.log(this.state.data,\"this.state.data                             \");\n  const startTemp=store.getState().date.start;\n  const endTemp=store.getState().date.end;\n  if((startTemp.getTime()> endTemp.getTime())){\n  let temp=[\n    { time:\"00:00\",Succeeded:0,Fail:0, amount:0 },\n    { time:\"03:00\",Succeeded:0,Fail:0, amount:0 },\n    { time:\"06:00\",Succeeded:0,Fail:0, amount:0 },\n    { time:\"09:00\",Succeeded:0,Fail:0, amount:0 },\n    { time:\"12:00\",Succeeded:0,Fail:0, amount:0 },\n    { time:\"15:00\",Succeeded:0,Fail:0, amount:0 },\n    { time:\"18:00\",Succeeded:0,Fail:0, amount:0 },\n    { time:\"21:00\",Succeeded:0,Fail:0, amount:0 },\n    { time:\"24:00\",Succeeded:0,Fail:0, amount:0 },\n  ];\n  this.state.data=temp;\n}\n}\n  render(){\n  return (\n    <React.Fragment>\n      {/*<Title style={{paddingLeft:5}}>{(this.state.start.toLocaleDateString() === this.state.end.toLocaleDateString())?this.state.start.toLocaleDateString():this.state.start.toLocaleDateString() + ' - '+ this.state.end.toLocaleDateString()}</Title>*/}\n       {<Title style={{paddingLeft:5}}> {this.state.end.toLocaleDateString()}</Title>}\n      <ResponsiveContainer>\n          <LineChart\n            onClick={demoOnClick}\n            data={ this.state.data}\n            margin={{top: 16,right: 16,bottom: 0,left: 24,}}>\n          <XAxis dataKey=\"time\" /><YAxis >{/* <Label angle={270} position=\"left\" style={{ textAnchor: 'middle' }}>(A/T)</Label>*/ }   \n          </YAxis>\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"Fail\" stroke=\"#ff6666\" onClick={demoOnClick} />\n          <Line type=\"monotone\" dataKey=\"Success\" stroke=\"#82ca9d\"  onClick={demoOnClick}/>\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    saltReturns: state.saltReturns,\n    date: state.date \n  }\n}\n\nfunction matchDispatchToProps(dispatch){\n  return bindActionCreators({dateSelect: dateSelect}, dispatch);\n}\nexport default connect(mapStateToProps)(Chart);","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport {DATE_SELECT} from \"../actions/types\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport {Typography,Button,Grid} from '@material-ui/core';\nimport Title from './Title';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {KeyboardDatePicker,MuiPickersUtilsProvider,DatePicker} from \"@material-ui/pickers\";\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\n//import DateTime from 'react-datetime';\nimport {dateSelect} from '../actions/date.js';\nimport store from '../store';\nimport { saltReturns } from '../actions/date';\n// <DatePicker\n// disableFuture\n// openTo=\"year\"\n// id=\"date-picker-dialog\"\n// margin=\"normal\"\n// format=\"dd/MM/yyyy\"\n// label=\"Start\"\n// views={[\"year\", \"month\", \"date\"]}\n// KeyboardButtonProps={{\n//   'aria-label': 'change date',\n// }}\n\n// />\n\n\n\n\n\n class Deposits extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDateChangeStart = this.handleDateChangeStart.bind(this);\n    this.handleDateChangeEnd = this.handleDateChangeEnd.bind(this);\n    this.dateIsChanged = this.dateIsChanged.bind(this);\n  \n    this.state={start:this.props.date.start , end:this.props.date.end ,date:null};\n  \n  }\n//   shouldComponentUpdate(nextProps, nextState) {\n//   return this.state.value != nextState.value;\n// }\n  handleDateChangeStart(date){\n    this.setState({booleanStart:true,start:date});\n  }\n    \n  \n  handleDateChangeEnd (date){\n   this.setState({booleanEnd:true,end:date});\n  }\n \n  dateIsChanged(){\n      let start=this.state.start;\n      let end=this.state.end;\n     \n      store.dispatch({\n        type: DATE_SELECT,\n        payload: {start:start,end:end}\n       } );\n       store.dispatch(saltReturns());\n\n\n      // console.log(\"store\",store.getState());\n  }\n \n  //onChange = date => this.setState({ date })\n \n  render () {\n    return (\n      <React.Fragment>\n        <Typography component=\"p\" variant=\"h4\">\n\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container justify=\"space-around\">\n            <KeyboardDatePicker\n            margin=\"normal\"\n            id=\"date-picker-dialog\"\n            label=\"Start Date\"\n            format=\"dd/MM/yyyy\"\n            value={this.state.start}\n            onChange={(date)=>{this.handleDateChangeStart(date)}}\n            KeyboardButtonProps={{\n              'aria-label': 'change date',\n            }}\n          />\n\n          <KeyboardDatePicker\n          margin=\"normal\"\n          id=\"date-picker-dialog\"\n          label=\"End Date\"\n          format=\"dd/MM/yyyy\"\n          value={this.state.end}\n          onChange={(date)=>{this.handleDateChangeEnd(date)}}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n      \n      <Typography style={{flex: 1,paddingTop:15}}>\n      \n       \n       \n        <Button\n        variant=\"outlined\" color=\"primary\"\n        onClick={this.dateIsChanged}\n        endIcon={ <SearchIcon>Search</SearchIcon>}\n      >\n      Search\n      </Button>\n      </Typography>\n            </Grid>\n          </MuiPickersUtilsProvider>\n\n        </Typography>\n       \n      </React.Fragment>\n    );\n  }\n    \n}\n\n const mapStateToProps = (state, ownProps) => {\n  return {\n    date: state.date\n  }\n}\nfunction matchDispatchToProps(dispatch){\n  return bindActionCreators({dateSelect: dateSelect}, dispatch);\n}\n\nexport default connect(mapStateToProps)(Deposits);","import axios from 'axios';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport React, { Component } from \"react\";\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport MaterialTable from 'material-table';\nimport {SALT_RETURNS} from \"../actions/types\";\nimport store from '../store';\nimport { saltReturns } from '../actions/date';\nimport { forwardRef } from 'react';\nimport {\n    Typography,\n    Button,\n    Card,\n    CardActions,\n    CardContent\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    AddBox,\n    ArrowDownward,\n    Check,\n    ChevronLeft,\n    ChevronRight,\n    Clear,\n    DeleteOutline,\n    Edit,\n    FilterList,\n    FirstPage,\n    LastPage,\n    Remove,\n    SaveAlt,\n    Search,\n    ViewColumn,\n\n\n}from '@material-ui/icons';\n//import data from './f.json';\n\nconst time =(str)=>{\n    const hower= str.slice(8,10);\n    const minet=str.slice(10,12);\n    return String(hower)+\":\"+String(minet);\n\n}\n\nconst  date=(str)=>{\n    const year =str.slice(0,4);\n    const month =String(parseInt(str.slice(4,6)));\n    const day =str.slice(6,8);\n   \n    return String(day)+\"/\"+String(month)+\"/\"+String(year);\n\n}\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) =>  <Edit {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\nconst dataColumns =[\n    { title: 'status', field: 'status',\n        //type: 'boolean'\n        cellStyle: x=>({\n            color:(x==='Success')?'#208000':'#ff0000'})\n\n    },\n    { title: 'Name', field: 'name',\n    },\n    { title: 'Date', field: 'date' },\n    { title: 'Time', field: 'time',\n        //type: 'time'\n    },\n\n\n\n]\n\nconst dataTable=[]\n\nclass Orders extends React.Component {\n    constructor(props) {\n        super(props);\n        this.selestMinion=this.selestMinion.bind(this);\n        this.handleClickOpen=this.handleClickOpen.bind(this);\n        this.handleClose=this.handleClose.bind(this);\n\n        store.dispatch(saltReturns());\n\n        this.state = {\n            saltReturns: dataTable,\n            Returns:null,\n            dialogOpen:false,\n            minion:\"\",\n        }\n       \n    }\n    componentWillMount(){\n      \n        setTimeout(()=>{  \n            const start=store.getState().date.start;\n            let startTemp=new Date(start.getTime());\n          \n            startTemp.setHours(0,0,0);\n            const end=store.getState().date.end;\n            let endTemp=new Date(end.getTime());\n          \n           // console.log(endTemp,'new Date(end.getTime());')\n           // console.log(start,'store.getState().date.start;')\n            let saltTemp=store.getState().saltReturns.saltReturns\n            .filter((item)=>{return item.full_ret.fun === \"state.apply\"})\n            .filter((item)=>{\n                let str=item.jid.slice(0,4)+\"-\"+ String(parseInt(item.jid.slice(4,6))-1)+\"-\"+item.jid.slice(6,8);\n                let time=new Date(str);\n                if(time >= startTemp && time<= endTemp){return item;}\n            })\n            .map((item)=>{\n    \n                return {\n    \n                    status:(item.full_ret.success === true)?'Success':'Fail',\n                    name:item.minion,\n                    date:date(item.full_ret.jid),\n                    id:item._id,\n                    time: time(item.full_ret.jid),\n    \n                    // return:item.return\n                };}\n            )\n        \n            this.setState({saltReturns:saltTemp});\n           // console.log(this.state.saltReturns,'setTimeout(()=>{this.setState({saltReturns:saltTemp});}, 600);');\n        }, 700);\n        //setTimeout(()=>{;}, 1000);\n       \n    }\n    selestMinion(event, rowData){\n        //console.log(rowData, \" equl\");\n        let res = store.getState().saltReturns.saltReturns\n            .filter((item)=>{if((item.full_ret.success===false) && (item._id === rowData.id))\n            { this.setState({dialogOpen:true,minion:item}); return item;}})\n\n\n    }\n    handleClickOpen () {\n        this.setState({dialogOpen:true});\n    };\n\n    handleClose () {\n        this.setState({dialogOpen:false});\n    };\n    componentWillReceiveProps(nextProps,nextState) {\n\n        // console.log(store.getState(),\";;;;;;;;;;\");\n        const start=store.getState().date.start;\n        let startTemp=new Date(start.getTime());\n      \n        startTemp.setHours(0,0,0);\n        const end=store.getState().date.end;\n        let endTemp=new Date(end.getTime());\n        \n        if(nextProps.saltReturns.saltReturns!==null)\n        {\n        //console.logconsole.log(nextProps.saltReturns.saltReturns,'data from table conponent')\n        if(nextProps.saltReturns!==this.props.saltReturns || (((this.props.date.start.toLocaleDateString()!== nextProps.date.start.toLocaleDateString()) || (this.props.date.end.toLocaleDateString()!== nextProps.date.end.toLocaleDateString() )))){\n           //console.log(this.props.saltReturns, 'this.props.saltReturns')\n            this.state.saltReturns=nextProps.saltReturns.saltReturns\n            .filter((item)=>{return item.full_ret.fun === \"state.apply\"})\n            .filter((item)=>{\n                console.log(item,'item ..........................')\n                let str=item.jid.slice(0,4)+\"-\"+ String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\n                let time=new Date(str);\n                // console.log(str,'str');\n                // console.log(time,'new Date(str);');\n                // console.log(endTemp,'endTemp');\n                if(time >= startTemp && time<= endTemp){return item;}\n            })\n            .map((item)=>{\n\n                return {\n\n                    status:(item.full_ret.success === true)?'Success':'Fail',\n                    name:item.minion,\n                    date:date(item.full_ret.jid),\n                    id:item._id,\n                    time: time(item.full_ret.jid),\n\n                    // return:item.return\n                };}\n            )\n            this.state.Returns=nextProps.saltReturns.saltReturns.map((item)=>{\n                return{Returns:item.full_ret.return}\n            })\n            console.log(this.state.Returns,'this.state.Returns');\n        }\n\n            // console.log(store.getState());\n            // this.setState({saltReturns:nextProps.saltReturns});\n            // console.log(this.state.Returns,\"kkkkkkkkkkkkkkkk\")\n\n        }\n\n\n\n\n    }\n\n    render(){\n\n        return (\n            <div>\n                <MaterialTable\n                    title=\"Minions Table\"\n                    columns={dataColumns}\n                    data={ this.state.saltReturns}\n                    icons={tableIcons}\n                    onRowClick={((evt, selectedRow) => this.setState({ selectedRow }))}\n\n\n                    options={{\n                        exportButton: true,\n                        filtering: true,\n\n                        //rowStyle: rowData => ({\n                        // color: (rowData.name==='su') ? '#daa9d9' : '#ff1a1a'})\n\n                    }}\n                    actions={[\n                        {\n\n                            icon: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n                            tooltip: 'Save User',\n                            onClick: (event, rowData) => {this.selestMinion(event, rowData)}\n                        }\n                    ]\n                    }\n                />\n\n                <Dialog\n                    open={this.state.dialogOpen}\n                    onClose={this.handleClose}\n\n                    aria-describedby=\"alert-dialog-description\"\n                    maxWidth=\"sm\"\n                    scroll=\"paper\"\n                    aria-labelledby=\"confirmation-dialog-title\"\n                >\n\n                    <DialogTitle id=\"alert-dialog-title\">\n\n                        <Typography style={{color:\"#ff6666\",fontSize:18} }>\n                            {\"Failed \"}\n                            {this.state.minion.minion}\n                            {\" at date \"}\n                            {   (this.state.minion !== undefined )? (date(String(this.state.minion.jid))): \" \"}\n                            {' at hour '}\n                            {(this.state.minion !== undefined )? (time(String(this.state.minion.jid))): \" \"}\n                            {//console.log(this.state.minion,\"comment\")}\n                             }\n                        </Typography>\n                    </DialogTitle>\n\n\n                    <DialogContent dividers>\n                        <div style={{minWidth: 500,}}>\n                            <div>\n                                <Typography style={{fontSize: 14,}} color=\"textSecondary\" gutterBottom>\n                                    _id : {this.state.minion._id}\n                                    {//this.state.minion.return=data\n                                    } \n                                </Typography>\n                             \n\n\n\n\n\n                                <Typography style={{fontSize: 14,}} color=\"textSecondary\" gutterBottom>\n                                    return:{this.state.minion.return} \n                                </Typography>\n                                \n                                <CardActions>\n\n                                </CardActions>\n                            </div>\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n                          close\n                        </Button>\n                    </DialogActions>\n\n                </Dialog>\n            </div>\n\n        );\n\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        saltReturns: state.saltReturns,\n        date: state.date\n    }\n}\nfunction matchDispatchToProps(dispatch){\n    return bindActionCreators({saltReturns: saltReturns}, dispatch);\n}\n\n\nexport default connect(mapStateToProps)(Orders);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport store from '../store';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport {SAVE_MINION} from \"../actions/types\";\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport SendIcon from '@material-ui/icons/Send';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport FormatListBulletedRoundedIcon from '@material-ui/icons/FormatListBulletedRounded';\nconst styles = theme => ({\n  root: {\n    maxWidth: 260,\n   \n    margin: theme.spacing(1),\n    marginLeft: theme.spacing(0),\n  },\n  root2: {\n    width: 230,\n    maxWidth: 360,\n    fontSize:12,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 16,\n    overflow:'wrap'\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  button: {\n    margin: theme.spacing(1),\n    fontSize: 12,\n  },\n  container: {\n    width: 300,\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n});\n\n\nclass MinionCard extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.onClickMinion = this.onClickMinion.bind(this);\n        this.handleClickButton = this.handleClickButton.bind(this);\n        const commentg= this.props.comment;\n       // console.log(this.props.id,'constructor');\n       this.state={ \n          open: false,\n          defer: false,\n          click:false,\n          comment: commentg,\n          listOpen:false\n        };\n    }\n    onClickMinion(){\n       this.setState({click:true});\n       let array =store.getState().saveMinion.saveMinion;\n       \n      \n       let minions=array.filter((item)=>{\n         if(item.id !==this.props.id){return (item)}\n       });\n       minions=minions.map((item,index)=>{\n        return( {...item,id:index+1});\n       })\n       // minions.unshift(this.state.saveMinion[0]);\n       store.dispatch({\n           type: SAVE_MINION,\n           payload: minions\n       });\n      // console.log(store.getState(),\"store.getState() from minionCard\");\n    }\n    handleClickButton(){\n      this.state.listOpen=!(this.state.listOpen);\n  \n  \n    }\nrender(){\n  // id={item.id} minion={item.minions} comment={item.comment}\n    const bull = <span className={this.props.classes.bullet}>•</span>;\n    if(this.state.comment===''){this.state.click =true}\n    if(this.state.click === false)\n    return (\n     \n      <Card className={this.props.classes.root}>\n        <CardContent>\n\n          <Button onClick={()=>{this.onClickMinion()}}>\n            <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\n            fun: {this.props.comment}\n            {/*this.props.fun*/}\n            </Typography>\n          </Button>\n\n            <Typography variant=\"h5\" component=\"h2\">\n              <div>\n                <div className={this.props.classes.container}>\n                  <List\n                      component=\"nav\"\n                      aria-labelledby=\"nested-list-subheader\"\n                      className={this.props.classes.root2}\n                    >\n                    <ListItem \n                      button   \n                      onClick={() =>\n                        this.setState({\n                        listOpen: !this.state.listOpen,\n                        })}\n                      >\n                      <ListItemIcon>\n                        <DashboardIcon />\n                      </ListItemIcon>\n                      \n                      <ListItemText primary=\"See minions\" />\n                          {this.state.listOpen ? <ExpandLess /> : <ExpandMore />}\n                      </ListItem>\n                      {\n                          this.props.minion.map((item)=>{\n                            return(\n                            <Collapse in={this.state.listOpen} timeout=\"auto\" unmountOnExit>\n                            <List component=\"div\" disablePadding>\n                              <ListItem  className={this.props.classes.nested}>\n                                  <ListItemIcon>\n                                      <StarBorder />\n                                  </ListItemIcon>\n                                  <ListItemText primary={item} />\n                              </ListItem>\n                            </List>\n                          </Collapse>\n                          )\n                          })\n                        }\n                  </List>\n                </div>\n               </div>\n            </Typography>\n            \n          {/*button*/}\n          </CardContent>\n          <CardActions>\n           \n        </CardActions>\n      </Card>\n     \n       \n      );\n      else{return(<div></div>);}\n}\n  \n}\n\nexport default withStyles(styles)(MinionCard);\n\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/authActions';\nimport PropTypes from 'prop-types';\nimport store from '../../store';\nimport Button from '@material-ui/core/Button';\nexport class Logout extends Component {\n  static propTypes = {\n    logout: PropTypes.func.isRequired,\n  };\n\n\n  render() {\n    // console.log(this.props)\n    return (\n        <Button  style={{color:'#fff',border:'none'}}  variant='outlined'  onClick={()=> store.dispatch(logout())}>\n          Log out\n        </Button>\n    );\n  }\n}\n\n\n\nexport default connect(\n  null,\n  { logout }\n)(Logout);","\n\nimport React, { Component } from \"react\";\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport store from '../store';\nimport { saveMinion } from '../actions/date';\nimport {SAVE_MINION} from \"../actions/types\";\nimport axios from 'axios';\nimport {\n    AddBox,\n    ArrowDownward,\n    Check,\n    ChevronLeft,\n    ChevronRight,\n    Clear,\n    DeleteOutline,\n    Edit,\n    FilterList,\n    FirstPage,\n    LastPage,\n    Remove,\n    SaveAlt,\n    Search,\n    ViewColumn,\n\n\n}from '@material-ui/icons';\nimport { withAlert } from 'react-alert';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport SendIcon from '@material-ui/icons/Send';\nimport MinionCard from './MinionCard';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Grid from '@material-ui/core/Grid';\nimport { returnErrors } from '../actions/errorActions';\nimport { listMinions } from '../actions/date';\n\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) =>  <Edit {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\n\nconst styles = theme => ({\n    MaterialTable:{\n        marginLeft: theme.spacing(12),\n        marginTop: theme.spacing(1.5),\n        width:450, \n    },\n    root: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center',\n      width: 500,\n      height:70,\n      marginTop: theme.spacing(1)\n    },\n   \n    input: {\n      marginLeft: theme.spacing(1),\n      marginTop: 0,\n\n      flex: 1,\n    },\n    minionStyle:{\n        marginTop: theme.spacing(5),\n        width:200\n    },\n    iconButton: {\n      padding: 10,\n      height:55\n    },\n    Divider: {\n        marginTop: theme.spacing(5),\n      height: 28,\n      margin: 20,\n    },\n    msg:{\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n    },\n    Comments:{\n        marginTop: theme.spacing(4),\n    },\n   \n    ButtonGroup: {\n        display: 'flex',\n        flexDirection: 'column',\n        \n        '& > *': {\n          margin: theme.spacing(0.5),\n        },\n      },\n    \n  });\n\n\n\n \n\nclass SaltStack extends React.Component {\n    constructor(props) {\n        super(props);\n        this.clickOpen = this.clickOpen.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.sentCommand = this.sentCommand.bind(this);\n        this.getMinionsFromServer = this.getMinionsFromServer.bind(this);\n        this.tokenConfig = this.tokenConfig.bind(this);\n        store.dispatch(listMinions());\n       // console.log(store.getState(),\"vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv\");\n        this.state={\n        alert:false,\n        msg:false,\n        menu:\"Dashboard\",\n        open: false,\n        defer: false,\n        clickSave:false,\n        history:[],\n        input:'',\n        saveMinion:{},\n        countSaveMinion:0,\n        warninginput:false,\n        warningNoMinionSelected:false,\n        data:[],\n        };\n        \n        \n       this.getMinionsFromServer();\n    }\n    getMinionsFromServer(){\n       \n        let tokenTemp=this.tokenConfig();\n      \n        axios.get('/get_connected_minions',tokenTemp)\n        .then((res) => {\n                let arr=[];\n                for(let i=0;i<res.data.result.length;i++){\n                   let minion={name:res.data.result[i]}\n                   arr.push(minion);\n                }             \n                this.setState({data:arr})\n        })\n        .catch(err => {\n            console.log(err,\"err get_connected_minions\");\n    \n           });\n        };\n        tokenConfig = () => {\n            //console.log(\"getstatteeeeeslatl\",store.getState())\n            // Get token from localstorage\n            const token = store.getState().auth.token;\n        \n            // Headers\n            const config = {\n                headers: {\n                    \"Content-type\": \"application/json\"\n                }\n            }\n        \n            // If token, add to headers\n            if(token) {\n               config.headers[\"Authorization\"] = ` Bearer ${token} `;\n            }\n        \n         return config;\n        };\n    handleClose = (event, reason) => \n    {\n        if (reason === 'clickaway') {\n          return;\n        }\n     \n        this.setState({msg:false,warninginput:false,warningNoMinionSelected:false});\n    };\n\n    handleClick = () => \n    {\n        this.state.countSaveMinion--;\n        \n        if((this.state.input !== '')  &&  (this.state.countSaveMinion===0)){\n            this.setState({msg:true});\n            setTimeout(()=>{this.setState({msg:false,clickSave:false});}, 2200);\n            this.state.saveMinion.comment=this.state.input;\n            this.state.history.unshift(this.state.saveMinion);\n            let minions =store.getState().saveMinion.saveMinion;\n            minions.unshift(this.state.saveMinion);\n            // minions.unshift(this.state.saveMinion[0]);\n            store.dispatch({\n                type: SAVE_MINION,\n                payload: minions\n            });\n            //console.log(store.getState(),\"store from saltstack\");\n            \n        }\n        \n        if(this.state.input === ''){ \n            this.setState({warninginput:true});\n            setTimeout(()=>{this.setState({warninginput:false});}, 2200);\n        }\n        if((this.state.countSaveMinion !==0) && (this.state.countSaveMinion!==1) &&(this.state.input !== '')  ){ \n            this.setState({warningNoMinionSelected:true});\n            setTimeout(()=>{this.setState({warningNoMinionSelected:false});}, 2200);\n        }\n\n        this.setState({input:''});\n\n\n      };\n   \n    clickOpen (rowData){\n        //  console.log(rowData,'rowData')\n        this.state.countSaveMinion=0;\n        this.state.countSaveMinion++;\n        const data=rowData.map((row)=>row.name);\n        let commntId=(store.getState().saveMinion.saveMinion.length)+1; \n        this.state.saveMinion={minions:data,id:commntId,comment:''};\n        this.getMinionsFromServer();\n        this.setState({alert:true,clickSave:true,});\n        setTimeout(()=>{this.setState({alert:false,});}, 2200);\n        \n    };\n\n    sentCommand(command){\n        \n        this.state.countSaveMinion--;\n        if( (this.state.countSaveMinion===0)){\n            \n            this.state.saveMinion.comment=command;\n            this.state.history.unshift(this.state.saveMinion);\n            let minions =store.getState().saveMinion.saveMinion;\n          //  console.log(store.getState().saveMinion.saveMinion,\"store.getState().saveMinion.saveMinion\")\n            minions.unshift(this.state.saveMinion);\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }\n            const cmd_body = {\n                func: this.state.command,\n                tgt: this.state.saveMinion,\n                salt_cmd: this.state.cmd_args\n            }\n            const body = JSON.stringify(cmd_body);\n            console.log(body)\n\n            let tokenTemp=this.tokenConfig();\n            axios.post('/saltstack_cmd',body, tokenTemp)\n            .then((res) => {\n                console.log(res)\n            })\n            .catch(err => {\n                console.log(\"err from SaltStack\")\n                store.dispatch(returnErrors(err.response.data.message, err.response.status, 'CMD_FAIL'));\n                // dispatch({\n                //     type: LOGIN_FAIL\n                // })\n            })\n            store.dispatch({\n                type: SAVE_MINION,\n                payload: minions\n            });\n           // console.log(this.state.history,'this.state.history')\n            this.setState({msg:true});\n            setTimeout(()=>{this.setState({msg:false,clickSave:false});}, 2200);\n         \n        }\n      \n        if((this.state.countSaveMinion !==0) && (this.state.countSaveMinion!==1)   ){ \n            this.setState({warningNoMinionSelected:true});\n            setTimeout(()=>{this.setState({warningNoMinionSelected:false});}, 2200);\n        }\n\n    };\n\n\n\n  render(){\n  \n    return (\n\n<div style={{display: 'flex',flexDirection: 'row',}}>\n\n<div style={{display: 'flex',flexDirection: 'column',}}>\n   \n    <Paper component=\"form\" className={this.props.classes.root}>\n        <IconButton className={this.props.classes.iconButton} aria-label=\"menu\">\n            <MenuIcon />\n        </IconButton>\n            \n        <InputBase\n        autoComplete\n        autoFocus='true'\n        value={this.state.input}\n        onChange={(event)=>{this.setState({input:event.target.value})}}\n        className={this.props.classes.input}\n        placeholder=\"Command Line\"\n        inputProps={{ 'aria-label': 'Command Line' }}\n        />\n                    \n        <IconButton color='primary' size='medium' className={this.props.classes.iconButton} aria-label=\"directions\" onClick={this.handleClick}>\n            <SendIcon />\n        </IconButton>\n    </Paper>\n\n\n    <div className={this.props.classes.Comments}>\n        commands\n        <Divider light  style={{width:400}}/>\n    </div>\n\n    <div className={this.props.classes.ButtonGroup}>\n        <ButtonGroup \n            size=\"large\" \n            color=\"primary\" \n            orientation=\"horizontal\"\n            color=\"primary\"\n            aria-label=\"vertical contained primary button group\"\n            variant=\"text\"\n            style={{ marginTop:35,width:380,height:50,}}>\n           \n         \n\n            <Button onClick={()=>this.sentCommand('state.apply')}>state.apply</Button>\n            <Button onClick={()=>this.sentCommand('state.fun')}>state.fun</Button>\n            <Button onClick={()=>this.sentCommand('cd')}>cd</Button>\n\n        </ButtonGroup>\n\n       {\n           /* <ButtonGroup \n            size=\"large\" \n            color=\"primary\" \n            orientation=\"horizontal\"\n            color=\"primary\"\n            aria-label=\"vertical contained primary button group\"\n            variant=\"text\"\n            style={{ marginTop:15,width:380,height:50,}}>\n\n            <Button onClick={()=>this.sentCommand('state.apply')}>state.apply</Button>\n            <Button onClick={()=>this.sentCommand('state.fun')}>state.fun</Button>\n            <Button onClick={()=>this.sentCommand('cd')}>cd</Button>\n                            \n        </ButtonGroup>\n\n        <ButtonGroup size=\"large\" \n            color=\"primary\" \n            orientation=\"horizontal\"\n            color=\"primary\"\n            aria-label=\"vertical contained primary button group\"\n            variant=\"text\"\n            style={{ marginTop:15,width:380,height:50,}}>\n\n            <Button onClick={()=>this.sentCommand('state.apply')}>state.apply</Button>\n            <Button onClick={()=>this.sentCommand('state.fun')}>state.fun</Button>\n            <Button onClick={()=>this.sentCommand('cd')}>cd</Button>\n        </ButtonGroup>\n    */}\n    </div>\n\n    <div className={this.props.classes.Divider}>\n        History\n        <Divider light  style={{width:400}}/>\n    </div>\n\n\n    {\n        <div style={{ display: 'flex',flexDirection: 'row',flexFlow: 'row wrap',maxWidth:600}}>\n        {store.getState().saveMinion.saveMinion.map(item =>{\n            return(\n                \n                  <MinionCard  id={item.id} minion={item.minions} comment={item.comment} />\n        )})}\n        </div>\n    }  \n\n    \n    <div className={this.props.classes.Divider}>\n        <Divider light  style={{width:400}}/>\n    </div>\n\n\n    </div>\n<div>\n  \n\n    <div className={this.props.classes.MaterialTable}>\n        {\n            this.state.alert?\n            (   <div className={this.props.classes.msg}>\n                   \n                        <Alert severity=\"success\">\n                                The minions you selected were  — <strong>accepted in the system</strong>\n                        </Alert>\n                   \n                </div>\n            ):<div></div>\n        }\n        <MaterialTable\n        \n            title='Minions'\n            icons={tableIcons}\n            columns={[{ title: 'Name', field: 'name' },]}\n            data={this.state.data} \n            options={{selection: true}}       \n            actions=\n            {[{\n                icon: forwardRef((props, ref) => <SaveIcon color='action' {...props} ref={ref} />),\n                tooltip: 'Save Minions',\n                onClick: (event, rowData) => {this.clickOpen(rowData)}\n            }]}\n        />\n        {\n            this.state.clickSave === true?\n                (<div className={this.props.classes.msg}>\n                    <Snackbar open={this.state.msg} autoHideDuration={6000} onClose={this.handleClose}>\n                        <Alert onClose={this.handleClose} severity=\"success\">\n                            The commands you made were received in the system!\n                        </Alert>\n                    </Snackbar>\n                </div>\n                ):<div></div>\n        }\n        {\n            this.state.warninginput === true ?\n            (   <div className={this.props.classes.msg}>\n                <Snackbar open={this.state.warninginput} autoHideDuration={6000} onClose={this.handleClose}>\n                    <Alert onClose={this.handleClose} severity=\"warning\">\n                          command not sent because     <strong> no command entered   </strong>\n                        </Alert>\n                  \n                    </Snackbar>\n                   \n                </div>\n            )\n            :<div></div>\n        }\n        {\n            this.state.warningNoMinionSelected === true ?\n            (   <div className={this.props.classes.msg}>\n                <Snackbar open={this.state.warningNoMinionSelected} autoHideDuration={6000} onClose={this.handleClose}>\n                    <Alert onClose={this.handleClose} severity=\"warning\">\n                              command not sent because <strong>no minion selected   </strong>\n                        </Alert>\n                  \n                    </Snackbar>\n                   \n                </div>\n            )\n            :<div></div>\n        }\n\n\n\n\n    </div>\n\n</div>\n</div>\n    );\n  }\n\n}\n\nexport default withStyles(styles)(SaltStack);","import { withStyles } from \"@material-ui/core/styles\";\nimport React, { PureComponent } from 'react';\nimport store from '../store';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport axios from 'axios';\nconst styles = theme => ({\n    root: {\n        minWidth: 345,\n        maxWidth: 400,\n        margin:theme.spacing(2.5),\n       \n      },\n      media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n      },\n      expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n          duration: theme.transitions.duration.shortest,\n        }),\n      },\n      expandOpen: {\n        transform: 'rotate(180deg)',\n      },\n      avatar: {\n        backgroundColor: red[500],\n      },\n      paragraph:{\n          paddingLeft:theme.spacing(7.8),\n          wordWrap:'break-word',\n      },\n});\n\nconst tokenConfig = getState => {\n  // console.log(\"getstatteeeeeslatl\",getState())\n   // Get token from localstorage\n   const token = getState().auth.token;\n\n   // Headers\n   const config = {\n       headers: {\n          'Content-Type': 'application/json'\n       }\n   }\n\n   // If token, add to headers\n   if(token) {\n      config.headers[\"Authorization\"] = ` Bearer ${token} `;\n   }\n\nreturn config;\n}\nclass TeamCard extends React.Component {\n    constructor(props) {\n        super(props); \n        //this.handleExpandClick = this.handleExpandClick.bind(this);\n        this.deleteIcon = this.deleteIcon.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.state={expanded:false,UpperCase:'',open:false,isDelete:false};\n        let strName=this.props.first_name.toUpperCase();\n        this.props.first_name !== ''?this.state.UpperCase=this.props.first_name.toUpperCase()[0]:this.state.UpperCase=\"\";\n    }\n    handleClose(){\n      this.setState((prevState) => ({open:!prevState.open}));\n      const { password, ReturnPassword,Role,Email,first_name,last_name } = this.state;\n      const body = JSON.stringify({first_name:first_name,last_name:last_name,role:Role,email:Email, password:password });\n      axios.delete(\"/delete/\"+this.props.id, tokenConfig(store.getState))\n      .then((res)=> {\n        this.setState({isDelete:true});});\n          //  this.props.arr=temp;\n    }\n    handleClickOpen(){\n      this.setState((prevState) => ({open:!prevState.open}));\n    }\n    deleteIcon(){\n\n    }\n    // handleExpandClick(){\n    //       this.setState((prevState) => ({expanded:!prevState.expanded}));\n    // }\n\n\n\n    render()\n    {\n      const colors = ['#ff0000', '#00ff00', '#0000ff'];\n      const random_color = colors[Math.floor(Math.random() * colors.length)];\n      //console.log(this.props);\n        return (\n      this.state.isDelete===false?\n      (<Card className={this.props.classes.root}>\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"recipe\" className={this.props.classes.avatar}>\n              {this.state.UpperCase}\n            </Avatar>\n          }\n      // action={\n      //       <IconButton aria-label=\"settings\">\n      //         <AccountCircleIcon />\n      //       </IconButton>\n      //     }first_name\n          title={this.props.first_name+' '+this.props.last_name}\n          subheader={this.props.role}\n        />\n      \n        <CardContent>\n          <Typography paragraph className={this.props.classes.paragraph}>\n          Email:{this.props.mail}\n          </Typography>\n          <Typography paragraph className={this.props.classes.paragraph}>\n        {/* number:0549494949*/}\n          </Typography>\n\n        </CardContent>\n\n        <CardActions disableSpacing>\n        \n      <IconButton \n      aria-label=\"share\"\n      variant=\"outlined\" \n      //color=\"primary\" \n      onClick={this.handleClickOpen}\n        //onClick={this.handleExpandClick}\n      color='secondary'\n        >\n            <DeleteIcon />\n      </IconButton>\n      <Dialog\n      open={this.state.open}\n      onClose={this.handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      >\n\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n        Are you sure you want to delete a user from the system?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n      <Button onClick={this.handleClickOpen} color=\"primary\">\n        Disagree\n      </Button>\n        <Button onClick={this.handleClose} color=\"secondary\" autoFocus>\n          Delete\n        </Button>\n      </DialogActions>\n      </Dialog>\n      {/*\n          <IconButton\n            className={clsx(this.props.classes.expand, {\n              [this.props.classes.expandOpen]: this.state.expanded,\n            })}\n            onClick={this.handleExpandClick}\n            aria-expanded={this.state.expanded}\n            aria-label=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n          */}\n        </CardActions>\n\n\n        {/*<Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Typography paragraph>\n              Heat\n            </Typography>\n          </CardContent>\n        </Collapse>*/}\n      </Card>)\n:<div></div>\n    \n\n\n          );\n        }\n    \n}\n\nexport default withStyles(styles)(TeamCard);","\nimport { withStyles } from \"@material-ui/core/styles\";\nimport React, { PureComponent } from 'react';\nimport store from '../store';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Button from '@material-ui/core/Button';\n\nimport {REGISTER_SUCCESS,REGISTER_FAIL} from '../actions/types';\nimport {returnErrors}  from '../actions/errorActions';\n\nimport IconButton from '@material-ui/core/IconButton';\n\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport TeamCard from './TeamCard';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { ContactsOutlined } from \"@material-ui/icons\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { teamList } from '../actions/date';\nimport axios from 'axios';\nconst styles = theme => ({\n    root: {\n      // maxWidth: 1000,\n      // display: 'flex',\n      // flexDirection: 'row',\n      // flexWrap:'warp',\n      //justifyContent:'space-around', \n      display: 'flex',\n      flexDirection: 'row',\n      flexFlow: 'row wrap',\n      maxWidth:1300,\n      justifyContent:'space around'\n\n      },\n      field:{\n        display: 'flex',\n        flexDirection: 'column',\n        maxWidth:250,\n        justifyContent:'space around',\n        marginTop:theme.spacing(0),\n        marginLeft:theme.spacing(55.5),\n      },\n      input:{\n        paddingTop:theme.spacing(2),\n        paddingLeft:theme.spacing(-4)\n      },\n      paragraph:{\n          paddingLeft:theme.spacing(7.8)\n      },\n      fab:{\n        color:'#fff',\n        //cursor: 'pointer',\n        border:'none',\n        outline: 'none',\n        outlineOffset: 'none',\n        marginLeft:theme.spacing(4),\n        marginTop:theme.spacing(4)\n      },\n      button:{\n        marginTop:theme.spacing(6)\n      },\n      form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n      },\n      msg:{\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n    },\n});\n\n const tokenConfig = getState => {\n    // console.log(\"getstatteeeeeslatl\",getState())\n     // Get token from localstorage\n     const token = getState().auth.token;\n \n     // Headers\n     const config = {\n         headers: {\n            'Content-Type': 'application/json'\n         }\n     }\n \n     // If token, add to headers\n     if(token) {\n        config.headers[\"Authorization\"] = ` Bearer ${token} `;\n     }\n \n  return config;\n }\nclass Team extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleExpandClick = this.handleExpandClick.bind(this);\n        this.ClickFab = this.ClickFab.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.signIn = this.signIn.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleClickShowPassword = this.handleClickShowPassword.bind(this);\n        this.handleMouseDownPassword = this.handleMouseDownPassword.bind(this);\n        this.handleClickShowPasswordReturn = this.handleClickShowPasswordReturn.bind(this);\n        this.handleMouseDownPasswordReturn = this.handleMouseDownPasswordReturn.bind(this);\n        this.initTeam = this.initTeam.bind(this);\n       \n        this.state=\n        {\n          expanded:false,\n          fab:false,\n          first_name:'',\n          last_name:'',\n          Role:'',\n          Email:'',\n          Password:'',\n          ReturnPassword:'',\n          showPasswordReturn:'password',\n          showPassword:'password',\n          errPassword:false,\n          saveCard:false,\n          Team:[],\n          counter:0,\n          err_first_name:false,\n          err_last_name:false,\n          err_Role:false,\n          err_Email:false,\n          err_Password:false,\n          no_add_card:false,\n          \n        };\n        this.initTeam();\n    }\n\n    initTeam(){\n      axios.get('/get_users',tokenConfig(store.getState))\n      .then((res) => { \n       \n        this.setState({Team:res.data});\n      })\n      .catch(err => {\n          console.log(err);\n  \n         });\n   \n      \n    }\n\n    handleClickShowPassword(){\n      this.setState({showPassword:'text'});\n    }\n    handleMouseDownPassword(){\n      this.setState({showPassword:'password'});\n    }\n    handleClickShowPasswordReturn(){\n      this.setState({showPasswordReturn:'text'});\n    }\n    handleMouseDownPasswordReturn(){\n      this.setState({showPasswordReturn:'password'});\n    }\n\n\n\n\n\n\n\n\n\n    handleExpandClick(){\n          this.setState((prevState) => ({expanded:!prevState.expanded}));\n    }\n \n    ClickFab(){\n      this.setState((prevState) => ({\n      fab:!prevState.fab,password:'',\n      first_name:'',\n      lastName:'',\n      Role:'',\n      Email:'',\n      Password:'',\n      ReturnPassword:'',}));\n    \n    }\n   \n    signIn(event){\n      \n      event.preventDefault();\n      const { password, ReturnPassword,Role,Email,first_name,last_name } = this.state;\n      //send cardTeam to server\n      //console.log(\"event.preventDefault()\");\n      const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\n      const emailRegex = new RegExp(\"[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,6}\");    \n      let flag=true;\n      if((strongRegex.test(password)===false) || ( password.length>30)  ){flag=false;this.setState({err_Password:true});setTimeout(()=>{this.setState({err_Password:false});}, 20000);}\n      if(first_name.length>30 ){flag=false;this.setState({err_first_name:true});setTimeout(()=>{this.setState({err_first_name:false});}, 8000);}\n      if(last_name.length>30 ){flag=false;this.setState({err_last_name:true});setTimeout(()=>{this.setState({err_last_name:false});}, 8000);}\n      if(Role.length>30 ){flag=false;this.setState({err_Role:true});setTimeout(()=>{this.setState({err_Role:false});}, 8000);}\n      if((Email.length>50) || (emailRegex.test(this.state.Email.toUpperCase())===false)){flag=false;this.setState({err_Email:true});setTimeout(()=>{this.setState({err_Email:false});}, 15000);}\n      if (password===ReturnPassword){}\n      else\n      {\n        this.setState({errPassword:true});\n        setTimeout(()=>{this.setState({errPassword:false});}, 6000);\n      }\n\n      if((password===ReturnPassword) && (flag===true)){\n\n        this.setState((prevState) => ({fab:false}));\n         \n\n            const body = JSON.stringify({first_name:first_name,last_name:last_name,role:Role,email:Email, password:password });\n            //console.log(body,'body')\n            axios.post(\"/register\", body, tokenConfig(store.getState))\n          .then(res => \n            {\n              this.state.Team.push({first_name:first_name,mail:Email,role:Role,last_name:last_name});\n              this.setState({saveCard:true});\n              setTimeout(()=>{this.setState({saveCard:false});}, 4000);\n            }\n          )\n            .catch(err => {\n            console.log(err)\n            this.setState({no_add_card:true});\n            setTimeout(()=>{this.setState({no_add_card:false});}, 4000);\n            })\n\n            \n\n            this.setState({expanded:false,\n              fab:false,\n              first_name:'',\n              last_name:'',\n              Role:'',\n              Email:'',\n              Password:'',\n              ReturnPassword:'',\n              showPasswordReturn:'password',\n              showPassword:'password',\n              errPassword:false,\n              UnsecuredPassword:false,\n            });\n             \n           \n          \n          \n            setTimeout(()=>{this.initTeam();}, 500);\n         \n      }\n   \n      \n   \n    }\n    // shouldComponentUpdate(nextState) {\n    //   console.log(nextState,\"nextState\")\n    //   if(this.state.Password === nextState.ReturnPassword || nextState.Password === this.state.ReturnPassword){\n    //     console.log(\"7878787\")\n    //     //this.setState((prevState) => ({fab:false}));\n    //   }UnsecuredPassword:false\n    // }\n    handleInputChange(e) {\n  \n      this.setState({ [e.target.name] : e.target.value});\n      // console.log(this.state);\n    }\n    handleClose (event, reason) \n    {\n        if (reason === 'clickaway') {\n          return;\n        }\n     \n        this.setState({errPassword:false,saveCard:false});\n    }\n    // shouldComponentUpdate(nextProps, nextState) {\n    //   console.log(nextState,\"nextState\");\n    //  }\n    // componentWillReceiveProps(){\n    //   this.initTeam();\n    // }\n    // shouldComponentUpdate(){\n    //   this.initTeam();\n    // }\n    // componentWillUpdate(){\n    //  console.log(this.state.counter,'this.state.counter');\n    //   if(this.state.counter<=1)\n    //   { \n        \n    //     axios.get('/get_users',tokenConfig(store.getState))\n    //   .then((res) => { \n       \n    //     this.setState({Team:res.data});\n    //   })\n    //   .catch(err => {\n    //       console.log(err);\n  \n    //      });\n    //      this.setState((prevState) => ({counter:2}));\n    // }}\n     \n    render()\n   \n    {\n      \n      if(this.state.fab === false){\n\n          return(\n\n            <div>\n              \n              \n              <div className={this.props.classes.msg}>\n                <Snackbar open={this.state.saveCard} autoHideDuration={6000} onClose={this.handleClose}>\n                    <Alert onClose={this.handleClose} severity=\"success\">\n                    The system added  <strong>a new staff member   </strong>\n                    </Alert>\n                    </Snackbar>\n                </div>\n\n                <div className={this.props.classes.msg}>\n                <Snackbar open={this.state.no_add_card} autoHideDuration={6000} onClose={this.handleClose}>\n                    <Alert onClose={this.handleClose} severity=\"error\">\n                    The system   <strong> not added a new staff member   </strong>\n                    </Alert>\n                    </Snackbar>\n                </div>\n               \n                <div className={this.props.classes.root}> \n                {\n                \n                  this.state.Team.map((item,arr)=>{\n                  if(this.state.Team.length !== 0){ \n                    \n                    return <TeamCard  arr={arr} first_name={item.first_name}  last_name={item.last_name} role={item.role} mail={item.email} id={item._id}/>\n                  }\n                  \n                })\n              }\n              </div>\n              <Fab color=\"primary\" aria-label=\"add\" className={this.props.classes.fab} onClick={this.ClickFab}>\n              <AddIcon />\n            </Fab>\n           </div>\n          );\n\n      }\n\n      else\n      {\n       \n        return(\n          <div className={this.props.classes.field}>\n          <form className={this.props.classes.form} onSubmit={this.signIn} >\n            <div className={this.props.classes.input}>\n  \n              <TextField\n                className={this.props.classes.margin}\n                id=\"input-with-icon-textfield\"\n                label=\"First Name\"\n                required\n                fullWidth\n                name='first_name'\n                value={this.state.first_name}\n                onChange={this.handleInputChange}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <AccountCircle />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n  \n            </div>\n  \n            {\n              this.state.err_first_name===true?\n              (   <div className={this.props.classes.msg}>\n                \n                  <Alert onClose={this.handleClose} severity=\"error\">\n                  The first name must be less than  <strong>30 characters  </strong>\n                  </Alert>\n                  </div>\n              )\n              :<div></div>\n           }\n            <div className={this.props.classes.input}>\n  \n            <TextField\n              className={this.props.classes.margin}\n              id=\"input-with-icon-textfield\"\n              label=\"Last Name\"\n              fullWidth\n              name='last_name'\n             \n              value={this.state.last_name}\n              onChange={this.handleInputChange}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <AccountCircle />\n                  </InputAdornment>\n                ),\n              }}\n            />\n\n          </div>\n\n\n          {\n            this.state.err_last_name===true?\n            (   <div className={this.props.classes.msg}>\n              \n                <Alert onClose={this.handleClose} severity=\"error\">\n                The last name must be less than  <strong>30 characters  </strong>\n                </Alert>\n                </div>\n            )\n            :<div></div>\n         }\n            <div className={this.props.classes.input}>\n  \n              <TextField\n                className={this.props.classes.margin}\n                id=\"input-with-icon-textfield\"\n                label=\"Email\"\n                required\n                fullWidth\n                name='Email'\n                value={this.state.Email}\n                onChange={this.handleInputChange}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <AccountCircle />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n  \n            </div>\n  \n\n            {\n              this.state.err_Email===true?\n              (   <div className={this.props.classes.msg}>\n                \n                  <Alert onClose={this.handleClose} severity=\"error\">\n                   <strong> Invalid mail  </strong>\n                  </Alert>\n                  </div>\n              )\n              :<div></div>\n           }\n  \n            <div className={this.props.classes.input}>\n  \n              <TextField\n                className={this.props.classes.margin}\n                id=\"input-with-icon-textfield\"\n                label=\"Role\"\n                name='Role'\n                fullWidth\n                value={this.state.Role}\n                onChange={this.handleInputChange}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <AccountCircle />\n                    </InputAdornment>\n                  ),\n                }}\n                \n              />\n  \n            </div>\n\n            {\n              this.state.err_Role===true?\n              (   <div className={this.props.classes.msg}>\n                \n                  <Alert onClose={this.handleClose} severity=\"error\">\n                  The role name must be less than  <strong>30 characters  </strong>\n                  </Alert>\n                  </div>\n              )\n              :<div></div>\n           }\n            <div className={this.props.classes.input}>\n  \n              <TextField\n                className={this.props.classes.margin}\n                id=\"input-with-icon-textfield\"\n                label=\"password\"\n                //variant=\"outlined\"\n                //margin=\"normal\"\n                required\n                fullWidth\n               \n                name=\"password\"\n                label=\"Password\"\n                type={this.state.showPassword==='text'  ? 'text' : 'password'}\n                value={this.state.password}\n                onChange={this.handleInputChange}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <AccountCircle />\n                    </InputAdornment>\n                  ),\n                  endAdornment:(\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={this.handleClickShowPassword}\n                        onMouseDown={this.handleMouseDownPassword}\n                      >\n                        {this.state.showPassword==='text' ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  )\n                }}\n               \n              />\n           \n\n            </div>\n            {\n              this.state.err_Password===true?\n              (   <div className={this.props.classes.msg}>\n                \n                  <Alert onClose={this.handleClose} severity=\"error\">\n                  The password <strong>must </strong>  be at least 8 characters long, and include uppercase and lowercase letters, and special characters\n                       <strong>{\"{ !, @, #, \\, $,%, \\, ^ &, \\, * }\"}  </strong>\n                  </Alert>\n                  </div>\n              )\n              :<div></div>\n           }\n            \n            <div className={this.props.classes.input}>\n  \n            <TextField\n              className={this.props.classes.margin}\n              id=\"input-with-icon-textfield\"\n              label=\"password\"\n              //variant=\"outlined\"\n              //margin=\"normal\"\n              required\n              fullWidth\n              name=\"ReturnPassword\"\n              label=\"Return Password\"\n              type={this.state.showPasswordReturn==='text' ? 'text' : 'password'}\n              value={this.state.ReturnPassword}\n                onChange={this.handleInputChange}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <AccountCircle />\n                  </InputAdornment>\n                ),\n                endAdornment:(\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={this.handleClickShowPasswordReturn}\n                      onMouseDown={this.handleMouseDownPasswordReturn}\n                    >\n                      {this.state.showPasswordReturn==='text' ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                )\n              }}\n             \n            />\n  \n          </div>\n\n      \n\n          {\n            this.state.errPassword===true?\n            (   <div className={this.props.classes.msg}>\n              \n                <Alert onClose={this.handleClose} severity=\"error\">\n                 Passwords  <strong>unequal   </strong>\n                </Alert>\n                </div>\n            )\n            :<div></div>\n         }\n      \n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n              size=\"small\"\n              fullWidth\n              className={this.props.classes.button}\n             // onClick={this.ClickFab}\n              startIcon={<SaveIcon />}\n            >\n              Save\n              </Button>\n             \n          </form> \n            \n          </div>\n        )\n      }\n   \n    \n    }\n  }\n\nexport default withStyles(styles)(Team);","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\n\nimport Graph from './Component/Graph';\nimport SearchTime from './Component/SearchTime';\nimport Table from './Component/Table';\nimport MinionCard from './Component/MinionCard';\nimport { saltReturns } from './actions/date';\nimport store from './store';\nimport { Logout } from './Component/auth/Logout';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport SimCardIcon from '@material-ui/icons/SimCard';\n\nimport SaltStack from './Component/SaltStack';\n\nimport Team from './Component/Team';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader\n}from '@material-ui/core/';\n\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport { listMinions } from './actions/date';\n //while(store.getState().saltReturns.saltReturns===null);\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    paddingRight: theme.spacing(3.5),\n    paddingTop:theme.spacing(2),\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(3),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  table: {\n    // marginLeft:theme.spacing(0),\n    // marginTop:theme.spacing(4),\n    paddingRight: 3.5,\n    paddingTop:1,\n    paddingLeft:1,\n    paddingBottom: 3,\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  \n  },\n  fixedHeight: {\n    height: 240,\n  },\n  Logout:{\n   \n  },\n  AccountCircleIcon:{\n  \n  },\n  NotificationsIcon:{\n    display:'flex',\n    justifyContent:'space-between',\n    width:43\n  }\n});\nclass Dashboard extends React.Component {\n  constructor(props) {\n      super(props);\n      //console.log(store.getState(),\"store from dashboard 1\");\n      store.dispatch(saltReturns());\n     // store.dispatch(listMinions());\n      //console.log(store.getState(),\"store from dashboard 2\");\n      this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\n      this.handleDrawerClose = this.handleDrawerClose.bind(this);\n      this.SelectMenu = this.SelectMenu.bind(this);\n      this.state={open:true,menu:\"Dashboard\"};\n  }\n  \n \n\n  handleDrawerOpen = () => {\n    this.setState({open:true});\n  };\n  handleDrawerClose = () => {\n    this.setState({open:false});\n  };\n \n  SelectMenu = (str) => {\n    this.setState({menu:str});\n  };\n  render(){  \n    const fixedHeightPaper = clsx(this.props.classes.paper, this.props.classes.fixedHeight);\n\n    if(this.state.menu==='Dashboard')\n    {\n      return (\n        <div className={this.props.classes.root}>\n    \n          <CssBaseline />\n          <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\n    \n            <Toolbar className={this.props.classes.toolbar}>\n          \n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={this.handleDrawerOpen}\n                className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\n              >\n    \n                <MenuIcon />\n              </IconButton>\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\n                Dashboard\n              </Typography>\n              \n             \n\n                <IconButton color=\"inherit\" className={this.props.classes.NotificationsIcon}>\n                  <Badge badgeContent={4} color=\"secondary\">\n                 \n                    <NotificationsIcon />\n                  </Badge>\n                  {/*<AccountCircleIcon />*/}\n                </IconButton>\n\n                <Logout />\n             \n            \n            \n         \n    \n            </Toolbar>\n          </AppBar>\n          <Drawer\n            variant=\"permanent\"\n            classes={{\n              paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\n            }}\n            open={this.state.open}\n          >\n            <div className={this.props.classes.toolbarIcon}>\n              <IconButton onClick={this.handleDrawerClose}>\n                <ChevronLeftIcon />\n              </IconButton>\n            </div>\n            <Divider />\n            <List>\n              \n            <ListItem button\n            onClick={()=>{this.SelectMenu('Dashboard')}}\n            >\n            <ListItemIcon>\n              <DashboardIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Dashboard\" />\n          </ListItem>\n          <ListItem button\n          onClick={()=>{this.SelectMenu('SaltStack')}}\n          >\n            <ListItemIcon>\n              <SimCardIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"SaltStack\" />\n          </ListItem>\n          <ListItem button\n          onClick={()=>{this.SelectMenu('Team')}}\n          >\n            <ListItemIcon>\n              <PeopleIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Team\" />\n          </ListItem>\n\n            </List>\n          </Drawer>\n          <main className={this.props.classes.content}>\n            <div className={this.props.classes.appBarSpacer} />\n            <Container maxWidth=\"lg\" className={this.props.classes.container}>\n              <Grid container spacing={3}>\n                {/* Graph */}\n                <Grid item xs={12} md={8} lg={9}>\n                  <Paper className={fixedHeightPaper}>\n                    <Graph />\n                  </Paper>\n                </Grid>\n                {/* Recent SearchTime */}\n                <Grid item xs={12} md={4} lg={3}>\n                  <Paper className={fixedHeightPaper}>\n                    <SearchTime />\n                  </Paper>\n                </Grid>\n                {/* Recent Table */}\n                <Grid item xs={20}>\n                  <div className={this.props.classes.paper}>\n                    <Table />\n                  </div>\n                </Grid>\n              </Grid>\n            </Container>\n       \n    \n          </main>\n    \n        </div>\n      );\n    }\n      else if (this.state.menu==='SaltStack'){\n\n        return (\n          <div className={this.props.classes.root}>\n      \n            <CssBaseline />\n            <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\n      \n            <Toolbar className={this.props.classes.toolbar}>\n          \n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\n            >\n  \n              <MenuIcon />\n            </IconButton>\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\n            SaltStack\n            </Typography>\n  \n              <IconButton color=\"inherit\" className={this.props.classes.NotificationsIcon}>\n                <Badge badgeContent={4} color=\"secondary\">\n               \n                  <NotificationsIcon />\n                </Badge>\n                {/*<AccountCircleIcon />*/}\n              </IconButton>\n\n              <Logout />\n \n          </Toolbar>\n            </AppBar>\n            <Drawer\n              variant=\"permanent\"\n              classes={{\n                paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\n              }}\n              open={this.state.open}\n            >\n              <div className={this.props.classes.toolbarIcon}>\n                <IconButton onClick={this.handleDrawerClose}>\n                  <ChevronLeftIcon />\n                </IconButton>\n              </div>\n              <Divider />\n              <List>\n              \n                      <ListItem button\n                      onClick={()=>{this.SelectMenu('Dashboard')}}\n                      >\n                      <ListItemIcon>\n                        <DashboardIcon />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Dashboard\" />\n                    </ListItem>\n                    <ListItem button\n                    onClick={()=>{this.SelectMenu('SaltStack')}}\n                    >\n                      <ListItemIcon>\n                        <SimCardIcon />\n                      </ListItemIcon>\n                      <ListItemText primary=\"SaltStack\" />\n                    </ListItem>\n                    <ListItem button\n                    onClick={()=>{this.SelectMenu('Team')}}\n                    >\n                      <ListItemIcon>\n                        <PeopleIcon />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Team\" />\n                    </ListItem>\n        \n                      </List>\n            \n            </Drawer>\n\n            <main className={this.props.classes.content}>\n              <div className={this.props.classes.appBarSpacer} />\n              <Container maxWidth=\"lg\" className={this.props.classes.container}>\n\n              <Grid item  xs >\n              <div className={this.props.classes.table}>\n                  <SaltStack/>\n              </div>\n   \n                </Grid>\n\n              </Container>\n            </main>\n      \n          </div>\n        );}\n                    \n              else if (this.state.menu==='Team'){\n\n                return (\n                  <div className={this.props.classes.root}>\n              \n                    <CssBaseline />\n                    <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\n              \n                    <Toolbar className={this.props.classes.toolbar}>\n                  \n                    <IconButton\n                      edge=\"start\"\n                      color=\"inherit\"\n                      aria-label=\"open drawer\"\n                      onClick={this.handleDrawerOpen}\n                      className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\n                    >\n          \n                      <MenuIcon />\n                    </IconButton>\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\n                    Team\n                    </Typography>\n                    \n                   \n        \n                      <IconButton color=\"inherit\" className={this.props.classes.NotificationsIcon}>\n                        <Badge badgeContent={4} color=\"secondary\">\n                       \n                          <NotificationsIcon />\n                        </Badge>\n                        {/*<AccountCircleIcon />*/}\n                      </IconButton>\n        \n                      <Logout />\n                   \n                  \n                  \n               \n          \n                  </Toolbar>\n                    </AppBar>\n                    <Drawer\n                      variant=\"permanent\"\n                      classes={{\n                        paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\n                      }}\n                      open={this.state.open}\n                    >\n                      <div className={this.props.classes.toolbarIcon}>\n                        <IconButton onClick={this.handleDrawerClose}>\n                          <ChevronLeftIcon />\n                        </IconButton>\n                      </div>\n                      <Divider />\n                      <List>\n              \n                      <ListItem button\n                      onClick={()=>{this.SelectMenu('Dashboard')}}\n                      >\n                      <ListItemIcon>\n                        <DashboardIcon />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Dashboard\" />\n                    </ListItem>\n                    <ListItem button\n                    onClick={()=>{this.SelectMenu('SaltStack')}}\n                    >\n                      <ListItemIcon>\n                        <SimCardIcon />\n                      </ListItemIcon>\n                      <ListItemText primary=\"SaltStack\" />\n                    </ListItem>\n                    <ListItem button\n                    onClick={()=>{this.SelectMenu('Team')}}\n                    >\n                      <ListItemIcon>\n                        <PeopleIcon />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Team\" />\n                    </ListItem>\n        \n                      </List>\n        \n        \n        \n        \n        \n                    </Drawer>\n        \n                    <main className={this.props.classes.content}>\n                      <div className={this.props.classes.appBarSpacer} />\n                      <Container maxWidth=\"lg\" className={this.props.classes.container}>\n        \n                      <Grid item  xs >\n                      <div className={this.props.classes.table}>\n                          <Team/>\n                      </div>\n           \n                        </Grid>\n        \n                      </Container>\n                    </main>\n              \n                  </div>\n                );\n                    }\n              \n              \n}\n\n\n}\n\nexport default withStyles(styles)(Dashboard);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Alert from '@material-ui/lab/Alert';\n\nimport axios from 'axios';\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n\n\n\nconst styles = theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n});\n\nclass ForgotPassword extends React.Component {\n  constructor(props) {\n    super(props);\n    this.resetPass = this.resetPass.bind(this);\n    this.state = {\n      email: { value: null, error: false, helperText: null },\n      msg: null\n    };\n  }\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    reset_password: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  };\n\n  \n\n  resetPass(event){\n    event.preventDefault();\n    if (this.emailInput.value === \"\") {\n      this.setState({\n        email: {\n          value: this.emailInput.value,\n          error: true,\n          helperText: \"Your email must be specified.\"\n        }\n      });\n      this.emailInput.focus();\n    }\n    else{\n    \n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const email = this.emailInput.value\n        // Request body\n        const body = JSON.stringify({ email });\n    \n        axios.post('/forgot_password', body, config)\n        .then(res =>{\n            this.setState({ msg: res.msg })\n            }\n          \n        )\n        .catch(err => {\n            this.setState({ msg: err.msg })\n      \n        })\n        \n     }\n    \n    \n    }\n\n\n  render(){\n    const { classes } = this.props;\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n             Enter Your Email Address\n          </Typography>\n          <form className={classes.form} onSubmit={this.resetPass} >\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              required\n              inputRef={input => (this.emailInput = input)}\n              error={this.state.email.error}\n              helperText={this.state.email.helperText}\n            />\n       <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n             Reset Password\n            </Button>\n\n            {this.state.msg  ? (\n            <Alert severity=\"error\">{this.state.msg}</Alert>\n              ) : (\n              null\n              )}\n             <Grid item xs>\n                <Link onClick={this.props.handler} variant=\"body2\">\n                  Back to login\n                </Link>\n              </Grid>\n          </form>\n        </div>\n       \n      </Container>\n    );\n  }\n}\n\n\n\n\nexport default connect(\n)(withStyles(styles)(ForgotPassword))","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Alert from '@material-ui/lab/Alert';\n\nimport axios from 'axios';\n\nimport { connect } from 'react-redux';\n\n\nconst styles = theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n});\n\nclass ChangePasswordForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updatePass = this.updatePass.bind(this);\n    this.state = {\n      email: { value: null, error: false, helperText: null },\n      current_password: { value: null, error: false, helperText: null },\n      confirm_password: { value: null, error: false, helperText: null },\n      new_password: { value: null, error: false, helperText: null },\n      msg: null\n    };\n  }\n\n\n  componentDidUpdate(prevProps) {\n    const { error } = this.props;\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === 'Weak Password') {\n        console.log(error)\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n  }\n\n\n  updatePass(event){\n    event.preventDefault();\n    if (this.emailInput.value === \"\") {\n      this.setState({\n        email: {\n          value: this.emailInput.value,\n          error: true,\n          helperText: \"Your email must be specified.\"\n        }\n      });\n      this.emailInput.focus();\n    }\n    else{\n    \n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n         const user = {\n              email: this.emailInput.value,\n              current_password: this.current_password.value,\n              confirm_password: this.confirm_password.value,\n              new_password: this.new_password.value,\n\n            };\n\n\n        // Request body\n        const body = JSON.stringify({ user });\n    \n        axios.post('/forgot_password', body, config)\n        .then(res =>{\n            this.setState({ msg: res.message })\n            }\n          \n        )\n        .catch(err => {\n            this.setState({ msg: err.message })\n      \n        })\n        \n     }\n  }\n\n\n  render(){\n    const { classes } = this.props;\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Update Password\n          </Typography>\n          <form className={classes.form} onSubmit={this.signIn} >\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              placeholder='Email'\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoFocus\n              required\n              inputRef={input => (this.emailInput = input)}\n              error={this.state.email.error}\n              helperText={this.state.email.helperText}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"current_password\"\n              label=\"current_password\"\n              type=\"current_password\"\n              id=\"current_password\"\n              inputRef={input => (this.current_password = input)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"confirm_password\"\n              label=\"confirm_password\"\n              type=\"confirm_password\"\n              id=\"confirm_password\"\n              inputRef={input => (this.confirm_password = input)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              placeholder='please type your new password'\n              name=\"new_password\"\n              label=\"new_password\"\n              type=\"new_password\"\n              id=\"new_password\"\n              inputRef={input => (this.new_password = input)}\n            />\n            \n           \n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Update Password\n            </Button>\n\n            {this.state.msg  ? (\n            <Alert severity=\"error\">{this.state.msg}</Alert>\n              ) : (\n              null\n              )}\n              \n              <Grid item xs>\n                <Link onClick={this.props.handler} variant=\"body2\">\n                  Back to login\n                </Link>\n              </Grid>\n            \n          </form>\n        </div>\n        \n      </Container>\n    );\n  }\n}\n\n\n\nexport default connect(\n)(withStyles(styles)(ChangePasswordForm))","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Alert from '@material-ui/lab/Alert';\n\nimport { login } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { StoreTwoTone } from '@material-ui/icons';\nimport store from '../../store';\nimport { Route } from 'react-router-dom';\nimport ForgotPasswordForm from './ForgotPasswordForm';\nimport ChangePasswordForm from './ChangePasswordForm';\n\n\nconst styles = theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n});\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.signIn = this.signIn.bind(this);\n    this.handler = this.handler.bind(this);\n    this.state = {\n      email: { value: null, error: false, helperText: null },\n      password: { value: null, error: false, helperText: null },\n      msg: null\n    };\n  }\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    login: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === 'LOGIN_FAIL') {\n        this.setState({ msg: error.msg });\n        setTimeout(function(){\n          this.setState({msg:null});\n          }.bind(this),3000);  // clear error after 3 seconds\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n  }\n\n\n   handler(){\n     this.setState(\n      {screen: 'login'}\n     )\n   }\n  \n\n   signIn(event){\n    event.preventDefault();\n    if (this.emailInput.value === \"\") {\n      this.setState({\n        email: {\n          value: this.emailInput.value,\n          error: true,\n          helperText: \"Your email must be specified.\"\n        }\n      });\n      this.emailInput.focus();\n    }\n    else{\n      const user = {\n        email: this.emailInput.value,\n        password: this.passwordInput.value,\n       };\n  \n      const log = this.props.login(user);\n      console.log(log)\n      this.props.history.push('/'); \n    }\n\n  }\n  \n\n  render(){\n    if (this.state.screen === 'forgot')\n      return <ForgotPasswordForm handler={this.handler}/>\n    if (this.state.screen === 'change')\n      return <ChangePasswordForm handler={this.handler}/>\n\n    const { classes } = this.props;\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} onSubmit={this.signIn} >\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              required\n              inputRef={input => (this.emailInput = input)}\n              error={this.state.email.error}\n              helperText={this.state.email.helperText}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              inputRef={input => (this.passwordInput = input)}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n\n            {this.state.msg  ? (\n            <Alert severity=\"error\">{this.state.msg}</Alert>\n              ) : (\n              null\n              )}\n\n            <Grid container>\n              <Grid item xs>\n                <Link onClick={() => this.setState({screen:'forgot'})} variant=\"body2\">\n                {\"Reset Your Password\"}\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link onClick={() => this.setState({screen:'change'})} variant=\"body2\">\n                  {\"Do you want to update your password?\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      \n      </Container>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n})\n\nexport default connect(\n    mapStateToProps,\n    { login, clearErrors }\n)(withStyles(styles)(LoginForm))","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport * as authActions from '../../actions/authActions'\nimport Dashboard from '../../Dashboard';\nimport LoginForm from '../auth/LoginForm';\nimport ChangePasswordForm from '../auth/ChangePasswordForm';\nimport PropTypes from 'prop-types';\nimport ForgotPasswordForm from '../auth/ForgotPasswordForm';\n\nclass Routes extends Component {\n\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    login: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  };\n\n    // Similar to componentDidMount and componentDidUpdate:\n  render() {\n\n    return (\n      <BrowserRouter>\n        <div>\n          <PrivateRoute exact path=\"/\" component={Dashboard} authed={this.props.auth.isAuthenticated} />\n          <Route exact path=\"/login\" component={LoginForm} />\n\n\n        </div>\n      </BrowserRouter>\n\n    );\n  }\n}\n\nconst PrivateRoute = ({ component: Component, authed, ...rest }) => (\n  // console.log(\"private routhh\", authed),\n  <Route\n    {...rest}\n    render={props => (\n      authed\n        ? <Component {...props} />\n        : <LoginForm {...props}/>\n    )}\n  />\n);\n\n\nconst mapStateToProps = state => ({ auth: state.auth });\n\nexport default connect(mapStateToProps, authActions)(Routes);\n","import React, { Component } from 'react';\n\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport './App.css';\nimport Routes from './Component/routers/Routes';\n\nclass App extends Component {\n  constructor(props) {\n    // console.log(\"rendering\")\n    super(props);\n  }\n\n  componentDidMount() {\n    // console.log(\"dispatchhhhh from App\")\n    //store.dispatch(loadUser());\n    //console.log(store.getState(),\"state from app\");\n\n\n  }\n\n\n  static propTypes = {\n    auth: PropTypes.object.isRequired\n  };\n\n\n  render() {\n     return (\n      <Routes />\n     )\n\n  }\n}\n\n\n\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\n\nexport default connect(\n  mapStateToProps,\n  null\n)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Dashboard from './Dashboard';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport appReducer from './reducers/index';\nimport {Provider} from 'react-redux';\nimport App from './App';\nimport store from './store';\n\n// const store = createStore(appReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>\n   , document.getElementById('root'),\n  );\n\n\n// ReactDOM.render( <Provider store={store}>\n//    <Dashboard />\n// </Provider> , document.getElementById('root'));\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();"],"sourceRoot":""}