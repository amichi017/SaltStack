{"version":3,"sources":["reducers/errorReducer.js","reducers/authReducer.js","reducers/reducersDate.js","reducers/saltReturns.js","reducers/saveMinion.js","reducers/listMinions.js","reducers/graphDate.js","reducers/saltReturnsGraph.js","reducers/index.js","actions/types.js","actions/errorActions.js","actions/authActions.js","store.js","actions/date.js","Component/Title.js","Component/Graph.js","Component/SearchTime.js","Component/Table.js","Component/MinionCard.js","Component/auth/Logout.js","Component/SaltStack.js","Component/SearchTimeGraph.js","Component/CurrentMonth.js","Component/CurrentYear.js","Component/LastThreeMonths.js","Component/TeamCard.js","Component/Team.js","Dashboard.js","serviceWorker.js","Component/auth/ForgotPasswordForm.js","Component/auth/ChangePasswordForm.js","Component/auth/LoginForm.js","Component/routers/Routes.js","App.js","index.js"],"names":["initialState","msg","status","id","token","isAuthenticated","isLoading","user","start","Date","end","graphDate","saltReturns","saveMinion","listMinions","saltReturnsGraph","appReducer","combineReducers","state","action","type","payload","date","auth","localStorage","setItem","access_token","removeItem","error","returnErrors","loadUser","dispatch","getState","axios","get","tokenConfig","then","res","data","catch","err","response","register","first_name","last_name","email","password","body","JSON","stringify","post","headers","console","log","login","message","logout","config","middleWare","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","str","toDateString","MonthStart","String","parseInt","getMonth","yearStart","getFullYear","DayStart","getDate","Start","MonthEnd","yearEnd","DayEnd","End","minions","year","dayEnd","satrtCurrentMonth","yearTemp","satrtMonth","endtLastThreeMonths","url","concat","Title","props","Typography","component","variant","color","gutterBottom","children","createData","time","Success","Fail","amount","demoOnClick","e","parseNumber","hower","slice","Chart","dataInit","bind","flag","graphIsPrepared","tempArray","forEach","item","Array","isArray","return","dataTemp","Object","entries","map","values","result","jid","setState","forceUpdate","nextProps","this","Fragment","style","paddingLeft","toLocaleDateString","onClick","margin","top","right","bottom","left","dataKey","stroke","className","classes","root","CircularProgress","React","PureComponent","connect","withStyles","theme","display","marginLeft","spacing","marginTop","Deposits","handleDateChangeStart","handleDateChangeEnd","dateIsChanged","booleanStart","booleanEnd","utils","DateFnsUtils","Grid","container","justify","label","format","value","onChange","KeyboardButtonProps","flex","paddingTop","Button","endIcon","Component","ownProps","minet","month","day","tableIcons","Add","forwardRef","ref","AddBox","Check","Clear","Delete","Edit","DetailPanel","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ArrowDownward","ThirdStateCheck","Remove","ViewColumn","dataColumns","title","field","cellStyle","x","dataTable","Orders","selestMinion","handleClickOpen","handleClose","Returns","dialogOpen","minion","setTimeout","getTime","setHours","saltTemp","index","arr","length","name","_id","event","rowData","filter","temp","nextState","columns","icons","onRowClick","evt","selectedRow","options","exportButton","filtering","actions","icon","tooltip","Dialog","open","onClose","aria-describedby","maxWidth","scroll","aria-labelledby","DialogTitle","fontSize","undefined","DialogContent","dividers","minWidth","TreeView","defaultCollapseIcon","defaultExpandIcon","TreeItem","nodeId","keys","TreeItemText","text","comment","changes","_id_","CardActions","DialogActions","autoFocus","height","flexGrow","MinionCard","commentg","defer","click","listOpen","onClickMinion","handleClickButton","prepared","prevState","bullet","Card","CardContent","Parameter","disableSpacing","IconButton","aria-label","DialogContentText","Width","root2","width","backgroundColor","palette","background","paper","nested","transform","overflow","pos","marginBottom","button","flexWrap","Logout","border","SaltStack","reason","warninginput","warningNoMinionSelected","handleClick","countSaveMinion","input","clickSave","words","split","parms_send","parms","func","tgt","salt_cmd","tokenTemp","history","unshift","key","buildRes","minionRes","push","shift","err_cmd","err_cmd_flag","clickOpen","sentCommand","getMinionsFromServer","i","alert","menu","row","commntId","command","flexDirection","Paper","iconButton","InputBase","autoComplete","target","placeholder","inputProps","Divider","divider","orientation","size","Comments","light","paperParms","inputparms","ButtonGroup","flexFlow","MaterialTable","Alert","severity","selection","Snackbar","autoHideDuration","padding","alignItems","minionStyle","iconButtonParms","dividerParms","SearchTimeGraph","handleDateChange","CurrentMonth","time_1","mnonthDay","BreakException","time_2","place","strokeDasharray","verticalAlign","wrapperStyle","lineHeight","y","fill","CurrentYear","LastThreeMonths","initWithoutInformation","dataInitOne","dataInitTow","dataInitThree","getDataFromServer","nameOne","nameTow","nameThree","one","tow","three","monthDayOne","monthDayTow","monthDayThree","timer_1","timer_2","dayEndTow","satrtMonthTow","startTow","endTow","dayEndThree","satrtMonthTrhee","startTrhee","endTrhee","listMonth","tempMonth","TeamCard","deleteIcon","expanded","UpperCase","isDelete","toUpperCase","Role","ReturnPassword","Email","role","delete","colors","Math","floor","random","CardHeader","avatar","Avatar","subheader","paragraph","mail","media","expand","transition","transitions","create","duration","shortest","expandOpen","red","wordWrap","Team","handleExpandClick","ClickFab","signIn","handleInputChange","handleClickShowPassword","handleMouseDownPassword","handleClickShowPasswordReturn","handleMouseDownPasswordReturn","initTeam","fab","Password","showPasswordReturn","showPassword","errPassword","saveCard","counter","err_first_name","err_last_name","err_Role","err_Email","err_Password","no_add_card","lastName","preventDefault","strongRegex","RegExp","emailRegex","test","UnsecuredPassword","Fab","form","onSubmit","TextField","required","fullWidth","InputProps","startAdornment","InputAdornment","position","endAdornment","onMouseDown","startIcon","justifyContent","outline","outlineOffset","Dashboard","handleDrawerOpen","handleDrawerClose","SelectMenu","fixedHeightPaper","clsx","fixedHeight","fixedHeightPaperFirst","fixedHeightFirst","fixedHeightPaperTow","fixedHeightTow","CssBaseline","AppBar","appBar","appBarShift","Toolbar","toolbar","edge","menuButton","menuButtonHidden","noWrap","Drawer","drawerPaper","drawerPaperClose","toolbarIcon","List","ListItem","ListItemIcon","ListItemText","primary","ListSubheader","inset","content","appBarSpacer","Container","xs","md","lg","Graph","SearchTime","Table","table","paddingRight","mixins","zIndex","drawer","easing","sharp","leavingScreen","enteringScreen","marginRight","whiteSpace","overflowX","breakpoints","up","paddingBottom","AccountCircleIcon","NotificationsIcon","Boolean","location","hostname","match","ForgotPassword","resetPass","helperText","emailInput","focus","submit","Link","handler","secondary","main","ChangePasswordForm","updatePass","old_password1","old_password2","new_password","prevProps","inputRef","passwordInput","LoginForm","screen","ForgotPasswordForm","FormControlLabel","control","Checkbox","clearErrors","Routes","exact","path","authed","PrivateRoute","rest","render","authActions","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.faeccc6d.chunk.js","sourcesContent":["import {GET_ERRORS, CLEAR_ERRORS} from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    msg: {},\r\n    status: null,\r\n    id: null\r\n}\r\n\r\n\r\nexport default function(state=initialState, action) {\r\n\r\n    switch(action.type){\r\n        case GET_ERRORS:\r\n            return {\r\n                msg: action.payload.msg,\r\n                status: action.payload.status,\r\n                id: action.payload.id\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                msg: {},\r\n                status: null,\r\n                id: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    isAuthenticated: null,\r\n    isLoading: false,\r\n    user: null,\r\n\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: action.payload\r\n            };\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', action.payload.access_token);\r\n            return {\r\n                token: action.payload.access_token,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n            };\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n        case REGISTER_FAIL:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                isLoading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"," import {DATE_SELECT} from '../actions/types';\r\n\r\n\r\n const initialState = {\r\n\r\n     start: new Date(),\r\n     end: new Date(),\r\n     graphDate: new Date(),\r\n\r\n\r\n};\r\n\r\n export default function(state=initialState, action) {\r\n//console.log(\"state\",state);\r\n  switch(action.type){\r\n      case DATE_SELECT:\r\n        return {\r\n                start:action.payload.start,\r\n                end:action.payload.end,\r\n\r\n              };\r\n\r\n\r\n        default:\r\n               return state;\r\n  }\r\n\r\n }\r\n\r\n\r\n","\r\n import {SALT_RETURNS} from '../actions/types';\r\n\r\n\r\n const initialState = {\r\n    saltReturns:null,\r\n};\r\n\r\nexport default function(state=initialState, action) { \r\n//console.log(\"SALT_RETURNS\",action.payload);\r\nswitch(action.type){\r\n    case SALT_RETURNS:\r\n    return {\r\n        saltReturns:action.payload,\r\n    };\r\n    default:\r\n        return state;\r\n }\r\n}","\r\nimport {SAVE_MINION} from '../actions/types';\r\n\r\n\r\n const initialState = {\r\n    saveMinion:[],\r\n};\r\n\r\nexport default function(state=initialState, action) { \r\n //console.log(\"SALT_RETURNS\",action.payload);\r\nswitch(action.type){\r\n    case SAVE_MINION:\r\n    return {\r\n        saveMinion:action.payload,\r\n    };\r\n    default:\r\n        return state;\r\n }\r\n}","\r\nimport {LIST_MINIONS} from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n   listMinions:[],\r\n};\r\n\r\nexport default function(state=initialState, action) { \r\n    //console.log(action.payload,'action.payload')\r\nswitch(action.type){\r\n   case LIST_MINIONS:\r\n    return {\r\n        listMinions:action.payload,\r\n    };\r\n   default:\r\n       return state;\r\n}\r\n}","import {GRAPH_DATE_SELECT} from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n\r\n    graphDate: new Date(),\r\n\r\n\r\n};\r\n\r\nexport default function(state=initialState, action) {\r\n//console.log(\"state\",state);\r\n switch(action.type){\r\n     case GRAPH_DATE_SELECT:\r\n       return {\r\n                graphDate:action.payload.graphDate,\r\n              \r\n             };\r\n\r\n\r\n       default:\r\n              return state;\r\n }\r\n\r\n}\r\n\r\n\r\n"," import {SALT_RETURNS_GRAPH} from '../actions/types';\r\n\r\n\r\n const initialState = {\r\n    saltReturnsGraph:null,\r\n};\r\n\r\nexport default function(state=initialState, action) { \r\n\r\nswitch(action.type){\r\n    case SALT_RETURNS_GRAPH:\r\n    return {\r\n        saltReturnsGraph:action.payload,\r\n    };\r\n    default:\r\n        return state;\r\n }\r\n}","import {combineReducers} from 'redux';\r\nimport errorReducer from './errorReducer';\r\nimport authReducer from './authReducer';\r\nimport reducerDate from './reducersDate';\r\nimport saltReturns  from './saltReturns';\r\nimport saveMinion  from './saveMinion';\r\nimport listMinions  from './listMinions';\r\nimport graphDate  from './graphDate';\r\nimport saltReturnsGraph  from './saltReturnsGraph';\r\n\r\nconst appReducer = combineReducers({\r\n  saltReturns:saltReturns,\r\n  saltReturnsGraph:saltReturnsGraph,\r\n  date: reducerDate,\r\n  graphDate:graphDate,\r\n  auth: authReducer,\r\n  error: errorReducer,\r\n  saveMinion:saveMinion,\r\n  listMinions:listMinions,\r\n \r\n  \r\n\r\n});\r\n\r\nexport default appReducer;\r\n","export const USER_LOADING = \"USER_LOADING\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\nexport const DATE_SELECT = \"DATE_SELECT\";\r\nexport const SALT_RETURNS = \"SALT_RETURNS\";\r\nexport const SAVE_MINION = \"SAVE_MINION\";\r\nexport const LIST_MINIONS = \"LIST_MINIONS\";\r\nexport const TEAM_LIST = \"TEAM_LIST\";\r\nexport const GRAPH_DATE_SELECT = \"GRAPH_DATE_SELECT\";\r\nexport const SALT_RETURNS_GRAPH = \"SALT_RETURNS_GRAPH\";\r\nexport const CURRENT_MONTH = \"CURRENT_MONTH\";\r\nexport const LAST_THREE_MONTHS_ONE = \"LAST_THREE_MONTHS_ONE\";\r\nexport const LAST_THREE_MONTHS_TOW = \"LAST_THREE_MONTHS_TOW\";\r\nexport const LAST_THREE_MONTHS_THREE = \"LAST_THREE_MONTHS_THREE\";","import { GET_ERRORS, CLEAR_ERRORS} from './types';\r\n\r\n// Return errors\r\nexport const returnErrors = (msg, status, id = null) => {\r\n    // console.log(msg,status)\r\n    return {\r\n        type: GET_ERRORS,\r\n        payload: { msg, status, id}\r\n    };\r\n};\r\n\r\n// Clear errors\r\nexport const clearErrors = () => {\r\n    return {\r\n        type: CLEAR_ERRORS\r\n    };\r\n};","import axios from 'axios';\r\nimport { returnErrors } from './errorActions';\r\n\r\nimport {\r\nAUTH_ERROR,\r\nLOGIN_SUCCESS,\r\nLOGIN_FAIL,\r\nLOGOUT_SUCCESS,\r\nREGISTER_SUCCESS,\r\nREGISTER_FAIL,\r\nUSER_LOADING,\r\nUSER_LOADED\r\n} from './types';\r\n\r\n\r\n\r\n// Check token & load user\r\nexport const loadUser = () => (dispatch, getState) => {\r\n    // User loading\r\n    dispatch({ type: USER_LOADING });\r\n    axios\r\n      .get('/auth/user', tokenConfig(getState))\r\n      .then(res =>\r\n        dispatch({\r\n          type: USER_LOADED,\r\n          payload: res.data\r\n        })\r\n      )\r\n      .catch(err => {\r\n        if(err.response){\r\n            dispatch(returnErrors(err.response.data, err.response.status));\r\n            dispatch({\r\n                type: AUTH_ERROR\r\n              });\r\n        }\r\n      });\r\n  };\r\n\r\n\r\nexport const register = ({ first_name, last_name, email, password }) => dispatch => {\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    // Request body\r\n    const body = JSON.stringify({first_name, last_name, email, password });\r\n     \r\n    axios.post('/register', body, config)\r\n    .then(res => dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data\r\n    }))\r\n    .catch(err => {\r\n        console.log(err)\r\n        dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        })\r\n    })\r\n}\r\n\r\nexport const login = ({ email, password }) => dispatch => {\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    // Request body\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    axios.post('/auth', body, config)\r\n    .then(res => dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n            \r\n    }))\r\n    .catch(err => {\r\n        dispatch(returnErrors(err.response.data.message, err.response.status, 'LOGIN_FAIL'));\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    })\r\n}\r\n\r\n\r\n// Logout User\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT_SUCCESS\r\n    })\r\n  };\r\n\r\n  \r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n       // Get token from localstorage\r\n       const token = getState().auth.token;\r\n  \r\n       // Headers\r\n       const config = {\r\n           headers: {\r\n               \"Content-type\": \"application/json\"\r\n           }\r\n       }\r\n   \r\n       // If token, add to headers\r\n       if(token) {\r\n          config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n       }\r\n\r\n    return config;\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nimport authReducer from './reducers/authReducer';\r\nimport { loadUser } from './actions/authActions';\r\n\r\nconst initialState = {};\r\n\r\nconst middleWare = [thunk];\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeEnhancers(applyMiddleware(...middleWare))\r\n);\r\n\r\n// store.dispatch(loadUser());\r\nexport default store;","import axios from 'axios';\r\nimport store from '../store'\r\n import { \r\n     DATE_SELECT,\r\n     SALT_RETURNS,\r\n     LIST_MINIONS,\r\n     TEAM_LIST,\r\n     GRAPH_DATE_SELECT,\r\n     SALT_RETURNS_GRAPH,\r\n     CURRENT_MONTH,\r\n     //CURRENT_YEAR,\r\n     LAST_THREE_MONTHS_ONE,\r\n     LAST_THREE_MONTHS_TOW,\r\n     LAST_THREE_MONTHS_THREE\r\n    } from './types';\r\n import data from '../Component/test.json';\r\n // Date is select\r\n export const dateSelect = (start , end) => {\r\n\r\n     return  {\r\n                 type: DATE_SELECT,\r\n                 payload:{start,end}\r\n              };\r\n     // console.log(\"start \",start);\r\n     // console.log(\"end \",end);\r\n\r\n }\r\n export const grapgDateSelect = (graphDate) => {\r\n\r\n    return  {\r\n                type: GRAPH_DATE_SELECT,\r\n                payload:{graphDate}\r\n             };\r\n    // console.log(\"start \",start);\r\n    // console.log(\"end \",end);\r\n\r\n}\r\n export const listMinions =  () => (dispatch, getState) => {\r\n\r\n    axios.get('/get_connected_minions',tokenConfig(getState))\r\n    .then((res) => {\r\n            let minions=[];\r\n            for(let i=0;i<res.data.result.length;i++){\r\n               let minion={name:res.data.result[i]};\r\n               minions.push(minion);\r\n            }\r\n            //console.log(minions,\"minions\");   \r\n            store.dispatch({\r\n                type: TEAM_LIST,\r\n                payload: minions\r\n            });\r\n    })\r\n    .catch(err => {\r\n        console.log(err,\"err get_connected_minions\");\r\n\r\n       });\r\n    // console.log(\"start \",start);\r\n    // console.log(\"end \",end);\r\n\r\n}\r\nexport const teamList =  () => (dispatch, getState) => {\r\n\r\n    axios.get('/get_users',tokenConfig(getState))\r\n    .then((res) => { \r\n            store.dispatch({\r\n                type: TEAM_LIST,\r\n                payload: res.data\r\n            });\r\n    })\r\n    .catch(err => {\r\n        console.log(err);\r\n\r\n       });\r\n    // console.log(\"start \",start);\r\n    // console.log(\"end \",end);\r\n\r\n}\r\n\r\n export const saltReturns =  (str) => (dispatch, getState) => {\r\n     //console.log(\"----------------------storeeeee--------------\\n\",store)\r\n     const time =new Date().toDateString();\r\n        let MonthStart= String(parseInt(store.getState().date.start.getMonth()+1));\r\n        MonthStart=parseInt(MonthStart)<10?\"0\"+MonthStart:MonthStart;\r\n        let yearStart=String(store.getState().date.start.getFullYear());\r\n        let DayStart=store.getState().date.start.getDate();\r\n        DayStart=parseInt(DayStart)<10?\"0\"+DayStart:DayStart;\r\n        let Start=yearStart+String(MonthStart)+String(DayStart)+\"000000000000\"\r\n\r\n        let MonthEnd= String(parseInt(store.getState().date.end.getMonth())+1);\r\n        MonthEnd=parseInt(MonthEnd)<10?\"0\"+MonthEnd:MonthEnd;\r\n        let yearEnd=String(store.getState().date.end.getFullYear());\r\n        let DayEnd=store.getState().date.end.getDate()\r\n        DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n        //let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"000000000000\"\r\n        let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"235959595959\"\r\n        //  let startYear=new Date(year,Month,store.getState().date.start.getDate());\r\n        //  let endYear=store.getState().date.end;\r\n        //  let index = startYear;\r\n // if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\r\n        let minions=[];\r\n// for (let index = startYear; index <= endYear; index.setFullYear(index.getFullYear() + 1)) {\r\n   \r\n     if(str === \"CurrentYear\"){\r\n        \r\n       \r\n        let year=String(new Date().getFullYear());\r\n        let dayEnd=String(new Date(year, 12, 0).getDate());\r\n        DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n        Start= year+\"0101\"+\"000000000000\";\r\n        End= year+\"12\"+dayEnd+\"235959595959\";\r\n     }\r\n     else if(str === \"CurrentMonth\"){\r\n        \r\n       \r\n        let year=String(new Date().getFullYear());\r\n        let dayEnd=String(new Date(year, new Date().getMonth()+1, 0).getDate());\r\n        DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n        let satrtCurrentMonth=(new Date().getMonth()+1);\r\n        satrtCurrentMonth=parseInt( satrtCurrentMonth)<10?\"0\"+ satrtCurrentMonth: satrtCurrentMonth;\r\n        Start= year+satrtCurrentMonth+\"01\"+\"000000000000\";\r\n        End= year+satrtCurrentMonth+dayEnd+\"235959595959\";\r\n     }\r\n     else if(str === \"LastThreeMonths\"){\r\n        \r\n       \r\n        let yearTemp=String(new Date().getFullYear());\r\n        let year =String(new Date(yearTemp, new Date().getMonth()-2, 1).getFullYear());\r\n        let dayEnd=String(new Date(year, new Date().getMonth(), 0).getDate());\r\n        DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n        let satrtMonth=new Date(2020, new Date().getMonth()-2, 1).getMonth();\r\n        satrtMonth=parseInt(satrtMonth)<10?\"0\"+satrtMonth:satrtMonth;\r\n        let endtLastThreeMonths=String(new Date().getMonth());\r\n        endtLastThreeMonths=parseInt( endtLastThreeMonths)<10?\"0\"+ endtLastThreeMonths: endtLastThreeMonths;\r\n        Start= year+satrtMonth+\"01\"+\"000000000000\";\r\n        End= year+endtLastThreeMonths+dayEnd+\"235959595959\";\r\n     }\r\n   \r\n     let url='/api/saltReturns/apply/'+Start+\"/\"+End;\r\n     //console.log(\"url\" ,url);\r\n     axios.get(url, tokenConfig(getState))\r\n    .then((res) => {\r\n        //console.log(\"pppppppppppppppppppppppppppppppppppppp\")\r\n        minions=minions.concat(res.data);\r\n       // console.log(minions);\r\n       /// if(index === endYear){console.log(res,\"res \");}\r\n        store.dispatch({\r\n            type: SALT_RETURNS,\r\n            payload: minions\r\n        })\r\n        // console.log(res,\"res\");\r\n    })\r\n    .catch(err => {\r\n        console.log(err,\"error in data\");\r\n\r\n       });\r\n   // }\r\n\r\n\r\n       //console.log(store.getState(),\"the store \");\r\n       //console.log(minions,\"minions \");\r\n};\r\n\r\n\r\nexport const saltReturnsForgraph =  (str) => (dispatch, getState) => {\r\n    //console.log(\"----------------------storeeeee--------------\\n\",store)\r\n    const time =new Date().toDateString();\r\n       let MonthStart= String(parseInt(store.getState().graphDate.graphDate.getMonth()+1));\r\n       MonthStart=parseInt(MonthStart)<10?\"0\"+MonthStart:MonthStart;\r\n       let yearStart=String(store.getState().graphDate.graphDate.getFullYear());\r\n       let DayStart=store.getState().graphDate.graphDate.getDate();\r\n       DayStart=parseInt(DayStart)<10?\"0\"+DayStart:DayStart;\r\n       let Start=yearStart+String(MonthStart)+String(DayStart)+\"000000000000\"\r\n\r\n       let MonthEnd= String(parseInt(store.getState().graphDate.graphDate.getMonth())+1);\r\n       MonthEnd=parseInt(MonthEnd)<10?\"0\"+MonthEnd:MonthEnd;\r\n       let yearEnd=String(store.getState().graphDate.graphDate.getFullYear());\r\n       let DayEnd=store.getState().graphDate.graphDate.getDate()\r\n       DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n       //let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"000000000000\"\r\n       let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"235959595959\"\r\n       //  let startYear=new Date(year,Month,store.getState().date.start.getDate());\r\n       //  let endYear=store.getState().date.end;\r\n       //  let index = startYear;\r\n// if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\r\n       let minions=[];\r\n// for (let index = startYear; index <= endYear; index.setFullYear(index.getFullYear() + 1)) {\r\n  \r\n   \r\n    //console.log(Start,\"Start\")\r\n    //console.log(End,\"End\")\r\n    let url='/api/saltReturns/apply/'+Start+\"/\"+End;\r\n    //console.log(\"url\" ,url);\r\n    axios.get(url, tokenConfig(getState))\r\n   .then((res) => {\r\n\r\n       minions=minions.concat(res.data);\r\n      // console.log(minions);\r\n     // console.log(minions,\"minions\")\r\n      /// if(index === endYear){console.log(res,\"res \");}\r\n       store.dispatch({\r\n           type: SALT_RETURNS_GRAPH,\r\n           payload: minions\r\n       })\r\n       // console.log(res,\"res\");\r\n   })\r\n   .catch(err => {\r\n       console.log(err,\"error in data\");\r\n\r\n      });\r\n  // }\r\n\r\n\r\n      //console.log(store.getState(),\"the store \");\r\n      //console.log(minions,\"minions \");\r\n};\r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n   // console.log(\"getstatteeeeeslatl\",getState())\r\n    // Get token from localstorage\r\n    const token = getState().auth.token;\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"multipart/form-data\"\r\n        }\r\n    }\r\n\r\n    // If token, add to headers\r\n    if(token) {\r\n       config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n    }\r\n\r\n return config;\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};","import React from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {dateSelect} from '../actions/date';\r\nimport { LineChart,\r\n         Line,\r\n         XAxis,\r\n         YAxis,\r\n         Label,\r\n         ResponsiveContainer,\r\n         Tooltip,\r\n         Legend,\r\n         CartesianGrid  \r\n} from 'recharts';\r\nimport store from '../store';\r\nimport Title from './Title';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { saltReturnsForgraph } from '../actions/date';\r\nimport { Store } from '@material-ui/icons';\r\nimport axios from 'axios';\r\n\r\n\r\nconst time =(str)=>{\r\n  const year =str.slice(0,4);\r\n  const month =String(parseInt(str.slice(4,6)));\r\n  const day =str.slice(6,8);\r\n  const hower= str.slice(8,10);\r\n\r\n  const minet=str.slice(10,12);\r\n  return String(hower)+\":\"+String(minet);\r\n\r\n}\r\nfunction createData(time,Success,Fail, amount) {\r\n  return { time,Success,Fail, amount };\r\n}\r\nconst demoOnClick= (e)=>{\r\n  // if(e){if(e.activeLabel){console.log(e.activeLabel);}}\r\n};\r\nconst INIT_DATA = [\r\n  createData('00:00',0,0, 0),\r\n  createData('03:00',0,0, 0),\r\n  createData('06:00',0,0, 0),\r\n  createData('09:00',0,0, 0),\r\n  createData('12:00',0,0, 0),\r\n  createData('15:00',0,0, 0),\r\n  createData('18:00',0,0, 0),\r\n  createData('21:00',0,0, 0),\r\n  createData('24:00',0,0, 0),\r\n];\r\n\r\nconst parseNumber= (str)=>{\r\n  let hower= parseInt(str.slice(8,10));\r\n  if(hower<=3){return \"03:00\"};\r\n  if(hower<=6){return \"06:00\"};\r\n  if(hower<=9){return \"09:00\"};\r\n  if(hower<=12){return \"12:00\"};\r\n  if(hower<=15){return \"15:00\"};\r\n  if(hower<=18){return \"18:00\"};\r\n  if(hower<=21){return \"21:00\"};\r\n  if(hower<=24){return \"24:00\"};\r\n  return \"00:00\";\r\n \r\n};\r\n const tokenConfig = getState => {\r\n  // console.log(\"getstatteeeeeslatl\",getState())\r\n   // Get token from localstorage\r\n   const token = store.getState().auth.token;\r\n\r\n   // Headers\r\n   const config = {\r\n       headers: {\r\n           \"Content-type\": \"multipart/form-data\"\r\n       }\r\n   }\r\n\r\n   // If token, add to headers\r\n   if(token) {\r\n      config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n   }\r\n\r\nreturn config;\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    marginLeft: theme.spacing(50),\r\n    marginTop:theme.spacing(11),\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n});\r\n\r\n class Chart extends React.PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.dataInit = this.dataInit.bind(this);\r\n    this.state = {\r\n      graphDate: new Date(),\r\n      flag:true,\r\n      minions:null,\r\n      graphIsPrepared:true,\r\n      data:  [{ time:\"00:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"03:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"06:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"09:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"12:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"15:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"18:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"21:00\",Success:0,Fail:0, amount:0 },\r\n              { time:\"24:00\",Success:0,Fail:0, amount:0 },]\r\n  };\r\n  this.dataInit();\r\n}\r\ndataInit(){\r\n  \r\n  let MonthStart= String(parseInt(store.getState().graphDate.graphDate.getMonth()+1));\r\n  MonthStart=parseInt(MonthStart)<10?\"0\"+MonthStart:MonthStart;\r\n  let yearStart=String(store.getState().graphDate.graphDate.getFullYear());\r\n  let DayStart=store.getState().graphDate.graphDate.getDate();\r\n  DayStart=parseInt(DayStart)<10?\"0\"+DayStart:DayStart;\r\n  let Start=yearStart+String(MonthStart)+String(DayStart)+\"000000000000\"\r\n\r\n  let MonthEnd= String(parseInt(store.getState().graphDate.graphDate.getMonth())+1);\r\n  MonthEnd=parseInt(MonthEnd)<10?\"0\"+MonthEnd:MonthEnd;\r\n  let yearEnd=String(store.getState().graphDate.graphDate.getFullYear());\r\n  let DayEnd=store.getState().graphDate.graphDate.getDate()\r\n  DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n  //let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"000000000000\"\r\n  let End=yearEnd+String(MonthEnd)+String(DayEnd)+\"235959595959\"\r\n  //  let startYear=new Date(year,Month,store.getState().date.start.getDate());\r\n  //  let endYear=store.getState().date.end;\r\n  //  let index = startYear;\r\n// if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\r\n  let minions=[];\r\n// for (let index = startYear; index <= endYear; index.setFullYear(index.getFullYear() + 1)) {\r\n\r\n\r\n//console.log(Start,\"Start\")\r\n//console.log(End,\"End\")\r\nlet url='/api/saltReturns/apply/'+Start+\"/\"+End;\r\n//console.log(\"url\" ,url);\r\naxios.get(url, tokenConfig(store.getState()))\r\n.then((res) => {\r\n  let tempArray=[\r\n    { time:\"00:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"03:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"06:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"09:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"12:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"15:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"18:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"21:00\",Success:0,Fail:0, amount:0 },\r\n    { time:\"24:00\",Success:0,Fail:0, amount:0 },\r\n  ];\r\n  minions=minions.concat(res.data);\r\n //console.log(minions,\"minions\");\r\n// console.log(minions,\"minions\")\r\n /// if(index === endYear){console.log(res,\"res \");}\r\n  this.state.minions=minions;\r\n  //console.log( this.state.minions,\" this.state.minions\");\r\n  if(this.state.minions!==null)\r\n  {\r\n        // let MonthEnd= String(parseInt(store.getState().date.end.getMonth())+1);\r\n        // MonthEnd=parseInt(MonthEnd)<10?\"0\"+MonthEnd:MonthEnd;\r\n        // let yearEnd=String(store.getState().date.end.getFullYear());\r\n        // let DayEnd=store.getState().date.end.getDate()\r\n        // DayEnd=parseInt(DayEnd)<10?\"0\"+DayEnd:DayEnd;\r\n        // let EndStart=parseInt(yearEnd+String(MonthEnd)+String(DayEnd)+\"000000000000\");\r\n\r\n        // let End=parseInt(yearEnd+String(MonthEnd)+String(DayEnd)+\"235959595959\")\r\n  \r\n      this.state.minions\r\n    \r\n      //  .filter((item)=>{\r\n    \r\n      //     if(parseInt(item.jid)>=EndStart && parseInt(item.jid)<=End){return item}\r\n      //   })\r\n        .forEach(item => {\r\n          let res=true;\r\n        // if(item.full_ret.success === false){res=false}\r\n        // let temp =Object.entries(item.return);\r\n      //  console.log(item,\"itemitemitemitemitemitemitemitem\")\r\n          if(Array.isArray(item.return)){ res=true}\r\n          else{\r\n            // console.log(item,'item');\r\n              let dataTemp=Object.entries(item.return).map((e) => ( { [e[0]]: e[1] } ));\r\n              let flag=false;\r\n              dataTemp.forEach(item =>{\r\n                  //console.log(Object.values(item),'Object.values(item)');\r\n                  if((Object.values(item)[0].result===true)&& (flag===false)){res=true}\r\n                  else{res=false;flag=true;}\r\n              } )\r\n          }\r\n        if(parseNumber(item.jid)===\"03:00\")\r\n        { res === true ?(tempArray[1].Success++):(tempArray[1].Fail++)};\r\n        if(parseNumber(item.jid)===\"06:00\")\r\n        { res === true ?(tempArray[2].Success++):(tempArray[2].Fail++)};\r\n        if(parseNumber(item.jid)===\"09:00\")\r\n        { res === true ?(tempArray[3].Success++):(tempArray[3].Fail++)};\r\n        if(parseNumber(item.jid)===\"12:00\")\r\n        { res === true ?(tempArray[4].Success++):(tempArray[4].Fail++)};\r\n        if(parseNumber(item.jid)===\"15:00\")\r\n        { res === true ?(tempArray[5].Success++):(tempArray[5].Fail++)};\r\n        if(parseNumber(item.jid)===\"18:00\")\r\n        { res === true ?(tempArray[6].Success++):(tempArray[6].Fail++)};\r\n        if(parseNumber(item.jid)===\"21:00\")\r\n        { res === true ?(tempArray[7].Success++):(tempArray[7].Fail++);};\r\n        if(parseNumber(item.jid)===\"24:00\")\r\n        { res === true ?(tempArray[8].Success++):(tempArray[8].Fail++)};\r\n      \r\n        \r\n        });\r\n    }\r\n    //console.log(tempArray,\"tempArray\")\r\n    this.state.data=tempArray;\r\n    this.setState({data:tempArray,graphIsPrepared:true})\r\n   // console.log(this.state.data,\"this.state.data\")\r\n   this.forceUpdate();\r\n}\r\n)\r\n.catch(err => {\r\n  console.log(err,\"error in data\");\r\n\r\n });\r\n// }\r\n}\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.dataInit();\r\n    \r\n}\r\n  \r\n\r\n\r\n\r\n \r\n  render(){\r\n   // console.log(\"render\");\r\n    //console.log(this.state,\"this.state\");\r\n   // console.log(this.state.graphIsPrepared,\"pppppppppppppppp\")\r\n    if(this.state.graphIsPrepared===true){\r\n      return(\r\n        <React.Fragment>\r\n        {/*<Title style={{paddingLeft:5}}>{(this.state.start.toLocaleDateString() === this.state.end.toLocaleDateString())?this.state.start.toLocaleDateString():this.state.start.toLocaleDateString() + ' - '+ this.state.end.toLocaleDateString()}</Title>*/}\r\n         {<Title style={{paddingLeft:5}}> {store.getState().graphDate.graphDate.toLocaleDateString()}</Title>}\r\n        <ResponsiveContainer>\r\n            <LineChart\r\n              onClick={demoOnClick}\r\n              data={ this.state.data}\r\n              margin={{top: 16,right: 16,bottom: 0,left: 24,}}>\r\n            <XAxis dataKey=\"time\" /><YAxis >{/* <Label angle={270} position=\"left\" style={{ textAnchor: 'middle' }}>(A/T)</Label>*/ }   \r\n            </YAxis>\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"Success\" stroke=\"#82ca9d\" onClick={demoOnClick}/>\r\n            <Line type=\"monotone\" dataKey=\"Fail\" stroke=\"#ff6666\" onClick={demoOnClick} />\r\n           \r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </React.Fragment>\r\n      )\r\n    }\r\n else{\r\n   return(\r\n        <div className={this.props.classes.root}>\r\n        <CircularProgress />\r\n        </div>\r\n   )\r\n }\r\n   \r\n    \r\n }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    saltReturnsGraph: state.saltReturnsGraph,\r\n    graphDate: state.graphDate \r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Chart));","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport {DATE_SELECT} from \"../actions/types\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {Typography,Button,Grid} from '@material-ui/core';\r\nimport Title from './Title';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {KeyboardDatePicker,MuiPickersUtilsProvider,DatePicker} from \"@material-ui/pickers\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\n//import DateTime from 'react-datetime';\r\nimport {dateSelect} from '../actions/date.js';\r\nimport store from '../store';\r\nimport { saltReturns } from '../actions/date';\r\n// <DatePicker\r\n// disableFuture\r\n// openTo=\"year\"\r\n// id=\"date-picker-dialog\"\r\n// margin=\"normal\"\r\n// format=\"dd/MM/yyyy\"\r\n// label=\"Start\"\r\n// views={[\"year\", \"month\", \"date\"]}\r\n// KeyboardButtonProps={{\r\n//   'aria-label': 'change date',\r\n// }}\r\n\r\n// />\r\n\r\n\r\n\r\n\r\n\r\n class Deposits extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDateChangeStart = this.handleDateChangeStart.bind(this);\r\n    this.handleDateChangeEnd = this.handleDateChangeEnd.bind(this);\r\n    this.dateIsChanged = this.dateIsChanged.bind(this);\r\n  \r\n    this.state={start:this.props.date.start , end:this.props.date.end ,date:null};\r\n  \r\n  }\r\n//   shouldComponentUpdate(nextProps, nextState) {\r\n//   return this.state.value != nextState.value;\r\n// }\r\n  handleDateChangeStart(date){\r\n    this.setState({booleanStart:true,start:date});\r\n  }\r\n    \r\n  \r\n  handleDateChangeEnd (date){\r\n   this.setState({booleanEnd:true,end:date});\r\n  }\r\n \r\n  dateIsChanged(){\r\n      let start=this.state.start;\r\n      let end=this.state.end;\r\n     \r\n      store.dispatch({\r\n        type: DATE_SELECT,\r\n        payload: {start:start,end:end}\r\n       } );\r\n       store.dispatch(saltReturns());\r\n\r\n\r\n      // console.log(\"store\",store.getState());\r\n  }\r\n \r\n  //onChange = date => this.setState({ date })\r\n \r\n  render () {\r\n    return (\r\n      <React.Fragment style={{marginTop:-5}}>\r\n        <Typography  variant=\"h4\" >\r\n\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n            <Grid container justify=\"space-around\">\r\n            <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Table Start Date\"\r\n            format=\"dd/MM/yyyy\"\r\n            value={this.state.start}\r\n            onChange={(date)=>{this.handleDateChangeStart(date)}}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n\r\n          <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"Table End Date\"\r\n          format=\"dd/MM/yyyy\"\r\n          value={this.state.end}\r\n          onChange={(date)=>{this.handleDateChangeEnd(date)}}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n      \r\n      <Typography style={{flex: 1,paddingTop:12}}>\r\n      \r\n       \r\n       \r\n        <Button\r\n        variant=\"outlined\" color=\"primary\"\r\n        onClick={this.dateIsChanged}\r\n        endIcon={ <SearchIcon>Search</SearchIcon>}\r\n      >\r\n      Search\r\n      </Button>\r\n      </Typography>\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n\r\n        </Typography>\r\n       \r\n      </React.Fragment>\r\n    );\r\n  }\r\n    \r\n}\r\n\r\n const mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    date: state.date\r\n  }\r\n}\r\nfunction matchDispatchToProps(dispatch){\r\n  return bindActionCreators({dateSelect: dateSelect}, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps)(Deposits);","import axios from 'axios';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport React, { Component } from \"react\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport MaterialTable from 'material-table';\r\nimport {SALT_RETURNS} from \"../actions/types\";\r\nimport store from '../store';\r\nimport { saltReturns } from '../actions/date';\r\nimport { forwardRef } from 'react';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n    Typography,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    AddBox,\r\n    ArrowDownward,\r\n    Check,\r\n    ChevronLeft,\r\n    ChevronRight,\r\n    Clear,\r\n    DeleteOutline,\r\n    Edit,\r\n    FilterList,\r\n    FirstPage,\r\n    LastPage,\r\n    Remove,\r\n    SaveAlt,\r\n    Search,\r\n    ViewColumn,\r\n\r\n\r\n}from '@material-ui/icons';\r\n//import data from './f.json';\r\nimport data from '../Component/test.json';\r\n\r\nconst time =(str)=>{\r\n    const hower= str.slice(8,10);\r\n    const minet=str.slice(10,12);\r\n    return String(hower)+\":\"+String(minet);\r\n\r\n}\r\n\r\nconst  date=(str)=>{\r\n    const year =str.slice(0,4);\r\n    const month =String(parseInt(str.slice(4,6)));\r\n    const day =str.slice(6,8);\r\n   \r\n    return String(day)+\"/\"+String(month)+\"/\"+String(year);\r\n\r\n}\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) =>  <Edit {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\nconst dataColumns =[\r\n    { title: 'status', field: 'status',\r\n        //type: 'boolean'\r\n        cellStyle: x=>({\r\n            color:(x==='Success')?'#208000':'#ff0000'})\r\n\r\n    },\r\n    { title: 'Name', field: 'name',\r\n    },\r\n    { title: 'Date', field: 'date' },\r\n    { title: 'Time', field: 'time',\r\n        //type: 'time'\r\n    },\r\n\r\n\r\n\r\n]\r\n\r\nconst dataTable=[]\r\nconst styles = theme => ({\r\n    root:{\r\n        height: 240,\r\n        flexGrow: 1,\r\n        maxWidth: 900,\r\n        fontSize: 20,\r\n        \r\n    },\r\n  //  TreeStyle: ,\r\n      text:{\r\n        paddingLeft: theme.spacing(6),\r\n        fontSize: 16,\r\n       \r\n\r\n      },\r\n      title:{\r\n        fontSize: 16,\r\n        paddingLeft:theme.spacing(2)\r\n      },\r\n      TreeItem:{\r\n        marginTop:theme.spacing(3.5),\r\n        flexGrow: 1,\r\n        maxWidth: 950,\r\n        fontSize: 18,\r\n      },\r\n      TreeItemText:{\r\n        fontSize: 18,\r\n      },\r\n      \r\n});\r\n//console.log(data,'cccccccccccccccccccccccccccccccccccccccccc')\r\n// const m=JSON.parse(\"'[\"+data+\"]'\");\r\n//const x=Object.entries(data[0].return).map((e) => ( { [e[0]]: e[1] } ));\r\n//console.log(data,'data');\r\n//console.log(Object.entries(data[0].return),'llll')\r\n//console.log(x,'cccccccccccccccccccccccccccccccccccccccccc')\r\nclass Orders extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.selestMinion=this.selestMinion.bind(this);\r\n        this.handleClickOpen=this.handleClickOpen.bind(this);\r\n        this.handleClose=this.handleClose.bind(this);\r\n        store.dispatch(saltReturns());\r\n        console.log(store.getState(),\"store.getState()\")\r\n        this.state = {\r\n            saltReturns: dataTable,\r\n            Returns:null,\r\n            dialogOpen:false,\r\n            minion:\"\",\r\n            data:[],\r\n            flag:false,\r\n        }\r\n       \r\n    }\r\n \r\n    componentWillMount(){\r\n       // console.log('componentWillMount');\r\n        if(store.getState().saltReturns.saltReturns!==null)\r\n        {\r\n            setTimeout(()=>{  \r\n                const start=store.getState().date.start;\r\n                let startTemp=new Date(start.getTime());\r\n            \r\n                startTemp.setHours(0,0,0);\r\n                const end=store.getState().date.end;\r\n                let endTemp=new Date(end.getTime());\r\n            \r\n            // console.log(endTemp,'new Date(end.getTime());')\r\n            // console.log(start,'store.getState().date.start;')\r\n                let saltTemp=store.getState().saltReturns.saltReturns\r\n                // .filter((item)=>{return item.full_ret.fun === \"state.apply\"})\r\n                // .filter((item)=>{\r\n                //     let str=item.jid.slice(0,4)+\"-\"+ String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\r\n                //     let time=new Date(str);\r\n                //     if(time >= startTemp && time<= endTemp){return item;}\r\n                // })\r\n                .map((item)=>{\r\n                    let res=true;\r\n                    let flag=0;\r\n                   \r\n                    if(Array.isArray(item.return)){ res=true;}\r\n                    else{\r\n                     \r\n                        let dataTemp=Object.entries(item.return).map((e,index,arr) => {\r\n                         if((e[1].result === false) && (flag===0)){\r\n                            res=false\r\n                           flag=1;\r\n                        \r\n                          }\r\n                         if(index===arr.length-1 && flag === 0){\r\n                            flag=1;\r\n                            res=true;\r\n                          \r\n                         \r\n                         }\r\n                    \r\n                      \r\n                       });\r\n               \r\n                    }\r\n                    return {\r\n        \r\n                        status:(res=== true)?'Success':'Fail',\r\n                        name:item.minion,\r\n                        date:date(item.jid),\r\n                        id:item._id,\r\n                        time: time(item.jid),\r\n        \r\n                        // return:item.return\r\n                    };}\r\n                )\r\n            \r\n                this.setState({saltReturns:saltTemp});\r\n            // console.log(this.state.saltReturns,'setTimeout(()=>{this.setState({saltReturns:saltTemp});}, 600);');\r\n            }, 500);\r\n            //setTimeout(()=>{;}, 1000);\r\n        }\r\n    }\r\n    selestMinion(event, rowData){\r\n        console.log(\"table - 213\");\r\n        //console.log(rowData, \" equl\");\r\n        if(rowData.status==='Success'){return}\r\n        let res = store.getState().saltReturns.saltReturns\r\n            .filter((item)=>{\r\n            //if((item.full_ret.success===false) && (item._id === rowData.id))\r\n            if((item._id === rowData.id))\r\n\r\n                     { \r\n                         let temp =Object.entries(item.return);\r\n                         if(temp[0][0]===\"0\"){ \r\n                             this.setState({flag:true,data:temp[0]});\r\n                             console.log(\"table - 225\");\r\n                            }\r\n                         else{\r\n                             let res=Object.entries(item.return).map((e) => ( { [e[0]]: e[1] } ));\r\n                             this.setState({data:res})\r\n                             console.log(\"table - 230\");\r\n                             }\r\n                         this.setState({dialogOpen:true,minion:item});\r\n                         console.log(\"table - 230\");\r\n                         return item;\r\n                    }\r\n                \r\n            \r\n            })\r\n\r\n\r\n    }\r\n    handleClickOpen () {\r\n        this.setState({dialogOpen:true});\r\n    };\r\n\r\n    handleClose () {\r\n        this.setState({dialogOpen:false});\r\n    };\r\n    componentWillReceiveProps(nextProps,nextState) {\r\n        //console.log('componentWillReceiveProps');\r\n        // console.log(store.getState(),\";;;;;;;;;;\");\r\n        if(store.getState().saltReturns.saltReturns!==null)\r\n        {\r\n            setTimeout(()=>{  \r\n                const start=store.getState().date.start;\r\n                let startTemp=new Date(start.getTime());\r\n            \r\n                startTemp.setHours(0,0,0);\r\n                const end=store.getState().date.end;\r\n                let endTemp=new Date(end.getTime());\r\n            \r\n            // console.log(endTemp,'new Date(end.getTime());')\r\n            // console.log(start,'store.getState().date.start;')\r\n                let saltTemp=store.getState().saltReturns.saltReturns\r\n                // .filter((item)=>{return item.full_ret.fun === \"state.apply\"})\r\n                // .filter((item)=>{\r\n                //     let str=item.jid.slice(0,4)+\"-\"+ String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\r\n                //     let time=new Date(str);\r\n                //     if(time >= startTemp && time<= endTemp){return item;}\r\n                // })\r\n                .map((item)=>{\r\n                    let res=true;\r\n                    let flag=0;\r\n                   \r\n                    if(Array.isArray(item.return)){ res=true;}\r\n                    else{\r\n                     \r\n                        let dataTemp=Object.entries(item.return).map((e,index,arr) => {\r\n                         if((e[1].result === false) && (flag===0)){\r\n                            res=false\r\n                           flag=1;\r\n                        \r\n                          }\r\n                         if(index===arr.length-1 && flag === 0){\r\n                            flag=1;\r\n                            res=true;\r\n                          \r\n                         \r\n                         }\r\n                    \r\n                      \r\n                       });\r\n               \r\n                    }\r\n         \r\n                    return {\r\n        \r\n                        status:(res=== true)?'Success':'Fail',\r\n                        name:item.minion,\r\n                        date:date(item.jid),\r\n                        id:item._id,\r\n                        time: time(item.jid),\r\n        \r\n                        // return:item.return\r\n                    };}\r\n                )\r\n            \r\n                this.setState({saltReturns:saltTemp});\r\n            // console.log(this.state.saltReturns,'setTimeout(()=>{this.setState({saltReturns:saltTemp});}, 600);');\r\n            }, 500);\r\n            //setTimeout(()=>{;}, 1000);\r\n        }\r\n\r\n\r\n\r\n    }\r\n    // componentWillUpdate() {\r\n  \r\n    // }\r\n    render(){\r\n\r\n        return (\r\n            <div>\r\n                <MaterialTable\r\n                    title=\"Minions Table\"\r\n                    columns={dataColumns}\r\n                    data={ this.state.saltReturns}\r\n                    icons={tableIcons}\r\n                    onRowClick={((evt, selectedRow) => this.setState({ selectedRow }))}\r\n\r\n\r\n                    options={{\r\n                        exportButton: true,\r\n                        filtering: true,\r\n\r\n                        //rowStyle: rowData => ({\r\n                        // color: (rowData.name==='su') ? '#daa9d9' : '#ff1a1a'})\r\n\r\n                    }}\r\n                    actions={[\r\n                        {\r\n\r\n                            icon: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n                            tooltip: 'View commands',\r\n                            onClick: (event, rowData) => {this.selestMinion(event, rowData)}\r\n                        }\r\n                    ]\r\n                    }\r\n                />\r\n\r\n                <Dialog\r\n                    open={this.state.dialogOpen}\r\n                    onClose={this.handleClose}\r\n\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                    maxWidth=\"lg\"\r\n                    scroll=\"paper\"\r\n                    aria-labelledby=\"confirmation-dialog-title\"\r\n                >\r\n\r\n                    <DialogTitle id=\"alert-dialog-title\">\r\n\r\n                        <Typography style={{color:\"#ff6666\",fontSize:18} }>\r\n                            {\"Failed \"}\r\n                            {this.state.minion.minion}\r\n                            {\" at date \"}\r\n                            {   (this.state.minion !== undefined )? (date(String(this.state.minion.jid))): \" \"}\r\n                            {' at hour '}\r\n                            {(this.state.minion !== undefined )? (time(String(this.state.minion.jid))): \" \"}\r\n                            {//console.log(this.state.minion,\"comment\")}\r\n                             }\r\n                        </Typography>\r\n                    </DialogTitle>\r\n\r\n\r\n                    <DialogContent dividers>\r\n                    {//if you want to chenge width with \r\n                    }\r\n                        <div style={{minWidth: 1000,}}>\r\n                            <div>\r\n                             \r\n\r\n                              \r\n                                <TreeView\r\n                                style={{\r\n                                   \r\n                                    fontSize:18,\r\n                                }}\r\n                                defaultCollapseIcon={<ExpandMoreIcon />}\r\n                                defaultExpandIcon={<ChevronRightIcon />}\r\n                                >\r\n                                 {this.state.data.map((item,index)=>{\r\n                                        if(this.state.flag===false){\r\n                                            return (\r\n                                                <Typography  className={this.props.classes.TreeItem} > \r\n                                                        <TreeItem \r\n                                                        nodeId={index} \r\n                                                        label={Object.keys(item)[0]} \r\n                                                        style={{\r\n                                                            color:(Object.values(item)[0].result===true)?'#26a852':\"#ff6666\",\r\n                                                            fontSize:18,\r\n                                                        }}\r\n                                                        className={this.props.classes.TreeItemText}> \r\n    \r\n                                                            {console.log(\"table - 394\")}\r\n                                                            \r\n                                                            <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n                                                            comment : \r\n                                                            \r\n                                                            </Typography>\r\n    \r\n                                                            <Typography color=\"textSecondary\" className={this.props.classes.text}>{(Object.values(item)[0]).comment}</Typography>\r\n    \r\n                                                            \r\n                                                            <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n                                                             changes :\r\n                                                            </Typography>\r\n    \r\n                                                            <Typography color=\"textSecondary\" className={this.props.classes.text}>{(String(Object.values(item)[0]).changes)}</Typography>\r\n    \r\n                                                            <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n                                                              _id_ : \r\n                                                            </Typography>\r\n    \r\n                                                            <Typography color=\"textSecondary\" className={this.props.classes.text}>{(Object.values(item)[0])._id_}</Typography>\r\n                                               \r\n                                                        </TreeItem>\r\n                                                    </Typography>\r\n                                                       )\r\n                                        }\r\n                                        else{\r\n                                            if(index===1){\r\n                                                return(\r\n                                                    <Typography  color=\"textSecondary\" gutterBottom>\r\n                                                                  return : {this.state.minion.return}\r\n                                                    </Typography>\r\n                                                )\r\n                                            }\r\n                                           \r\n                                        }\r\n                                           \r\n\r\n                                 })}\r\n                                 </TreeView>\r\n                       \r\n                                <CardActions>\r\n\r\n                                </CardActions>\r\n                            </div>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n                          close\r\n                        </Button>\r\n                    </DialogActions>\r\n\r\n                </Dialog>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        saltReturns: state.saltReturns,\r\n        date: state.date\r\n    }\r\n}\r\nfunction matchDispatchToProps(dispatch){\r\n    return bindActionCreators({saltReturns: saltReturns}, dispatch);\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Orders));","import React from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport store from '../store';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport {SAVE_MINION} from \"../actions/types\";\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nconst styles = theme => ({\r\n  root: {\r\n    maxWidth: 400,\r\n    Width:400,\r\n    margin: theme.spacing(1),\r\n    marginLeft: theme.spacing(0),\r\n  },\r\n  root2: {\r\n    width: 230,\r\n    maxWidth: 360,\r\n    fontSize:12,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n    overflow:'wrap',\r\n    paddingLeft: theme.spacing(2),\r\n   // paddingTop: theme.spacing(2),\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    fontSize: 12,\r\n  },\r\n  container: {\r\n    width: 500,\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    overflow:'wrap'\r\n  },\r\n  minions:{\r\n    height: 240,\r\n    flexGrow: 1,\r\n    maxWidth: 400,\r\n  },\r\n  CardContent:{\r\n    maxWidth: 400,\r\n    width: 400,\r\n  \r\n  },\r\n  CircularProgress:{\r\n     paddingLeft: theme.spacing(20),\r\n    //paddingTop: theme.spacing(),\r\n  },\r\n  TreeItem:{\r\n    color:'#26a852',\r\n  },\r\n});\r\n\r\n\r\nclass MinionCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        \r\n        const commentg= this.props.comment;\r\n       // console.log(this.props.id,'constructor');\r\n       this.state={ \r\n          open: false,\r\n          defer: false,\r\n          click:false,\r\n          comment: commentg,\r\n          listOpen:false,\r\n          open:false,\r\n        };\r\n        this.onClickMinion = this.onClickMinion.bind(this);\r\n        this.handleClickButton = this.handleClickButton.bind(this);\r\n        this.handleClickOpen = this.handleClickOpen.bind(this);\r\n        this. handleClose = this. handleClose.bind(this);\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n      //console.log(nextProps,\"nextProps\")\r\n      if(nextProps.prepared!==this.props.prepared){\r\n\r\n      }\r\n    }\r\n    onClickMinion(){\r\n    \r\n      // console.log(store.getState(),\"store.getState() from minionCard\");\r\n    }\r\n    handleClickButton(){\r\n      this.state.listOpen=!(this.state.listOpen);\r\n  \r\n  \r\n    }\r\n    handleClickOpen(){\r\n      this.setState((prevState) => ({open:!prevState.open}));\r\n      console.log(this.state,\"stste from handleClickOpen\")\r\n    }\r\n    handleClose(){\r\n      this.setState((prevState) => ({open:!prevState.open}));\r\n      this.setState({click:true});\r\n      let array =store.getState().saveMinion.saveMinion;\r\n      \r\n     \r\n      let minions=array.filter((item)=>{\r\n        if(item.id !==this.props.id){return (item)}\r\n      });\r\n      minions=minions.map((item,index)=>{\r\n       return( {...item,id:index+1});\r\n      })\r\n      // minions.unshift(this.state.saveMinion[0]);\r\n      store.dispatch({\r\n          type: SAVE_MINION,\r\n          payload: minions\r\n      });\r\n    }\r\nrender(){\r\n  // id={item.id} minion={item.minions} comment={item.comment}\r\n    const bull = <span className={this.props.classes.bullet}>•</span>;\r\n    console.log(this.props,\"this.props\")\r\n    if(this.state.comment===''){this.state.click =true}\r\n    if(this.state.click === false && this.props.prepared===true){\r\n      return (\r\n     \r\n        <Card className={this.props.classes.root}>\r\n          <CardContent>\r\n  \r\n           \r\n              <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n              Function: {this.props.comment}\r\n              {/*this.props.fun*/}\r\n              </Typography>\r\n              <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n              Parameter: {this.props.Parameter}\r\n              {/*this.props.fun*/}\r\n              </Typography>\r\n        \r\n              <Typography variant=\"h5\" component=\"h2\" color=\"textSecondary\" >\r\n                <div>\r\n                  <div className={this.props.classes.container}>\r\n                                <TreeView\r\n                                className={this.props.classes.root}\r\n                                defaultCollapseIcon={<ExpandMoreIcon />}\r\n                                defaultExpandIcon={<ChevronRightIcon />}\r\n                              >\r\n                        <TreeItem nodeId=\"1\" label=\"See Minions\">\r\n                        {\r\n                            this.props.minion.map((item,index)=>{\r\n                             // console.log(index,\"index\")\r\n                              return(\r\n                                <TreeItem nodeId={index+2} label={item[0]} className={this.props.classes.TreeItem}>\r\n                                    <Typography  color=\"textSecondary\" >\r\n                                  <TreeItem nodeId={index+3} label={item[1]} />\r\n                                  </Typography>\r\n                                  \r\n                                </TreeItem>\r\n                            )\r\n                            })\r\n                          }\r\n                          </TreeItem>\r\n                    </TreeView>\r\n                  </div>\r\n                 </div>\r\n              </Typography>\r\n              \r\n            {/*button*/}\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n        \r\n        <IconButton \r\n        aria-label=\"share\"\r\n        variant=\"outlined\" \r\n        //color=\"primary\" \r\n        onClick={this.handleClickOpen}\r\n          //onClick={this.handleExpandClick}\r\n        color='secondary'\r\n          >\r\n              <DeleteIcon />\r\n        </IconButton>\r\n        <Dialog\r\n        open={this.state.open}\r\n        onClose={this.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        >\r\n  \r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n          Are you sure you want to delete the command from history?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button onClick={this.handleClickOpen} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n          <Button onClick={this.handleClose} color=\"secondary\" autoFocus>\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n        </Dialog>\r\n        {/*\r\n            <IconButton\r\n              className={clsx(this.props.classes.expand, {\r\n                [this.props.classes.expandOpen]: this.state.expanded,\r\n              })}\r\n              onClick={this.handleExpandClick}\r\n              aria-expanded={this.state.expanded}\r\n              aria-label=\"show more\"\r\n            >\r\n              <ExpandMoreIcon />\r\n            </IconButton>\r\n            */}\r\n          </CardActions>\r\n  \r\n        </Card>\r\n       \r\n         \r\n        );\r\n    }\r\n  \r\n      else if (this.props.prepared===false)\r\n      {\r\n        //console.log(\"props from minioncard\")\r\n        //console.log(this.props,\"props from minioncard\")\r\n        return(\r\n          <Card className={this.props.classes.root}>\r\n            \r\n            <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n              Function: {this.props.comment}\r\n              {/*this.props.fun*/}\r\n              </Typography>\r\n              <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\r\n              Parameter: {this.props.Parameter}\r\n              {/*this.props.fun*/}\r\n              </Typography>\r\n           \r\n            <CardContent className={this.props.classes.CardContent}>\r\n              <div className={this.props.classes.CircularProgress}> <CircularProgress /></div>\r\n            \r\n            </CardContent>\r\n          </Card>\r\n        );\r\n      }\r\n      else{return(<div></div>);}\r\n}\r\n  \r\n}\r\n\r\nexport default withStyles(styles)(MinionCard);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../actions/authActions';\r\nimport PropTypes from 'prop-types';\r\nimport store from '../../store';\r\nimport Button from '@material-ui/core/Button';\r\nexport class Logout extends Component {\r\n  static propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n  };\r\n\r\n\r\n  render() {\r\n    // console.log(this.props)\r\n    return (\r\n        <Button  style={{color:'#fff',border:'none'}}  variant='outlined'  onClick={()=> store.dispatch(logout())}>\r\n          Log out\r\n        </Button>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n  null,\r\n  { logout }\r\n)(Logout);","\r\n\r\nimport React, { Component } from \"react\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport MaterialTable from 'material-table';\r\nimport { forwardRef } from 'react';\r\nimport store from '../store';\r\nimport { saveMinion } from '../actions/date';\r\nimport {SAVE_MINION} from \"../actions/types\";\r\nimport axios from 'axios';\r\nimport {\r\n    AddBox,\r\n    ArrowDownward,\r\n    Check,\r\n    ChevronLeft,\r\n    ChevronRight,\r\n    Clear,\r\n    DeleteOutline,\r\n    Edit,\r\n    FilterList,\r\n    FirstPage,\r\n    LastPage,\r\n    Remove,\r\n    SaveAlt,\r\n    Search,\r\n    ViewColumn,\r\n\r\n\r\n}from '@material-ui/icons';\r\nimport { withAlert } from 'react-alert';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport MinionCard from './MinionCard';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { returnErrors } from '../actions/errorActions';\r\nimport { listMinions } from '../actions/date';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) =>  <Edit {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst styles = theme => ({\r\n    MaterialTable:{\r\n        marginLeft: theme.spacing(12),\r\n        marginTop: theme.spacing(1),\r\n        width:450, \r\n    },\r\n    root: {\r\n      padding: '2px 4px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      width: 500,\r\n      height:70,\r\n      marginTop: theme.spacing(1)\r\n    },\r\n    paperParms:{\r\n        padding: '3px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 400,\r\n        height:50,\r\n        marginTop: theme.spacing(3)\r\n    },\r\n   \r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      marginTop: 0,\r\n      \r\n      flex: 1,\r\n    },\r\n    inputparms:{\r\n        marginLeft: theme.spacing(1),\r\n    \r\n        //width: 400,\r\n        flex: 1,\r\n    },\r\n    minionStyle:{\r\n        marginTop: theme.spacing(5),\r\n        width:200\r\n    },\r\n   \r\n    iconButton: {\r\n      padding: 10,\r\n      height:55\r\n    },\r\n    Divider: {\r\n      marginTop: theme.spacing(5),\r\n      height: 50,\r\n      margin: 4,\r\n    },\r\n    iconButtonParms: {\r\n     \r\n        padding: 10,\r\n        height: 10,\r\n        width:4,\r\n      },\r\n      dividerParms: {\r\n        marginTop: theme.spacing(5),\r\n        height: '100%',\r\n        margin: 4,\r\n      },\r\n    msg:{\r\n        width: '100%',\r\n        '& > * + *': {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n    Comments:{\r\n        marginTop: theme.spacing(4),\r\n    },\r\n   \r\n    ButtonGroup: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        \r\n        '& > *': {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n      },\r\n      button: {\r\n       //paddingRight:70,\r\n       height:50,\r\n      // width:60\r\n      },\r\n    \r\n  });\r\n\r\n\r\n\r\n \r\n\r\nclass SaltStack extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.clickOpen = this.clickOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.sentCommand = this.sentCommand.bind(this);\r\n        this.getMinionsFromServer = this.getMinionsFromServer.bind(this);\r\n        this.tokenConfig = this.tokenConfig.bind(this);\r\n        store.dispatch(listMinions());\r\n        this.state={\r\n        alert:false,\r\n        msg:false,\r\n        menu:\"Dashboard\",\r\n        open: false,\r\n        defer: false,\r\n        clickSave:false,\r\n        history:[],\r\n        input:'',\r\n        parms:\"\",\r\n        saveMinion:{},\r\n        countSaveMinion:0,\r\n        warninginput:false,\r\n        warningNoMinionSelected:false,\r\n        err_cmd:\"\",\r\n        err_cmd_flag:false,\r\n        data:[],\r\n        };\r\n        \r\n        \r\n       this.getMinionsFromServer();\r\n    }\r\n    getMinionsFromServer(){\r\n       \r\n        let tokenTemp=this.tokenConfig();\r\n      \r\n        axios.get('/get_connected_minions',tokenTemp)\r\n        .then((res) => {\r\n                let arr=[];\r\n                for(let i=0;i<res.data.result.length;i++){\r\n                   let minion={name:res.data.result[i]}\r\n                   arr.push(minion);\r\n                }             \r\n                this.setState({data:arr})\r\n        })\r\n        .catch(err => {\r\n            console.log(err,\"err get_connected_minions\");\r\n    \r\n           });\r\n        };\r\n        tokenConfig = () => {\r\n            //console.log(\"getstatteeeeeslatl\",store.getState())\r\n            // Get token from localstorage\r\n            const token = store.getState().auth.token;\r\n        \r\n            // Headers\r\n            const config = {\r\n                headers: {\r\n                    \"Content-type\": \"application/json\"\r\n                }\r\n            }\r\n        \r\n            // If token, add to headers\r\n            if(token) {\r\n               config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n            }\r\n        \r\n         return config;\r\n    };\r\n    handleClose = (event, reason) => \r\n    {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n     \r\n        this.setState({msg:false,warninginput:false,warningNoMinionSelected:false});\r\n    };\r\n\r\n    handleClick = () => \r\n    {\r\n        this.state.countSaveMinion--;\r\n        \r\n        if((this.state.input !== '')  &&  (this.state.countSaveMinion===0)){\r\n            this.state.saveMinion.prepared=false;\r\n            setTimeout(()=>{this.setState({msg:false,clickSave:false});}, 2200);\r\n            this.state.saveMinion.comment=this.state.input;\r\n\r\n            let minions =store.getState().saveMinion.saveMinion;\r\n            \r\n            const words = this.state.input.split(' ');\r\n            const parms_send=this.state.parms.split(' ');\r\n           \r\n            let res={\r\n                func:words[0],\r\n                tgt:this.state.saveMinion.minions,\r\n                salt_cmd:this.state.parms===\"\"?\"\":parms_send,\r\n            }\r\n        \r\n           this.state.saveMinion.Parameter=parms_send;\r\n            this.setState({parms:\"\"});\r\n         \r\n            const body = JSON.stringify(res);\r\n            let tokenTemp=this.tokenConfig();\r\n            this.state.history.unshift(this.state.saveMinion);\r\n            minions.unshift(this.state.saveMinion);\r\n            store.dispatch({\r\n                type: SAVE_MINION,\r\n                payload: minions\r\n            });\r\n            \r\n            axios.post('/saltstack_cmd',body, tokenTemp)\r\n            .then((res) => {\r\n                const temp=res.data.res;\r\n                const result = Object.keys(temp).map((key) => [String(key), temp[key]]);\r\n               let buildRes=[];\r\n                result.forEach(minionRes => {\r\n                    minions[0].minions.map((item)=>{\r\n                        if(minionRes[0]===item){\r\n                            buildRes.push([minionRes[0],minionRes[1]])\r\n                            item = buildRes;\r\n                        }\r\n                    \r\n                })\r\n            \r\n                });\r\n                this.state.saveMinion.prepared=true;\r\n                this.state.history.unshift(this.state.saveMinion);\r\n                minions[0].minions=buildRes;\r\n                minions.shift();\r\n                minions.unshift(this.state.saveMinion);\r\n                console.log(minions,\"minions 2\")\r\n                store.dispatch({\r\n                    type: SAVE_MINION,\r\n                    payload: minions\r\n                });\r\n                this.setState({msg:true});\r\n            })\r\n            .catch(err => {\r\n                //console.log(\"err from SaltStack\")\r\n                this.setState({err_cmd:err.response.data.message,err_cmd_flag:true})\r\n                //console.log(this.state,\"opopopopopopoo\")\r\n                setTimeout(()=>{this.setState({err_cmd_flag:false});}, 2200);\r\n                store.dispatch(returnErrors(err.response.data.message, err.response.status, 'CMD_FAIL'));\r\n                // dispatch({\r\n                //     type: LOGIN_FAIL\r\n                // })\r\n            })\r\n        \r\n          \r\n            //console.log(store.getState(),\"store from saltstack\");\r\n            \r\n        }\r\n        \r\n        if(this.state.input === ''){ \r\n            this.setState({warninginput:true});\r\n            setTimeout(()=>{this.setState({warninginput:false});}, 2200);\r\n        }\r\n        if((this.state.countSaveMinion !==0) && (this.state.countSaveMinion!==1) &&(this.state.input !== '')  ){ \r\n            this.setState({warningNoMinionSelected:true});\r\n            setTimeout(()=>{this.setState({warningNoMinionSelected:false});}, 2200);\r\n        }\r\n\r\n        this.setState({input:'',parms:\"\"});\r\n\r\n\r\n      };\r\n   \r\n    clickOpen (rowData){\r\n        //  console.log(rowData,'rowData')\r\n        this.state.countSaveMinion=0;\r\n        this.state.countSaveMinion++;\r\n        const data=rowData.map((row)=>row.name);\r\n        let commntId=(store.getState().saveMinion.saveMinion.length)+1; \r\n        this.state.saveMinion={minions:data,id:commntId,comment:'',prepared:false};\r\n       // this.getMinionsFromServer();\r\n        this.setState({alert:true,clickSave:true,});\r\n        setTimeout(()=>{this.setState({alert:false,});}, 2200);\r\n        \r\n    };\r\n\r\nsentCommand(command){\r\n        \r\n        this.state.countSaveMinion--;\r\n        if( (this.state.countSaveMinion===0)){\r\n\r\n           \r\n            this.state.saveMinion.prepared=false;\r\n\r\n           \r\n            this.state.saveMinion.comment=command;\r\n            \r\n            let minions =store.getState().saveMinion.saveMinion;\r\n            //  console.log(store.getState().saveMinion.saveMinion,\"store.getState().saveMinion.saveMinion\")\r\n           \r\n          \r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n            const words = this.state.input.split(' ');\r\n            const parms_send=this.state.parms.split(' ');\r\n           \r\n            let res={\r\n                func:command,\r\n                tgt:this.state.saveMinion.minions,\r\n                salt_cmd:this.state.parms===\"\"?\"\":parms_send,\r\n            }\r\n            this.state.saveMinion.Parameter=parms_send;\r\n            this.setState({parms:\"\"});\r\n\r\n            const body = JSON.stringify(res);\r\n            let tokenTemp=this.tokenConfig();\r\n            this.state.history.unshift(this.state.saveMinion);\r\n            minions.unshift(this.state.saveMinion);\r\n          \r\n            store.dispatch({\r\n                type: SAVE_MINION,\r\n                payload: minions\r\n            });\r\n            console.log(store.getState(),\"store.getState() first\")\r\n            axios.post('/saltstack_cmd',body, tokenTemp)\r\n            .then((res) => {\r\n                const temp=res.data.res;\r\n                const result = Object.keys(temp).map((key) => [String(key), temp[key]]);\r\n               let buildRes=[];\r\n                result.forEach(minionRes => {\r\n                    minions[0].minions.map((item)=>{\r\n                        if(minionRes[0]===item){\r\n                            buildRes.push([minionRes[0],minionRes[1]])\r\n                            item = buildRes;\r\n                        }\r\n                    \r\n                })\r\n            \r\n                });\r\n                this.state.saveMinion.prepared=true;\r\n                this.state.history.unshift(this.state.saveMinion);\r\n                minions[0].minions=buildRes;\r\n                minions.shift();\r\n                minions.unshift(this.state.saveMinion);\r\n                console.log(minions,\"minions 2\")\r\n                store.dispatch({\r\n                    type: SAVE_MINION,\r\n                    payload: minions\r\n                });\r\n                this.setState({msg:true});\r\n      \r\n\r\n            })\r\n            .catch(err => {\r\n                //console.log(\"err from SaltStack\")\r\n                //this.setState({err_cmd:err.response.data.message,err_cmd_flag:true})\r\n               \r\n                setTimeout(()=>{this.setState({err_cmd_flag:false});}, 4000);\r\n                //store.dispatch(returnErrors(err.response.data.message, err.response.status, 'CMD_FAIL'));\r\n                // dispatch({\r\n                //     type: LOGIN_FAIL\r\n                // })\r\n            })\r\n          \r\n           // console.log(this.state.history,'this.state.history')\r\n            \r\n            setTimeout(()=>{this.setState({msg:false,clickSave:false});}, 2200);\r\n         \r\n        }\r\n      \r\n        if((this.state.countSaveMinion !==0) && (this.state.countSaveMinion!==1)   ){ \r\n            this.setState({warningNoMinionSelected:true});\r\n            setTimeout(()=>{this.setState({warningNoMinionSelected:false});}, 2200);\r\n        }\r\n        this.setState({parms:\"\"});\r\n\r\n    };\r\n\r\n\r\n\r\n  render(){\r\n  \r\n    return (\r\n\r\n<div style={{display: 'flex',flexDirection: 'row',}}>\r\n\r\n<div style={{display: 'flex',flexDirection: 'column',}}>\r\n   \r\n    <Paper component=\"form\" className={this.props.classes.root}>\r\n        <IconButton className={this.props.classes.iconButton} aria-label=\"menu\">\r\n            <MenuIcon />\r\n        </IconButton>\r\n            \r\n        <InputBase\r\n        autoComplete\r\n        autoFocus='true'\r\n        value={this.state.input}\r\n        onChange={(event)=>{this.setState({input:event.target.value})}}\r\n        className={this.props.classes.input}\r\n        placeholder=\"Command Line\"\r\n        inputProps={{ 'aria-label': 'Command Line' }}\r\n        />\r\n        {\r\n            this.state.input!==\"\"?(\r\n                <div>\r\n          \r\n            <IconButton color=\"primary\" className={this.props.classes.iconButton} aria-label=\"directions\" onClick={()=>{this.setState({input:\"\"})}}>\r\n              <ClearIcon />\r\n            </IconButton>\r\n            </div>\r\n            )\r\n            :(<div></div>)\r\n        }\r\n        <Divider className={this.props.classes.divider} orientation=\"vertical\" />     \r\n        <IconButton fontSize=\"small\" color='primary' size='medium' className={this.props.classes.iconButton} aria-label=\"directions\" onClick={this.handleClick}>\r\n            <SendIcon />\r\n        </IconButton>\r\n    </Paper>\r\n\r\n\r\n\r\n\r\n{\r\n    /////////////////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n<div className={this.props.classes.Comments}>\r\n    Parameters\r\n        <Divider light  style={{width:200}}/>\r\n    </div>\r\n\r\n\r\n    <Paper component=\"form\" className={this.props.classes.paperParms}>\r\n    <InputBase\r\n    autoComplete\r\n    autoFocus='true'\r\n    value={this.state.parms}\r\n    onChange={(event)=>{this.setState({parms:event.target.value})}}\r\n    className={this.props.classes.inputparms}\r\n    placeholder=\"Parameters\"\r\n    inputProps={{ 'aria-label': 'Parameters' }}\r\n    />\r\n    {\r\n    //     this.state.parms!==\"\"?(\r\n            \r\n     \r\n    //         <Divider className={this.props.classes.divider} orientation=\"vertical\" />\r\n       \r\n    //     )\r\n    //     :(<div></div>)\r\n    }\r\n  \r\n    {\r\n        this.state.parms!==\"\"?(\r\n            \r\n     \r\n        <IconButton fontSize=\"small\" color=\"primary\" className={this.props.classes.iconButton} aria-label=\"directions\" onClick={()=>{this.setState({parms:\"\"})}}>\r\n        <ClearIcon />\r\n      </IconButton>\r\n       \r\n        )\r\n        :(<div></div>)\r\n    }\r\n    {\r\n//     <Divider orientation=\"vertical\" flexItem/>   \r\n//    <Button\r\n//         variant=\"contained\"\r\n//         color=\"primary\"\r\n//         className={this.props.classes.button}\r\n//         //disabled\r\n//         //endIcon={<SendIcon />}\r\n//       >\r\n//         {//Send\r\n//         }\r\n//      </Button>\r\n    }\r\n\r\n    </Paper>\r\n\r\n\r\n\r\n\r\n    <div className={this.props.classes.Comments}>\r\n        commands\r\n        <Divider light  style={{width:200}}/>\r\n    </div>\r\n\r\n    <div className={this.props.classes.ButtonGroup}>\r\n        <ButtonGroup \r\n            size=\"large\" \r\n            color=\"primary\" \r\n            orientation=\"horizontal\"\r\n            color=\"primary\"\r\n            aria-label=\"vertical contained primary button group\"\r\n            variant=\"text\"\r\n            style={{ marginTop:35,width:420,height:50,}}>\r\n           \r\n           <Button onClick={()=>this.sentCommand('state.apply')}>state.apply</Button>\r\n            <Button onClick={()=>this.sentCommand('test.ping')}>test.ping</Button>\r\n            <Button onClick={()=>this.sentCommand('grains.items')}>grains.items</Button>\r\n\r\n        \r\n\r\n        </ButtonGroup>\r\n        <ButtonGroup \r\n            size=\"large\" \r\n            color=\"primary\" \r\n            orientation=\"horizontal\"\r\n            color=\"primary\"\r\n            aria-label=\"vertical contained primary button group\"\r\n            variant=\"text\"\r\n            style={{ marginTop:15,width:380,height:50,}}>\r\n\r\n            <Button onClick={()=>this.sentCommand('pillar.items')}>pillar.items</Button>\r\n            <Button onClick={()=>this.sentCommand('saltutil.refresh_grains')}>saltutil.refresh_grains</Button>\r\n           \r\n                            \r\n        </ButtonGroup>\r\n        <ButtonGroup \r\n            size=\"large\" \r\n            color=\"primary\" \r\n            orientation=\"horizontal\"\r\n            color=\"primary\"\r\n            aria-label=\"vertical contained primary button group\"\r\n            variant=\"text\"\r\n            style={{ marginTop:15,width:380,height:50,}}>\r\n        <Button onClick={()=>this.sentCommand('saltutil.refresh_pillar')}>saltutil.refresh_pillar</Button>\r\n        </ButtonGroup>\r\n    </div>\r\n\r\n    <div className={this.props.classes.Divider}>\r\n        History\r\n        <Divider light  style={{width:400}}/>\r\n    </div>\r\n\r\n\r\n    {\r\n        <div style={{ display: 'flex',flexDirection: 'row',flexFlow: 'row wrap',maxWidth:600}}>\r\n        {store.getState().saveMinion.saveMinion.map(item =>{\r\n            return(\r\n                \r\n                  <MinionCard  id={item.id} minion={item.minions} comment={item.comment} prepared={item.prepared} Parameter={item.Parameter}/>\r\n        )})}\r\n        </div>\r\n    }  \r\n\r\n    \r\n    <div className={this.props.classes.Divider}>\r\n        <Divider light  style={{width:400}}/>\r\n    </div>\r\n\r\n\r\n    </div>\r\n<div>\r\n  \r\n\r\n    <div className={this.props.classes.MaterialTable}>\r\n        {\r\n            this.state.alert?\r\n            (   <div className={this.props.classes.msg}>\r\n                   \r\n                        <Alert severity=\"success\">\r\n                                The minions you selected were  — <strong>accepted in the system</strong>\r\n                        </Alert>\r\n                   \r\n                </div>\r\n            ):<div></div>\r\n        }\r\n        <MaterialTable\r\n        \r\n            title='Minions'\r\n            icons={tableIcons}\r\n            columns={[{ title: 'Name', field: 'name' },]}\r\n            data={this.state.data} \r\n            options={{selection: true}}       \r\n            actions=\r\n            {[{\r\n                icon: forwardRef((props, ref) => <SaveIcon color='action' {...props} ref={ref} />),\r\n                tooltip: 'Save Minions',\r\n                onClick: (event, rowData) => {this.clickOpen(rowData)}\r\n            }]}\r\n        />\r\n        {\r\n            this.state.clickSave === true?\r\n                (<div className={this.props.classes.msg}>\r\n                    <Snackbar open={this.state.msg} autoHideDuration={6000} onClose={this.handleClose}>\r\n                        <Alert onClose={this.handleClose} severity=\"success\">\r\n                            The commands you made were received in the system!\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </div>\r\n                ):<div></div>\r\n        }\r\n        {\r\n            this.state.warninginput === true ?\r\n            (   <div className={this.props.classes.msg}>\r\n                <Snackbar open={this.state.warninginput} autoHideDuration={6000} onClose={this.handleClose}>\r\n                    <Alert onClose={this.handleClose} severity=\"warning\">\r\n                          command not sent because     <strong> no command entered   </strong>\r\n                        </Alert>\r\n                  \r\n                    </Snackbar>\r\n                   \r\n                </div>\r\n            )\r\n            :<div></div>\r\n        }\r\n        {\r\n            this.state.warningNoMinionSelected === true ?\r\n            (   <div className={this.props.classes.msg}>\r\n                <Snackbar open={this.state.warningNoMinionSelected} autoHideDuration={6000} onClose={this.handleClose}>\r\n                    <Alert onClose={this.handleClose} severity=\"warning\">\r\n                              command not sent because <strong>no minion selected   </strong>\r\n                        </Alert>\r\n                  \r\n                    </Snackbar>\r\n                   \r\n                </div>\r\n            )\r\n            :<div></div>\r\n        }\r\n          {\r\n            this.state.err_cmd_flag === true ?\r\n            (   <div className={this.props.classes.msg}>\r\n                <Snackbar open={this.state.err_cmd_flag} autoHideDuration={6000} onClose={this.handleClose}>\r\n                    <Alert onClose={this.handleClose} severity=\"error\">\r\n                              command not sent because <strong>Internal Server Error   </strong>\r\n                        </Alert>\r\n                  \r\n                    </Snackbar>\r\n                   \r\n                </div>\r\n            )\r\n            :<div></div>\r\n        }\r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n</div>\r\n</div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(SaltStack);","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport {DATE_SELECT} from \"../actions/types\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {Typography,Button,Grid} from '@material-ui/core';\r\nimport Title from './Title';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {KeyboardDatePicker,MuiPickersUtilsProvider,DatePicker} from \"@material-ui/pickers\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\n//import DateTime from 'react-datetime';\r\nimport {dateSelect} from '../actions/date.js';\r\nimport store from '../store';\r\nimport { saltReturnsForgraph } from '../actions/date';\r\nimport graphDate from '../reducers/graphDate';\r\nimport {GRAPH_DATE_SELECT} from \"../actions/types\";\r\n// <DatePicker\r\n// disableFuture\r\n// openTo=\"year\"\r\n// id=\"date-picker-dialog\"\r\n// margin=\"normal\"\r\n// format=\"dd/MM/yyyy\"\r\n// label=\"Start\"\r\n// views={[\"year\", \"month\", \"date\"]}\r\n// KeyboardButtonProps={{\r\n//   'aria-label': 'change date',\r\n// }}\r\n\r\n// />\r\n\r\n\r\n\r\n\r\n\r\n class SearchTimeGraph extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.dateIsChanged = this.dateIsChanged.bind(this);\r\n    this.state={graphDate:this.props.graphDate.graphDate,};\r\n  \r\n  }\r\n//   shouldComponentUpdate(nextProps, nextState) {\r\n//   return this.state.value != nextState.value;\r\n// }\r\n  \r\n    \r\n  \r\n  handleDateChange (date){\r\n    this.setState({graphDate:date});\r\n  \r\n  //  console.log(this.state,'this.state');\r\n  //  console.log(store.getState(),'store');\r\n   store.dispatch(saltReturnsForgraph());\r\n   setTimeout(() => {\r\n    store.dispatch({\r\n      type: GRAPH_DATE_SELECT,\r\n      payload: {graphDate:date}\r\n     } );\r\n   }, 0);\r\n  \r\n  }\r\n \r\n\r\n  dateIsChanged(){\r\n    //this.setState({graphDate:date});\r\n  //   let date=this.state.graphDate;\r\n  //  store.dispatch({\r\n  //   type: GRAPH_DATE_SELECT,\r\n  //   payload: {graphDate:date}\r\n  //  } );\r\n  //  store.dispatch(saltReturnsForgraph());\r\n\r\n\r\n    // console.log(\"store\",store.getState());\r\n}\r\n \r\n \r\n  render () {\r\n    return (\r\n      <React.Fragment>\r\n        <Typography component=\"p\" variant=\"h4\">\r\n\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid container justify=\"space-around\">\r\n            <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Graph Date\"\r\n            format=\"dd/MM/yyyy\"\r\n            value={this.state.graphDate}\r\n            onChange={(date)=>{this.handleDateChange(date)}}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n\r\n\r\n        \r\n   \r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n\r\n        </Typography>\r\n       \r\n      </React.Fragment>\r\n    );\r\n  }\r\n    \r\n}\r\n\r\n const mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    graphDate: state.graphDate\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SearchTimeGraph);","\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport React, { PureComponent } from 'react';\r\nimport {\r\n  BarChart, Bar, Brush, ReferenceLine, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\nimport store from '../store';\r\nimport axios from 'axios'\r\nimport { saltReturns } from '../actions/date';\r\nimport {connect} from 'react-redux';\r\nconst styles = theme => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n});\r\n\r\nexport const tokenConfig = getState => {\r\n  // console.log(\"getstatteeeeeslatl\",getState())\r\n   // Get token from localstorage\r\n   const token = store.getState().auth.token;\r\n\r\n   // Headers\r\n   const config = {\r\n       headers: {\r\n           \"Content-type\": \"multipart/form-data\"\r\n       }\r\n   }\r\n\r\n   // If token, add to headers\r\n   if(token) {\r\n      config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n   }\r\n\r\nreturn config;\r\n}\r\nclass CurrentMonth extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n         this.dataInit = this.dataInit.bind(this);\r\n         //store.dispatch(saltReturns(\"CurrentMonth\"));\r\n         //console.log(store.getState(),\"store.getState()\")\r\n         \r\n        this.state = {\r\n            start: new Date(),\r\n            end:new Date(),\r\n            data: this.dataInit(),\r\n            flag:true,\r\n        };\r\n      }\r\n \r\n      // componentWillUpdate(){\r\n      //   this.setState({data:this.dataInit(),flag:false});\r\n      // }\r\n     \r\n      dataInit(){\r\n        let time_1=new Date().getTime();\r\n        let year=String(new Date().getFullYear());\r\n        let dayEnd=String(new Date(year, new Date().getMonth()+1, 0).getDate());\r\n        dayEnd=parseInt(dayEnd)<10?\"0\"+dayEnd:dayEnd;\r\n        let satrtCurrentMonth=(new Date().getMonth()+1);\r\n        satrtCurrentMonth=parseInt( satrtCurrentMonth)<10?\"0\"+ satrtCurrentMonth: satrtCurrentMonth;\r\n        let Start= year+satrtCurrentMonth+\"01\"+\"000000000000\";\r\n        let End= year+satrtCurrentMonth+dayEnd+\"235959595959\";\r\n     \r\n        let minions=[];\r\n      \r\n\r\n      let url='/api/saltReturns/apply/'+Start+\"/\"+End;\r\n    \r\n      axios.get(url, tokenConfig(store.getState()))\r\n      .then((res) => {\r\n        let dataInit=[];\r\n       \r\n        let temp=new Date();\r\n         let mnonthDay =new Date(temp.getFullYear(), temp.getMonth()-1, 0).getDate();\r\n            for (let i=1;i<=mnonthDay;i++){\r\n             dataInit.push( { name: String(i), Fail:0, Success:0 });\r\n         }\r\n        minions=minions.concat(res.data);\r\n     \r\n        if(minions!==null){\r\n         \r\n          const BreakException = {};\r\n          \r\n         \r\n           \r\n            let funSaltReturns=minions\r\n       \r\n            .forEach((item) => {\r\n                let place= (parseInt(item.jid.slice(6,8))-1);\r\n               \r\n               let res=true;\r\n               let flag=0;\r\n              \r\n               if(Array.isArray(item.return)){ res=true;   {res === true ?(dataInit[place].Success++):(dataInit[place].Fail++)}}\r\n\r\n\r\n\r\n               else{\r\n                try {\r\n                   let dataTemp=Object.entries(item.return).forEach((e,index,arr) => {\r\n                    if((e[1].result === false) && (flag===0)){\r\n                      dataInit[place].Fail++;\r\n                      flag=1;\r\n                      throw BreakException;\r\n                   \r\n                     }\r\n                    if(index===arr.length-1 && flag === 0){\r\n                      dataInit[place].Success++;\r\n                    }\r\n               \r\n                 \r\n                  });\r\n\r\n\r\n                } catch (e) {\r\n                  if (e !== BreakException) throw e;\r\n                }\r\n\r\n          \r\n               }\r\n               \r\n              })\r\n\r\n\r\n         \r\n     \r\n          let time_2=new Date().getTime();\r\n          console.log((time_2-time_1),\"Time from month\");\r\n          }\r\n          \r\n\r\n          this.state.data= dataInit;\r\n          this.forceUpdate();\r\n    })\r\n    .catch(err => {\r\n        console.log(err,\"error in data\");\r\n\r\n       });\r\n\r\n      }\r\n      \r\n    render() {\r\n     // console.log(\"this.state 2\",this.state)\r\n        return (\r\n          <BarChart\r\n            width={1220}\r\n            height={500}\r\n            data={this.state.data}\r\n            margin={{\r\n              top: 5, right: 20, left: 10, bottom: 5,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\r\n            <ReferenceLine y={0} stroke=\"#000\" />\r\n            <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" />\r\n            <Bar dataKey=\"Fail\" fill=\"#ff6666\"/>\r\n            <Bar dataKey=\"Success\" fill=\"#82ca9d\" />\r\n          </BarChart>\r\n        );\r\n      }\r\n    }\r\n    \r\n    const mapStateToProps = (state, ownProps) => {\r\n      return {\r\n          saltReturns: state.saltReturns,\r\n          date: state.date\r\n      }\r\n  }\r\n    export default connect(mapStateToProps)(withStyles(styles)(CurrentMonth));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export default class Example extends PureComponent {\r\n//   static jsfiddleUrl = 'https://jsfiddle.net/alidingling/mc8r7e6p/';\r\n\r\n","\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport React, { PureComponent } from 'react';\r\nimport {\r\n  BarChart, Bar, Brush, ReferenceLine, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\nimport store from '../store';\r\nimport axios from 'axios'\r\nimport { saltReturns } from '../actions/date';\r\nimport {connect} from 'react-redux';\r\nconst styles = theme => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n});\r\nconst tokenConfig = getState => {\r\n  // console.log(\"getstatteeeeeslatl\",getState())\r\n   // Get token from localstorage\r\n   const token = store.getState().auth.token;\r\n\r\n   // Headers\r\n   const config = {\r\n       headers: {\r\n           \"Content-type\": \"multipart/form-data\"\r\n       }\r\n   }\r\n\r\n   // If token, add to headers\r\n   if(token) {\r\n      config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n   }\r\n\r\nreturn config;\r\n}\r\n\r\nclass CurrentYear extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n         this.dataInit = this.dataInit.bind(this);\r\n         //store.dispatch(saltReturns(\"CurrentYear\"));\r\n        this.state = {\r\n            start: new Date(),\r\n            end:new Date(),\r\n            data: this.dataInit(),\r\n            flag:true,\r\n        };\r\n      }\r\n    \r\n      // componentWillReceiveProps(nextProps) {\r\n      //   if( (((this.props.date.start.toLocaleDateString()!== nextProps.date.start.toLocaleDateString()) || (this.props.date.end.toLocaleDateString()!== nextProps.date.end.toLocaleDateString() ))) \r\n      //   && (this.state.flag===true)){\r\n\r\n      //      this.setState({data:this.dataInit()});\r\n          \r\n      //   }\r\n      // }\r\n      // shouldComponentUpdate(nextProps, nextState) {\r\n      //   if(this.state.flag===true){\r\n      //     this.setState({data:this.dataInit(),flag:false});\r\n      //     return true;\r\n      //   }\r\n      //  return false;\r\n        \r\n      // }\r\n     \r\n      // componentWillUpdate() {\r\n      //   this.setState({data:this.dataInit()});\r\n      // }\r\n      dataInit(){\r\n        let time_1=new Date().getTime();\r\n        let dataInit=[];\r\n        // let temp=new Date(2019,10);\r\n        const BreakException = {};\r\n        dataInit.push( { name: String('January'), Fail:0, Success:0 });\r\n        dataInit.push( { name: String('February'), Fail:0, Success:0 });\r\n        dataInit.push( { name: String('March'), Fail:0, Success:0 });\r\n        dataInit.push( { name: String('April'), Fail:0, Success:0 });\r\n        dataInit.push( { name: String('May '), Fail:0, Success:0 });\r\n        dataInit.push( { name: String('June  '), Fail:0, Success:0 });\r\n        dataInit.push( { name: String('July  '), Fail:0, Success:0 });\r\n        dataInit.push( { name: String('August '), Fail:0, Success:0 });\r\n        dataInit.push( { name: String('September '),Fail:0, Success:0 });\r\n        dataInit.push( { name: String('October '), Fail:0, Success:0 });\r\n        dataInit.push( { name: String('November  '),Fail:0, Success:0 });\r\n        dataInit.push( { name: String('December '), Fail:0, Success:0 });\r\n        let year=String(new Date().getFullYear());\r\n        let dayEnd=String(new Date(year, 12, 0).getDate());\r\n        dayEnd=parseInt(dayEnd)<10?\"0\"+dayEnd:dayEnd;\r\n        let Start= year+\"0101\"+\"000000000000\";\r\n        let End= year+\"12\"+dayEnd+\"235959595959\";\r\n        let minions=[];\r\n      \r\n\r\n        let url='/api/saltReturns/apply/'+Start+\"/\"+End;\r\n      \r\n        axios.get(url, tokenConfig(store.getState()))\r\n        .then((res) => {\r\n\r\n          minions=minions.concat(res.data);\r\n     \r\n          if(minions!==null){\r\n           \r\n            const BreakException = {};\r\n                minions.forEach((item) => {\r\n                let str=item.jid.slice(0,4)+\"-\"+String(parseInt(item.jid.slice(4,6)))+\"-\"+item.jid.slice(6,8);\r\n                let time=new Date(str);\r\n                let place=time.getMonth();\r\n                let res=true;\r\n                let flag=0;\r\n                //if(item.full_ret.success === false){res=false}\r\n                //let temp =Object.entries(item.return);\r\n                if(Array.isArray(item.return)){ res=true;   {res === true ?(dataInit[place].Success++):(dataInit[place].Fail++)}}\r\n                else{\r\n                  try {\r\n                     let dataTemp=Object.entries(item.return).forEach((e,index,arr) => {\r\n                      if((e[1].result === false) && (flag===0)){\r\n                        dataInit[place].Fail++;\r\n                        flag=1;\r\n                        throw BreakException;\r\n                     \r\n                       }\r\n                      if(index===arr.length-1 && flag === 0){\r\n                        dataInit[place].Success++;\r\n                      }\r\n                 \r\n                   \r\n                    });\r\n        \r\n        \r\n                  } catch (e) {\r\n                    if (e !== BreakException) throw e;\r\n                  }\r\n        \r\n            \r\n                 }\r\n        \r\n              })\r\n\r\n          }\r\n          this.state.data= dataInit;\r\n          this.forceUpdate();\r\n        }).catch(err => {\r\n        console.log(err,\"error in data\");\r\n\r\n       });\r\n\r\n        let time_2=new Date().getTime();\r\n        console.log((time_2-time_1),\"Time from year\");\r\n     \r\n    }\r\n      \r\n   \r\n    render() {\r\n        return (\r\n            <BarChart   \r\n                width={1220}\r\n                height={500} \r\n                data={this.state.data}\r\n                margin={{top: 5, right: 20, left: 10, bottom: 5,}}\r\n                >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\r\n                <ReferenceLine y={0} stroke=\"#000\" />\r\n              \r\n                <Bar dataKey=\"Fail\" fill=\"#ff6666\"/>\r\n                <Bar dataKey=\"Success\" fill=\"#82ca9d\" />\r\n            </BarChart>\r\n        \r\n      \r\n        );\r\n      }\r\n    }\r\n    \r\n    const mapStateToProps = (state, ownProps) => {\r\n      return {\r\n          saltReturns: state.saltReturns,\r\n          date: state.date\r\n      }\r\n  }\r\n\r\n  \r\n  \r\n  \r\nexport default connect(mapStateToProps)(withStyles(styles)(CurrentYear));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export default class Example extends PureComponent {\r\n//   static jsfiddleUrl = 'https://jsfiddle.net/alidingling/mc8r7e6p/';\r\n\r\n","import { withStyles } from \"@material-ui/core/styles\";\r\nimport React, { PureComponent } from 'react';\r\nimport {\r\n  BarChart, Bar, Brush, ReferenceLine, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\nimport store from '../store';\r\nimport { saltReturns } from '../actions/date';\r\nimport {connect} from 'react-redux';\r\nimport axios from 'axios'\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport {\r\n  LAST_THREE_MONTHS_ONE,\r\n     LAST_THREE_MONTHS_TOW,\r\n     LAST_THREE_MONTHS_THREE\r\n} from '../actions/types';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        \r\n        flexGrow: 1,\r\n        maxWidth: 400,\r\n      },\r\n});\r\nconst getDataFromServer = (str,start,end) => {\r\n  let timer_1=new Date().getTime();\r\n\r\n  let dataInit=[];\r\n  let temp=new Date();\r\n  if(str===LAST_THREE_MONTHS_ONE){\r\n\r\n      let monthDayOne =new Date(temp.getFullYear(), temp.getMonth()-2, 0).getDate();\r\n      for (let i=1;i<=monthDayOne;i++){\r\n          dataInit.push( { name: String(i), Fail:0, Success:0 });\r\n          }\r\n        \r\n  }\r\n  else if(str===LAST_THREE_MONTHS_TOW){\r\n\r\n      let monthDayTow =new Date(temp.getFullYear(), temp.getMonth()-1, 0).getDate();\r\n      for (let i=1;i<=monthDayTow;i++){\r\n          dataInit.push( { name: String(i), Fail:0, Success:0 });\r\n    }\r\n  }\r\n  else if(str===LAST_THREE_MONTHS_THREE){\r\n\r\n          \r\n      let monthDayThree =new Date(temp.getFullYear(), temp.getMonth(), 0).getDate();\r\n      for (let i=1;i<=monthDayThree;i++){\r\n          dataInit.push( { name: String(i), Fail:0, Success:0 });\r\n  }\r\n}\r\n \r\n      let minions=[];\r\n      let url='/api/saltReturns/apply/'+start+\"/\"+end;\r\n    \r\n     \r\n      console.log(\"url\" ,url);\r\n      axios.get(url, tokenConfig())\r\n      .then((res) => {\r\n        minions=minions.concat(res.data);\r\n       \r\n        if(minions!==null){\r\n          \r\n          let funSaltReturns=minions\r\n       \r\n        .forEach((item) => {\r\n            let place= (parseInt(item.jid.slice(6,8))-1);\r\n           \r\n           let res=true;\r\n           let flag=0;\r\n          \r\n           if(Array.isArray(item.return)){ res=true;   {res === true ?(dataInit[place].Success++):(dataInit[place].Fail++)}}\r\n           else{\r\n             \r\n               let dataTemp=Object.entries(item.return).map((e,index,arr) => {\r\n                if((e[1].result === false) && (flag===0)){\r\n                  dataInit[place].Fail++;\r\n                  flag=1;\r\n               \r\n                 }\r\n                if(index===arr.length-1 && flag === 0){\r\n                  dataInit[place].Success++;\r\n                }\r\n           \r\n             \r\n              });\r\n      \r\n           }\r\n         \r\n          })\r\n       \r\n          }\r\n          if(str===LAST_THREE_MONTHS_ONE){\r\n            this.state.one=dataInit;\r\n          }\r\n          else if(str===LAST_THREE_MONTHS_TOW){\r\n            this.state.tow=dataInit;\r\n          }\r\n          else if(str===LAST_THREE_MONTHS_THREE){\r\n            this.state.three=dataInit;\r\n          }\r\n          let timer_2=new Date().getTime();\r\n          console.log(timer_2-timer_1,\"time from str\")\r\n          \r\n      })\r\n      .catch(err => {\r\n        console.log(err,\"error in data\");\r\n      \r\n       });\r\n  \r\n  }\r\nconst tokenConfig = () => {\r\n  // console.log(\"getstatteeeeeslatl\",getState())\r\n   // Get token from localstorage\r\n   const token = store.getState().auth.token;\r\n\r\n   // Headers\r\n   const config = {\r\n       headers: {\r\n           \"Content-type\": \"multipart/form-data\"\r\n       }\r\n   }\r\n\r\n   // If token, add to headers\r\n   if(token) {\r\n      config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n   }\r\n\r\nreturn config;\r\n}\r\nclass LastThreeMonths extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.initWithoutInformation = this.initWithoutInformation.bind(this);\r\n         this.dataInitOne = this.dataInitOne.bind(this);\r\n         this.dataInitTow = this.dataInitTow.bind(this);\r\n         this.dataInitThree = this.dataInitThree.bind(this);\r\n         this.getDataFromServer = this.getDataFromServer.bind(this);\r\n        // store.dispatch(saltReturns(\"LastThreeMonths\"));\r\n  \r\n        this.state = {\r\n            start: new Date(),\r\n            end:new Date(),\r\n            nameOne:'',\r\n            nameTow:'',\r\n            nameThree:'',\r\n            one: [],\r\n            tow: [],\r\n            three: [],\r\n            flag:true,\r\n         \r\n        };\r\n        this.initWithoutInformation();\r\n         this.dataInitOne();\r\n        this.dataInitTow();\r\n        this.dataInitThree();\r\n      }\r\n      // componentWillReceiveProps(nextProps) {\r\n      //   if( (((this.props.date.start.toLocaleDateString()!== nextProps.date.start.toLocaleDateString()) || (this.props.date.end.toLocaleDateString()!== nextProps.date.end.toLocaleDateString() ))) \r\n      //   && (this.state.flag===true)){\r\n\r\n      //      this.setState({one: this.dataInitOne(),\r\n      //       tow: this.dataInitTow(),\r\n      //       three: this.dataInitThree()});\r\n          \r\n      //   }\r\n      // }\r\n      // shouldComponentUpdate(nextProps, nextState) {\r\n      //   if(this.state.flag===true){\r\n      //     this.setState({one: this.dataInitOne(),\r\n      //       tow: this.dataInitTow(),\r\n      //       three: this.dataInitThree(),flag:false});\r\n      //     return true;\r\n      //   }\r\n      //  return false;\r\n        \r\n      // }\r\ninitWithoutInformation(){\r\n        \r\n      let dataInitOne=[];\r\n\r\n      let temp=new Date();\r\n      // let temp=new Date(2019,10);\r\n\r\n      let monthDayOne =new Date(temp.getFullYear(), temp.getMonth()-2, 0).getDate();\r\n        for (let i=1;i<=monthDayOne;i++){\r\n          dataInitOne.push( { name: String(i), Fail:0, Success:0 });\r\n      }\r\n      this.state.one=dataInitOne;\r\n      ////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n      let dataInitTow=[];\r\n\r\n      let monthDayTow =new Date(temp.getFullYear(), temp.getMonth()-1, 0).getDate();\r\n        for (let i=1;i<=monthDayTow;i++){\r\n          dataInitTow.push( { name: String(i), Fail:0, Success:0 });\r\n      }\r\n      this.state.tow=dataInitTow;\r\n      ///////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n      let dataInitThree=[];\r\n\r\n\r\n      let monthDayThree =new Date(temp.getFullYear(), temp.getMonth(), 0).getDate();\r\n        for (let i=1;i<=monthDayThree;i++){\r\n          dataInitThree.push( { name: String(i), Fail:0, Success:0 });\r\n      }\r\n      this.state.three=dataInitThree;\r\n}\r\ngetDataFromServer (str,start,end) {\r\n        let timer_1=new Date().getTime();\r\n      \r\n        let dataInit=[];\r\n        let temp=new Date();\r\n        if(str===LAST_THREE_MONTHS_ONE){\r\n      \r\n            let monthDayOne =new Date(temp.getFullYear(), temp.getMonth()-2, 0).getDate();\r\n            for (let i=1;i<=monthDayOne;i++){\r\n                dataInit.push( { name: String(i), Fail:0, Success:0 });\r\n                }\r\n              \r\n        }\r\n        else if(str===LAST_THREE_MONTHS_TOW){\r\n      \r\n            let monthDayTow =new Date(temp.getFullYear(), temp.getMonth()-1, 0).getDate();\r\n            for (let i=1;i<=monthDayTow;i++){\r\n                dataInit.push( { name: String(i), Fail:0, Success:0 });\r\n          }\r\n        }\r\n        else if(str===LAST_THREE_MONTHS_THREE){\r\n      \r\n                \r\n            let monthDayThree =new Date(temp.getFullYear(), temp.getMonth(), 0).getDate();\r\n            for (let i=1;i<=monthDayThree;i++){\r\n                dataInit.push( { name: String(i), Fail:0, Success:0 });\r\n        }\r\n      }\r\n       \r\n            let minions=[];\r\n            let url='/api/saltReturns/apply/'+start+\"/\"+end;\r\n          \r\n           \r\n            console.log(\"url\" ,url);\r\n            axios.get(url, tokenConfig())\r\n            .then((res) => {\r\n              minions=minions.concat(res.data);\r\n             \r\n              if(minions!==null){\r\n                \r\n                let funSaltReturns=minions\r\n             \r\n              .forEach((item) => {\r\n                  let place= (parseInt(item.jid.slice(6,8))-1);\r\n                 \r\n                 let res=true;\r\n                 let flag=0;\r\n                \r\n                 if(Array.isArray(item.return)){ res=true;   {res === true ?(dataInit[place].Success++):(dataInit[place].Fail++)}}\r\n                 else{\r\n                   \r\n                     let dataTemp=Object.entries(item.return).map((e,index,arr) => {\r\n                      if((e[1].result === false) && (flag===0)){\r\n                        dataInit[place].Fail++;\r\n                        flag=1;\r\n                     \r\n                       }\r\n                      if(index===arr.length-1 && flag === 0){\r\n                        dataInit[place].Success++;\r\n                      }\r\n                 \r\n                   \r\n                    });\r\n            \r\n                 }\r\n               \r\n                })\r\n             \r\n                }\r\n                if(str===LAST_THREE_MONTHS_ONE){\r\n                  this.state.one=dataInit;\r\n                }\r\n                else if(str===LAST_THREE_MONTHS_TOW){\r\n                  this.state.tow=dataInit;\r\n                }\r\n                else if(str===LAST_THREE_MONTHS_THREE){\r\n                  this.state.three=dataInit;\r\n                }\r\n                let timer_2=new Date().getTime();\r\n                console.log(timer_2-timer_1,\"time from str\")\r\n                this.forceUpdate();\r\n            })\r\n            .catch(err => {\r\n              console.log(err,\"error in data\");\r\n            \r\n             });\r\n        \r\n}\r\ndataInitOne(){\r\n        let yearTemp=String(new Date().getFullYear());\r\n        let year =String(new Date(yearTemp, new Date().getMonth()-2, 1).getFullYear());\r\n        let dayEnd=String(new Date(year, new Date().getMonth()-2, 0).getDate());\r\n    \r\n        dayEnd=parseInt(dayEnd)<10?\"0\"+dayEnd:dayEnd;\r\n    \r\n        let satrtMonth=new Date(year, new Date().getMonth()-2, 1).getMonth();\r\n    \r\n        satrtMonth=parseInt(satrtMonth)<10?\"0\"+satrtMonth:satrtMonth;\r\n    \r\n        let start= year+satrtMonth+\"01\"+\"000000000000\";\r\n        let end= year+satrtMonth+dayEnd+\"235959595959\";\r\n      \r\n        this.getDataFromServer(LAST_THREE_MONTHS_ONE,start,end)\r\n}\r\n\r\n    //     })\r\n\r\ndataInitTow(){\r\n         \r\n        let yearTemp=String(new Date().getFullYear());\r\n        let year =String(new Date(yearTemp, new Date().getMonth()-2, 1).getFullYear());\r\n        let dayEndTow=String(new Date(year, new Date().getMonth()-1, 0).getDate());\r\n\r\n        dayEndTow=parseInt(dayEndTow)<10?\"0\"+dayEndTow:dayEndTow;\r\n    \r\n        let satrtMonthTow=new Date(year, new Date().getMonth()-1, 1).getMonth();\r\n    \r\n        satrtMonthTow=parseInt(satrtMonthTow)<10?\"0\"+satrtMonthTow:satrtMonthTow;\r\n    \r\n        let startTow= year+satrtMonthTow+\"01\"+\"000000000000\";\r\n        let endTow= year+satrtMonthTow+dayEndTow+\"235959595959\";\r\n        this.getDataFromServer(LAST_THREE_MONTHS_TOW,startTow,endTow)\r\n}\r\n\r\n      dataInitThree(){\r\n        let yearTemp=String(new Date().getFullYear());\r\n        let year =String(new Date(yearTemp, new Date().getMonth()-2, 1).getFullYear());\r\n        let dayEndThree=String(new Date(year, new Date().getMonth(), 0).getDate());\r\n\r\n        dayEndThree=parseInt(dayEndThree)<10?\"0\"+dayEndThree:dayEndThree;\r\n    \r\n        let satrtMonthTrhee=new Date(year, new Date().getMonth(), 1).getMonth();\r\n    \r\n        satrtMonthTrhee=parseInt(satrtMonthTrhee)<10?\"0\"+satrtMonthTrhee:satrtMonthTrhee;\r\n    \r\n        let startTrhee= year+satrtMonthTrhee+\"01\"+\"000000000000\";\r\n        let endTrhee= year+satrtMonthTrhee+dayEndThree+\"235959595959\";\r\n    \r\n        this.getDataFromServer(LAST_THREE_MONTHS_THREE,startTrhee,endTrhee)\r\n      }\r\n\r\n    \r\n   \r\n    render() {\r\n        let listMonth=['January','February','March','April',\r\n        'May','June','July','August','September',\r\n        'October','November','December'];\r\n        let temp=new Date();\r\n        let tempMonth=temp.getMonth();\r\n        if((tempMonth-1)<0){tempMonth+=12;}\r\n        this.state.nameThree=listMonth[tempMonth-1];\r\n        if((tempMonth-2)<0){tempMonth+=12;}\r\n        this.state.nameTow=listMonth[tempMonth-2];\r\n        if((tempMonth-3)<0){tempMonth+=12;}\r\n        this.state.nameOne=listMonth[tempMonth-3];\r\n    \r\n        return (\r\n            \r\n            <TreeView\r\n            className={this.props.classes.root}\r\n            defaultCollapseIcon={<ExpandMoreIcon />}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n            >\r\n                <TreeItem nodeId=\"1\" label={this.state.nameOne} >\r\n                    <BarChart\r\n                    width={1170}\r\n                    height={500}\r\n                    data={this.state.one}\r\n                    margin={{\r\n                    top: 5, right: 20, left: 10, bottom: 5,\r\n                    }}\r\n                    >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\r\n                    <ReferenceLine y={0} stroke=\"#000\" />\r\n                    <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" />\r\n                    <Bar dataKey=\"Fail\" fill=\"#ff6666\"/>\r\n                    <Bar dataKey=\"Success\" fill=\"#82ca9d\" />\r\n                </BarChart>\r\n                </TreeItem>\r\n\r\n                <TreeItem nodeId=\"2\" label={this.state.nameTow}>\r\n                    <BarChart\r\n                    width={1170}\r\n                    height={500}\r\n                    data={this.state.tow}\r\n                    margin={{\r\n                    top: 5, right: 20, left: 10, bottom: 5,\r\n                    }}\r\n                    >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\r\n                    <ReferenceLine y={0} stroke=\"#000\" />\r\n                    <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" />\r\n                    <Bar dataKey=\"Fail\" fill=\"#ff6666\"/>\r\n                    <Bar dataKey=\"Success\" fill=\"#82ca9d\" />\r\n                    </BarChart>\r\n                </TreeItem>\r\n\r\n\r\n                <TreeItem nodeId=\"3\" label={this.state.nameThree}>\r\n                    <BarChart\r\n                    width={1170}\r\n                    height={500}\r\n                    data={this.state.three}\r\n                    margin={{\r\n                    top: 5, right: 20, left: 10, bottom: 5,\r\n                    }}\r\n                    >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\r\n                    <ReferenceLine y={0} stroke=\"#000\" />\r\n                    <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" />\r\n                    <Bar dataKey=\"Fail\" fill=\"#ff6666\"/>\r\n                    <Bar dataKey=\"Success\" fill=\"#82ca9d\" />\r\n                    </BarChart>\r\n                </TreeItem>\r\n\r\n            \r\n            \r\n          </TreeView>\r\n\r\n          \r\n       \r\n        );\r\n      }\r\n    }\r\n    \r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n      saltReturns: state.saltReturns,\r\n      date: state.date\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(withStyles(styles)(LastThreeMonths));","import { withStyles } from \"@material-ui/core/styles\";\r\nimport React, { PureComponent } from 'react';\r\nimport store from '../store';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from 'axios';\r\nconst styles = theme => ({\r\n    root: {\r\n        minWidth: 345,\r\n        maxWidth: 400,\r\n        margin:theme.spacing(2.5),\r\n       \r\n      },\r\n      media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n      },\r\n      expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n          duration: theme.transitions.duration.shortest,\r\n        }),\r\n      },\r\n      expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n      },\r\n      avatar: {\r\n        backgroundColor: red[500],\r\n      },\r\n      paragraph:{\r\n          paddingLeft:theme.spacing(7.8),\r\n          wordWrap:'break-word',\r\n      },\r\n});\r\n\r\nconst tokenConfig = getState => {\r\n  // console.log(\"getstatteeeeeslatl\",getState())\r\n   // Get token from localstorage\r\n   const token = getState().auth.token;\r\n\r\n   // Headers\r\n   const config = {\r\n       headers: {\r\n          'Content-Type': 'application/json'\r\n       }\r\n   }\r\n\r\n   // If token, add to headers\r\n   if(token) {\r\n      config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n   }\r\n\r\nreturn config;\r\n}\r\nclass TeamCard extends React.Component {\r\n    constructor(props) {\r\n        super(props); \r\n        //this.handleExpandClick = this.handleExpandClick.bind(this);\r\n        this.deleteIcon = this.deleteIcon.bind(this);\r\n        this.handleClickOpen = this.handleClickOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.state={expanded:false,UpperCase:'',open:false,isDelete:false};\r\n        let strName=this.props.first_name.toUpperCase();\r\n        this.props.first_name !== ''?this.state.UpperCase=this.props.first_name.toUpperCase()[0]:this.state.UpperCase=\"\";\r\n    }\r\n    handleClose(){\r\n      this.setState((prevState) => ({open:!prevState.open}));\r\n      const { password, ReturnPassword,Role,Email,first_name,last_name } = this.state;\r\n      const body = JSON.stringify({first_name:first_name,last_name:last_name,role:Role,email:Email, password:password });\r\n      axios.delete(\"/delete/\"+this.props.id, tokenConfig(store.getState))\r\n      .then((res)=> {\r\n        this.setState({isDelete:true});});\r\n          //  this.props.arr=temp;\r\n    }\r\n    handleClickOpen(){\r\n      this.setState((prevState) => ({open:!prevState.open}));\r\n    }\r\n    deleteIcon(){\r\n\r\n    }\r\n    // handleExpandClick(){\r\n    //       this.setState((prevState) => ({expanded:!prevState.expanded}));\r\n    // }\r\n\r\n\r\n\r\n    render()\r\n    {\r\n      const colors = ['#ff0000', '#00ff00', '#0000ff'];\r\n      const random_color = colors[Math.floor(Math.random() * colors.length)];\r\n      //console.log(this.props);\r\n        return (\r\n      this.state.isDelete===false?\r\n      (<Card className={this.props.classes.root}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"recipe\" className={this.props.classes.avatar}>\r\n              {this.state.UpperCase}\r\n            </Avatar>\r\n          }\r\n      // action={\r\n      //       <IconButton aria-label=\"settings\">\r\n      //         <AccountCircleIcon />\r\n      //       </IconButton>\r\n      //     }first_name\r\n          title={this.props.first_name+' '+this.props.last_name}\r\n          subheader={this.props.role}\r\n        />\r\n      \r\n        <CardContent>\r\n          <Typography paragraph className={this.props.classes.paragraph}>\r\n          Email:{this.props.mail}\r\n          </Typography>\r\n          <Typography paragraph className={this.props.classes.paragraph}>\r\n        {/* number:0549494949*/}\r\n          </Typography>\r\n\r\n        </CardContent>\r\n\r\n        <CardActions disableSpacing>\r\n        \r\n      <IconButton \r\n      aria-label=\"share\"\r\n      variant=\"outlined\" \r\n      //color=\"primary\" \r\n      onClick={this.handleClickOpen}\r\n        //onClick={this.handleExpandClick}\r\n      color='secondary'\r\n        >\r\n            <DeleteIcon />\r\n      </IconButton>\r\n      <Dialog\r\n      open={this.state.open}\r\n      onClose={this.handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n      >\r\n\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n        Are you sure you want to delete a user from the system?\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n      <Button onClick={this.handleClickOpen} color=\"primary\">\r\n        Cancel\r\n      </Button>\r\n        <Button onClick={this.handleClose} color=\"secondary\" autoFocus>\r\n          Delete\r\n        </Button>\r\n      </DialogActions>\r\n      </Dialog>\r\n      {/*\r\n          <IconButton\r\n            className={clsx(this.props.classes.expand, {\r\n              [this.props.classes.expandOpen]: this.state.expanded,\r\n            })}\r\n            onClick={this.handleExpandClick}\r\n            aria-expanded={this.state.expanded}\r\n            aria-label=\"show more\"\r\n          >\r\n            <ExpandMoreIcon />\r\n          </IconButton>\r\n          */}\r\n        </CardActions>\r\n\r\n\r\n        {/*<Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <Typography paragraph>\r\n              Heat\r\n            </Typography>\r\n          </CardContent>\r\n        </Collapse>*/}\r\n      </Card>)\r\n:<div></div>\r\n    \r\n\r\n\r\n          );\r\n        }\r\n    \r\n}\r\n\r\nexport default withStyles(styles)(TeamCard);","\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport React, { PureComponent } from 'react';\r\nimport store from '../store';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {REGISTER_SUCCESS,REGISTER_FAIL} from '../actions/types';\r\nimport {returnErrors}  from '../actions/errorActions';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport TeamCard from './TeamCard';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { ContactsOutlined } from \"@material-ui/icons\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { teamList } from '../actions/date';\r\nimport axios from 'axios';\r\nconst styles = theme => ({\r\n    root: {\r\n      // maxWidth: 1000,\r\n      // display: 'flex',\r\n      // flexDirection: 'row',\r\n      // flexWrap:'warp',\r\n      //justifyContent:'space-around', \r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      flexFlow: 'row wrap',\r\n      maxWidth:1300,\r\n      justifyContent:'space around'\r\n\r\n      },\r\n      field:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        maxWidth:250,\r\n        justifyContent:'space around',\r\n        marginTop:theme.spacing(0),\r\n        marginLeft:theme.spacing(55.5),\r\n      },\r\n      input:{\r\n        paddingTop:theme.spacing(2),\r\n        paddingLeft:theme.spacing(-4)\r\n      },\r\n      paragraph:{\r\n          paddingLeft:theme.spacing(7.8)\r\n      },\r\n      fab:{\r\n        color:'#fff',\r\n        //cursor: 'pointer',\r\n        border:'none',\r\n        outline: 'none',\r\n        outlineOffset: 'none',\r\n        marginLeft:theme.spacing(4),\r\n        marginTop:theme.spacing(4)\r\n      },\r\n      button:{\r\n        marginTop:theme.spacing(6)\r\n      },\r\n      form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n      },\r\n      msg:{\r\n        width: '100%',\r\n        '& > * + *': {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n});\r\n\r\n const tokenConfig = getState => {\r\n    // console.log(\"getstatteeeeeslatl\",getState())\r\n     // Get token from localstorage\r\n     const token = getState().auth.token;\r\n \r\n     // Headers\r\n     const config = {\r\n         headers: {\r\n            'Content-Type': 'application/json'\r\n         }\r\n     }\r\n \r\n     // If token, add to headers\r\n     if(token) {\r\n        config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n     }\r\n \r\n  return config;\r\n }\r\nclass Team extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleExpandClick = this.handleExpandClick.bind(this);\r\n        this.ClickFab = this.ClickFab.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.signIn = this.signIn.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleClickShowPassword = this.handleClickShowPassword.bind(this);\r\n        this.handleMouseDownPassword = this.handleMouseDownPassword.bind(this);\r\n        this.handleClickShowPasswordReturn = this.handleClickShowPasswordReturn.bind(this);\r\n        this.handleMouseDownPasswordReturn = this.handleMouseDownPasswordReturn.bind(this);\r\n        this.initTeam = this.initTeam.bind(this);\r\n        //this.handleCloseAlert = this.handleCloseAlert.bind(this);\r\n        this.state=\r\n        {\r\n          expanded:false,\r\n          fab:false,\r\n          first_name:'',\r\n          last_name:'',\r\n          Role:'',\r\n          Email:'',\r\n          Password:'',\r\n          ReturnPassword:'',\r\n          showPasswordReturn:'password',\r\n          showPassword:'password',\r\n          errPassword:false,\r\n          saveCard:false,\r\n          Team:[],\r\n          counter:0,\r\n          err_first_name:false,\r\n          err_last_name:false,\r\n          err_Role:false,\r\n          err_Email:false,\r\n          err_Password:false,\r\n          no_add_card:false,\r\n          \r\n        };\r\n        this.initTeam();\r\n    }\r\n\r\n    initTeam(){\r\n      axios.get('/get_users',tokenConfig(store.getState))\r\n      .then((res) => { \r\n       \r\n        this.setState({Team:res.data});\r\n      })\r\n      .catch(err => {\r\n          console.log(err);\r\n  \r\n         });\r\n   \r\n      \r\n    }\r\n\r\n    handleClickShowPassword(){\r\n      this.setState({showPassword:'text'});\r\n    }\r\n    handleMouseDownPassword(){\r\n      this.setState({showPassword:'password'});\r\n    }\r\n    handleClickShowPasswordReturn(){\r\n      this.setState({showPasswordReturn:'text'});\r\n    }\r\n    handleMouseDownPasswordReturn(){\r\n      this.setState({showPasswordReturn:'password'});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    handleExpandClick(){\r\n          this.setState((prevState) => ({expanded:!prevState.expanded}));\r\n    }\r\n \r\n    ClickFab(){\r\n      this.setState((prevState) => ({\r\n      fab:!prevState.fab,password:'',\r\n      first_name:'',\r\n      lastName:'',\r\n      Role:'',\r\n      Email:'',\r\n      Password:'',\r\n      ReturnPassword:'',}));\r\n    \r\n    }\r\n   \r\n    signIn(event){\r\n      \r\n      event.preventDefault();\r\n      const { password, ReturnPassword,Role,Email,first_name,last_name } = this.state;\r\n      //send cardTeam to server\r\n      //console.log(\"event.preventDefault()\");\r\n      const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\r\n      const emailRegex = new RegExp(\"[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,6}\");    \r\n      let flag=true;\r\n      if((strongRegex.test(password)===false) || ( password.length>30)  ){flag=false;this.setState({err_Password:true});setTimeout(()=>{this.setState({err_Password:false});}, 10000);}\r\n      if(first_name.length>30 ){flag=false;this.setState({err_first_name:true});setTimeout(()=>{this.setState({err_first_name:false});}, 6000);}\r\n      if(last_name.length>30 ){flag=false;this.setState({err_last_name:true});setTimeout(()=>{this.setState({err_last_name:false});}, 6000);}\r\n      if(Role.length>30 ){flag=false;this.setState({err_Role:true});setTimeout(()=>{this.setState({err_Role:false});}, 6000);}\r\n      if((Email.length>50) || (emailRegex.test(this.state.Email.toUpperCase())===false)){flag=false;this.setState({err_Email:true});setTimeout(()=>{this.setState({err_Email:false});}, 6000);}\r\n      if (password===ReturnPassword){}\r\n      else\r\n      {\r\n        this.setState({errPassword:true});\r\n        setTimeout(()=>{this.setState({errPassword:false});}, 6000);\r\n      }\r\n\r\n      if((password===ReturnPassword) && (flag===true)){\r\n\r\n        this.setState((prevState) => ({fab:false}));\r\n         \r\n\r\n            const body = JSON.stringify({first_name:first_name,last_name:last_name,role:Role,email:Email, password:password });\r\n            //console.log(body,'body')\r\n            axios.post(\"/register\", body, tokenConfig(store.getState))\r\n          .then(res => \r\n            {\r\n              this.state.Team.push({first_name:first_name,mail:Email,role:Role,last_name:last_name});\r\n              this.setState({saveCard:true});\r\n              setTimeout(()=>{this.setState({saveCard:false});}, 4000);\r\n            }\r\n          )\r\n            .catch(err => {\r\n            console.log(err)\r\n            this.setState({no_add_card:true});\r\n            setTimeout(()=>{this.setState({no_add_card:false});}, 4000);\r\n            })\r\n\r\n            \r\n\r\n            this.setState({expanded:false,\r\n              fab:false,\r\n              first_name:'',\r\n              last_name:'',\r\n              Role:'',\r\n              Email:'',\r\n              Password:'',\r\n              ReturnPassword:'',\r\n              showPasswordReturn:'password',\r\n              showPassword:'password',\r\n              errPassword:false,\r\n              UnsecuredPassword:false,\r\n            });\r\n             \r\n           \r\n          \r\n          \r\n            setTimeout(()=>{this.initTeam();}, 500);\r\n         \r\n      }\r\n   \r\n      \r\n   \r\n    }\r\n    // shouldComponentUpdate(nextState) {\r\n    //   console.log(nextState,\"nextState\")\r\n    //   if(this.state.Password === nextState.ReturnPassword || nextState.Password === this.state.ReturnPassword){\r\n    //     console.log(\"7878787\")\r\n    //     //this.setState((prevState) => ({fab:false}));\r\n    //   }UnsecuredPassword:false\r\n    // }\r\n    handleInputChange(e) {\r\n  \r\n      this.setState({ [e.target.name] : e.target.value});\r\n      // console.log(this.state);\r\n    }\r\n    handleClose (event, reason) \r\n    {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        \r\n        this.setState({errPassword:false,saveCard:false});\r\n    }\r\n    // handleCloseAlert(event){\r\n      \r\n    //   this.setState({ [event] : false});\r\n    //   console.log(this.state[event],)\r\n    // }\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //   console.log(nextState,\"nextState\");\r\n    //  }\r\n    // componentWillReceiveProps(){\r\n    //   this.initTeam();\r\n    // }\r\n    // shouldComponentUpdate(){\r\n    //   this.initTeam();\r\n    // }\r\n    // componentWillUpdate(){\r\n    //  console.log(this.state.counter,'this.state.counter');\r\n    //   if(this.state.counter<=1)\r\n    //   { \r\n        \r\n    //     axios.get('/get_users',tokenConfig(store.getState))\r\n    //   .then((res) => { \r\n       \r\n    //     this.setState({Team:res.data});\r\n    //   })\r\n    //   .catch(err => {\r\n    //       console.log(err);\r\n  \r\n    //      });\r\n    //      this.setState((prevState) => ({counter:2}));\r\n    // }}\r\n     \r\n    render()\r\n   \r\n    {\r\n      \r\n      if(this.state.fab === false){\r\n\r\n          return(\r\n\r\n            <div>\r\n              \r\n              \r\n              <div className={this.props.classes.msg}>\r\n                <Snackbar open={this.state.saveCard} autoHideDuration={6000} onClose={this.handleClose}>\r\n                    <Alert onClose={this.handleClose} severity=\"success\">\r\n                    The system added  <strong>a new staff member   </strong>\r\n                    </Alert>\r\n                    </Snackbar>\r\n                </div>\r\n\r\n                <div className={this.props.classes.msg}>\r\n                <Snackbar open={this.state.no_add_card} autoHideDuration={6000} onClose={this.handleClose}>\r\n                    <Alert onClose={this.handleClose} severity=\"error\">\r\n                    The system   <strong> not added a new staff member   </strong>\r\n                    </Alert>\r\n                    </Snackbar>\r\n                </div>\r\n               \r\n                <div className={this.props.classes.root}> \r\n                {\r\n                \r\n                  this.state.Team.map((item,arr)=>{\r\n                  if(this.state.Team.length !== 0){ \r\n                    \r\n                    return <TeamCard  arr={arr} first_name={item.first_name}  last_name={item.last_name} role={item.role} mail={item.email} id={item._id}/>\r\n                  }\r\n                  \r\n                })\r\n              }\r\n              </div>\r\n              <Fab color=\"primary\" aria-label=\"add\" className={this.props.classes.fab} onClick={this.ClickFab}>\r\n              <AddIcon />\r\n            </Fab>\r\n           </div>\r\n          );\r\n\r\n      }\r\n\r\n      else\r\n      {\r\n       \r\n        return(\r\n          <div className={this.props.classes.field}>\r\n          <form className={this.props.classes.form} onSubmit={this.signIn} >\r\n            <div className={this.props.classes.input}>\r\n  \r\n              <TextField\r\n                className={this.props.classes.margin}\r\n                id=\"input-with-icon-textfield\"\r\n                label=\"First Name\"\r\n                required\r\n                fullWidth\r\n                name='first_name'\r\n                value={this.state.first_name}\r\n                onChange={this.handleInputChange}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <AccountCircle />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n  \r\n            </div>\r\n  \r\n            {\r\n              this.state.err_first_name===true?\r\n              (   <div className={this.props.classes.msg}>\r\n                \r\n                  <Alert onClose={() =>{this.setState({err_first_name:false})}} severity=\"error\">\r\n                  The first name must be less than  <strong>30 characters  </strong>\r\n                  </Alert>\r\n                  </div>\r\n              )\r\n              :<div></div>\r\n           }\r\n            <div className={this.props.classes.input}>\r\n  \r\n            <TextField\r\n              className={this.props.classes.margin}\r\n              id=\"input-with-icon-textfield\"\r\n              label=\"Last Name\"\r\n              fullWidth\r\n              name='last_name'\r\n             \r\n              value={this.state.last_name}\r\n              onChange={this.handleInputChange}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <AccountCircle />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n\r\n          </div>\r\n\r\n\r\n          {\r\n            this.state.err_last_name===true?\r\n            (   <div className={this.props.classes.msg}>\r\n              \r\n                <Alert onClose={() =>{this.setState({err_last_name:false})}} severity=\"error\">\r\n                The last name must be less than  <strong>30 characters  </strong>\r\n                </Alert>\r\n                </div>\r\n            )\r\n            :<div></div>\r\n         }\r\n            <div className={this.props.classes.input}>\r\n  \r\n              <TextField\r\n                className={this.props.classes.margin}\r\n                id=\"input-with-icon-textfield\"\r\n                label=\"Email\"\r\n                required\r\n                fullWidth\r\n                name='Email'\r\n                value={this.state.Email}\r\n                onChange={this.handleInputChange}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <AccountCircle />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n  \r\n            </div>\r\n  \r\n\r\n            {\r\n              this.state.err_Email===true?\r\n              (   <div className={this.props.classes.msg}>\r\n                \r\n                  <Alert onClose={() =>{this.setState({err_Email:false})}} severity=\"error\">\r\n                   <strong> Invalid mail  </strong>\r\n                  </Alert>\r\n                  </div>\r\n              )\r\n              :<div></div>\r\n           }\r\n  \r\n            <div className={this.props.classes.input}>\r\n  \r\n              <TextField\r\n                className={this.props.classes.margin}\r\n                id=\"input-with-icon-textfield\"\r\n                label=\"Role\"\r\n                name='Role'\r\n                fullWidth\r\n                value={this.state.Role}\r\n                onChange={this.handleInputChange}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <AccountCircle />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                \r\n              />\r\n  \r\n            </div>\r\n\r\n            {\r\n              this.state.err_Role===true?\r\n              (   <div className={this.props.classes.msg}>\r\n                \r\n                  <Alert onClose={() =>{this.setState({err_Role:false})}} severity=\"error\">\r\n                  The role name must be less than  <strong>30 characters  </strong>\r\n                  </Alert>\r\n                  </div>\r\n              )\r\n              :<div></div>\r\n           }\r\n            <div className={this.props.classes.input}>\r\n  \r\n              <TextField\r\n                className={this.props.classes.margin}\r\n                id=\"input-with-icon-textfield\"\r\n                label=\"password\"\r\n                //variant=\"outlined\"\r\n                //margin=\"normal\"\r\n                required\r\n                fullWidth\r\n               \r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type={this.state.showPassword==='text'  ? 'text' : 'password'}\r\n                value={this.state.password}\r\n                onChange={this.handleInputChange}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <AccountCircle />\r\n                    </InputAdornment>\r\n                  ),\r\n                  endAdornment:(\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={this.handleClickShowPassword}\r\n                        onMouseDown={this.handleMouseDownPassword}\r\n                      >\r\n                        {this.state.showPassword==='text' ? <Visibility /> : <VisibilityOff />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n               \r\n              />\r\n           \r\n\r\n            </div>\r\n            {\r\n              this.state.err_Password===true?\r\n              (   <div className={this.props.classes.msg}>\r\n                \r\n                  <Alert onClose={() =>{this.setState({err_Password:false})}} severity=\"error\">\r\n                  The password <strong>must </strong>  be at least 8 characters long, and include uppercase and lowercase letters, and special characters\r\n                       <strong>{\"{ !, @, #, \\, $,%, \\, ^ &, \\, * }\"}  </strong>\r\n                  </Alert>\r\n                  </div>\r\n              )\r\n              :<div></div>\r\n           }\r\n            \r\n            <div className={this.props.classes.input}>\r\n  \r\n            <TextField\r\n              className={this.props.classes.margin}\r\n              id=\"input-with-icon-textfield\"\r\n              label=\"password\"\r\n              //variant=\"outlined\"\r\n              //margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"ReturnPassword\"\r\n              label=\"Repeat Password\"\r\n              type={this.state.showPasswordReturn==='text' ? 'text' : 'password'}\r\n              value={this.state.ReturnPassword}\r\n                onChange={this.handleInputChange}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <AccountCircle />\r\n                  </InputAdornment>\r\n                ),\r\n                endAdornment:(\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={this.handleClickShowPasswordReturn}\r\n                      onMouseDown={this.handleMouseDownPasswordReturn}\r\n                    >\r\n                      {this.state.showPasswordReturn==='text' ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n             \r\n            />\r\n  \r\n          </div>\r\n\r\n      \r\n\r\n          {\r\n            this.state.errPassword===true?\r\n            (   <div className={this.props.classes.msg}>\r\n              \r\n                <Alert onClose={() =>{this.setState({errPassword:false})}} severity=\"error\">\r\n                 Passwords  <strong>unequal   </strong>\r\n                </Alert>\r\n                </div>\r\n            )\r\n            :<div></div>\r\n         }\r\n      \r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              size=\"small\"\r\n              fullWidth\r\n              className={this.props.classes.button}\r\n             // onClick={this.ClickFab}\r\n              startIcon={<SaveIcon />}\r\n            >\r\n              Save\r\n              </Button>\r\n             \r\n          </form> \r\n            \r\n          </div>\r\n        )\r\n      }\r\n   \r\n    \r\n    }\r\n  }\r\n\r\nexport default withStyles(styles)(Team);","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nimport Graph from './Component/Graph';\r\nimport SearchTime from './Component/SearchTime';\r\nimport Table from './Component/Table';\r\nimport MinionCard from './Component/MinionCard';\r\nimport { saltReturns } from './actions/date';\r\n\r\nimport store from './store';\r\nimport { Logout } from './Component/auth/Logout';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SimCardIcon from '@material-ui/icons/SimCard';\r\n\r\nimport SaltStack from './Component/SaltStack';\r\nimport SearchTimeGraph from './Component/SearchTimeGraph';\r\nimport CurrentMonth from './Component/CurrentMonth';\r\n\r\nimport CurrentYear from './Component/CurrentYear';\r\nimport LastThreeMonths from './Component/LastThreeMonths';\r\nimport Team from './Component/Team';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nimport {\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListSubheader\r\n}from '@material-ui/core/';\r\n\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport { listMinions } from './actions/date';\r\n //while(store.getState().saltReturns.saltReturns===null);\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    paddingRight: theme.spacing(3.5),\r\n    paddingTop:theme.spacing(2),\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  table: {\r\n    // marginLeft:theme.spacing(0),\r\n    // marginTop:theme.spacing(4),\r\n    paddingRight: 3.5,\r\n    paddingTop:1,\r\n    paddingLeft:1,\r\n    paddingBottom: 3,\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  \r\n  },\r\n  fixedHeight: {\r\n    height: 363,\r\n  },\r\n  fixedHeightFirst:{\r\n    marginTop:theme.spacing(2),\r\n    height: 235,\r\n  },\r\n  fixedHeightTow:{\r\n   // marginTop:theme.spacing(2),\r\n    height: 113,\r\n  },\r\n  Logout:{\r\n   \r\n  },\r\n  AccountCircleIcon:{\r\n  \r\n  },\r\n  NotificationsIcon:{\r\n    display:'flex',\r\n    justifyContent:'space-between',\r\n    width:43\r\n  }\r\n});\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      //console.log(store.getState(),\"store from dashboard 1\");\r\n      //store.dispatch(saltReturns());\r\n  \r\n     // store.dispatch(listMinions());\r\n      //console.log(store.getState(),\"store from dashboard 2\");\r\n      this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\r\n      this.handleDrawerClose = this.handleDrawerClose.bind(this);\r\n      this.SelectMenu = this.SelectMenu.bind(this);\r\n      this.state={open:true,menu:\"Dashboard\"};\r\n      //console.log(store.getState(),\"store.getState()\")\r\n  }\r\n  \r\n \r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({open:true});\r\n  };\r\n  handleDrawerClose = () => {\r\n    this.setState({open:false});\r\n  };\r\n \r\n  SelectMenu = (str) => {\r\n    this.setState({menu:str});\r\n  };\r\n  render(){  \r\n    const fixedHeightPaper = clsx(this.props.classes.paper, this.props.classes.fixedHeight);\r\n    const fixedHeightPaperFirst = clsx(this.props.classes.paper, this.props.classes.fixedHeightFirst);\r\n    const fixedHeightPaperTow = clsx(this.props.classes.paper, this.props.classes.fixedHeightTow);\r\n    \r\n    if(this.state.menu==='Dashboard')\r\n    {\r\n      return (\r\n        <div className={this.props.classes.root}>\r\n    \r\n          <CssBaseline />\r\n          <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n    \r\n            <Toolbar className={this.props.classes.toolbar}>\r\n          \r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={this.handleDrawerOpen}\r\n                className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n              >\r\n    \r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n                Dashboard\r\n              </Typography>\r\n              \r\n             \r\n\r\n          \r\n\r\n                <Logout />\r\n             \r\n            \r\n            \r\n         \r\n    \r\n            </Toolbar>\r\n          </AppBar>\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            classes={{\r\n              paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n            }}\r\n            open={this.state.open}\r\n          >\r\n            <div className={this.props.classes.toolbarIcon}>\r\n              <IconButton onClick={this.handleDrawerClose}>\r\n                <ChevronLeftIcon />\r\n              </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n    \r\n            <ListItem button\r\n            onClick={()=>{this.SelectMenu('Dashboard')}}\r\n            >\r\n            <ListItemIcon>\r\n              <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dashboard\" />\r\n          </ListItem>\r\n          <ListItem button\r\n          onClick={()=>{this.SelectMenu('Commands')}}\r\n          >\r\n            <ListItemIcon>\r\n            <SimCardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Commands\" />\r\n          </ListItem>\r\n          <ListItem button\r\n          onClick={()=>{this.SelectMenu('Team')}}\r\n          >\r\n            <ListItemIcon>\r\n              <PeopleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Team\" />\r\n          </ListItem>\r\n         \r\n            </List>\r\n            <Divider />\r\n            <ListSubheader inset>Saved reports</ListSubheader>\r\n            <List>\r\n            <ListItem button   onClick={()=>{this.SelectMenu('Current month')}}>\r\n            <ListItemIcon>\r\n              <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Current month\" />\r\n          </ListItem>\r\n          <ListItem button   onClick={()=>{this.SelectMenu('Last three months')}}>\r\n            <ListItemIcon>\r\n              <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Last three months\" />\r\n          </ListItem>\r\n          <ListItem button   onClick={()=>{this.SelectMenu('Current year')}}>\r\n            <ListItemIcon>\r\n              <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Current year\" />\r\n          </ListItem>\r\n            \r\n            \r\n            \r\n            </List>\r\n          </Drawer>\r\n          <main className={this.props.classes.content}>\r\n            <div className={this.props.classes.appBarSpacer} />\r\n            <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n              <Grid container spacing={3}>\r\n                {/* Graph */}\r\n                <Grid item xs={12} md={8} lg={9}>\r\n                  <Paper className={fixedHeightPaper}>\r\n                    <Graph />\r\n                  </Paper>\r\n                </Grid>\r\n                {/* Recent SearchTime */}\r\n                <Grid item xs={12} md={4} lg={3}>\r\n                <Paper className={fixedHeightPaperTow}>\r\n                    < SearchTimeGraph />\r\n                  </Paper>\r\n                  <Paper className={fixedHeightPaperFirst}>\r\n                    <SearchTime />\r\n                  </Paper>\r\n                  \r\n                </Grid>\r\n                {/* Recent Table */}\r\n                <Grid item xs={20}>\r\n                  <div className={this.props.classes.paper}>\r\n                    <Table />\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n       \r\n    \r\n          </main>\r\n    \r\n        </div>\r\n      );\r\n    }\r\n      else if (this.state.menu==='Commands'){\r\n\r\n        return (\r\n          <div className={this.props.classes.root}>\r\n      \r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n      \r\n            <Toolbar className={this.props.classes.toolbar}>\r\n          \r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={this.handleDrawerOpen}\r\n              className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n            >\r\n  \r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n            Commands\r\n            </Typography>\r\n            \r\n           \r\n\r\n           \r\n\r\n              <Logout />\r\n           \r\n          \r\n          \r\n       \r\n  \r\n          </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n              variant=\"permanent\"\r\n              classes={{\r\n                paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n              }}\r\n              open={this.state.open}\r\n            >\r\n              <div className={this.props.classes.toolbarIcon}>\r\n                <IconButton onClick={this.handleDrawerClose}>\r\n                  <ChevronLeftIcon />\r\n                </IconButton>\r\n              </div>\r\n              <Divider />\r\n              <List>\r\n      \r\n              <ListItem button\r\n              onClick={()=>{this.SelectMenu('Dashboard')}}\r\n              >\r\n              <ListItemIcon>\r\n                <DashboardIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Dashboard\" />\r\n            </ListItem>\r\n            <ListItem button\r\n            onClick={()=>{this.SelectMenu('Commands')}}\r\n            >\r\n              <ListItemIcon>\r\n                <SimCardIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Commands\" />\r\n            </ListItem>\r\n            <ListItem button\r\n            onClick={()=>{this.SelectMenu('Team')}}\r\n            >\r\n              <ListItemIcon>\r\n                <PeopleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Team\" />\r\n            </ListItem>\r\n           \r\n              </List>\r\n              <Divider />\r\n\r\n              <ListSubheader inset>Saved reports</ListSubheader>\r\n\r\n              <List>\r\n              <ListItem button   onClick={()=>{this.SelectMenu('Current month')}}>\r\n              <ListItemIcon>\r\n                <AssignmentIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Current month\" />\r\n            </ListItem>\r\n            <ListItem button   onClick={()=>{this.SelectMenu('Last three months')}}>\r\n              <ListItemIcon>\r\n                <AssignmentIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Last three months\" />\r\n            </ListItem>\r\n            <ListItem button   onClick={()=>{this.SelectMenu('Current year')}}>\r\n              <ListItemIcon>\r\n                <AssignmentIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Current year\" />\r\n            </ListItem>\r\n              \r\n              \r\n              \r\n              </List>\r\n\r\n\r\n\r\n\r\n\r\n            </Drawer>\r\n\r\n            <main className={this.props.classes.content}>\r\n              <div className={this.props.classes.appBarSpacer} />\r\n              <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n\r\n              <Grid item  xs >\r\n              <div className={this.props.classes.table}>\r\n                  <SaltStack/>\r\n              </div>\r\n   \r\n                </Grid>\r\n\r\n              </Container>\r\n            </main>\r\n      \r\n          </div>\r\n        );}\r\n\r\n\r\n\r\n        else if (this.state.menu==='Current month'){\r\n\r\n          return (\r\n            <div className={this.props.classes.root}>\r\n        \r\n              <CssBaseline />\r\n              <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n        \r\n              <Toolbar className={this.props.classes.toolbar}>\r\n            \r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={this.handleDrawerOpen}\r\n                className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n              >\r\n    \r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n              Current month\r\n              </Typography>\r\n              \r\n             \r\n  \r\n  \r\n                <Logout />\r\n             \r\n            \r\n            \r\n         \r\n    \r\n            </Toolbar>\r\n              </AppBar>\r\n              <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                  paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n                }}\r\n                open={this.state.open}\r\n              >\r\n                <div className={this.props.classes.toolbarIcon}>\r\n                  <IconButton onClick={this.handleDrawerClose}>\r\n                    <ChevronLeftIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n        \r\n                <ListItem button\r\n                onClick={()=>{this.SelectMenu('Dashboard')}}\r\n                >\r\n                <ListItemIcon>\r\n                  <DashboardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Dashboard\" />\r\n              </ListItem>\r\n              <ListItem button\r\n              onClick={()=>{this.SelectMenu('Commands')}}\r\n              >\r\n                <ListItemIcon>\r\n                  <SimCardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Commands\" />\r\n              </ListItem>\r\n              <ListItem button\r\n              onClick={()=>{this.SelectMenu('Team')}}\r\n              >\r\n                <ListItemIcon>\r\n                  <PeopleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Team\" />\r\n              </ListItem>\r\n              \r\n                </List>\r\n                <Divider />\r\n  \r\n                <ListSubheader inset>Saved reports</ListSubheader>\r\n  \r\n                <List>\r\n                <ListItem button   onClick={()=>{this.SelectMenu('Current month')}}>\r\n                <ListItemIcon>\r\n                  <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Current month\" />\r\n              </ListItem>\r\n              <ListItem button   onClick={()=>{this.SelectMenu('Last three months')}}>\r\n                <ListItemIcon>\r\n                  <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Last three months\" />\r\n              </ListItem>\r\n              <ListItem button   onClick={()=>{this.SelectMenu('Current year')}}>\r\n                <ListItemIcon>\r\n                  <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Current year\" />\r\n              </ListItem>\r\n                \r\n                \r\n                \r\n                </List>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n              </Drawer>\r\n  \r\n              <main className={this.props.classes.content}>\r\n                <div className={this.props.classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n  \r\n                <Grid item  xs >\r\n                <div className={this.props.classes.table}>\r\n                    <CurrentMonth/>\r\n                </div>\r\n     \r\n                  </Grid>\r\n  \r\n                </Container>\r\n              </main>\r\n        \r\n            </div>\r\n          );\r\n              }\r\n\r\n              \r\n        else if (this.state.menu==='Current year'){\r\n\r\n          return (\r\n            <div className={this.props.classes.root}>\r\n        \r\n              <CssBaseline />\r\n              <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n        \r\n              <Toolbar className={this.props.classes.toolbar}>\r\n            \r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={this.handleDrawerOpen}\r\n                className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n              >\r\n    \r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n              Current year\r\n              </Typography>\r\n              \r\n             \r\n  \r\n          \r\n  \r\n                <Logout />\r\n             \r\n            \r\n            \r\n         \r\n    \r\n            </Toolbar>\r\n              </AppBar>\r\n              <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                  paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n                }}\r\n                open={this.state.open}\r\n              >\r\n                <div className={this.props.classes.toolbarIcon}>\r\n                  <IconButton onClick={this.handleDrawerClose}>\r\n                    <ChevronLeftIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n        \r\n                <ListItem button\r\n                onClick={()=>{this.SelectMenu('Dashboard')}}\r\n                >\r\n                <ListItemIcon>\r\n                  <DashboardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Dashboard\" />\r\n              </ListItem>\r\n              <ListItem button\r\n              onClick={()=>{this.SelectMenu('Commands')}}\r\n              >\r\n                <ListItemIcon>\r\n                  <SimCardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Commands\" />\r\n              </ListItem>\r\n              <ListItem button\r\n              onClick={()=>{this.SelectMenu('Team')}}\r\n              >\r\n                <ListItemIcon>\r\n                  <PeopleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Team\" />\r\n              </ListItem>\r\n             \r\n                </List>\r\n                <Divider />\r\n  \r\n                <ListSubheader inset>Saved reports</ListSubheader>\r\n  \r\n                <List>\r\n                <ListItem button   onClick={()=>{this.SelectMenu('Current month')}}>\r\n                <ListItemIcon>\r\n                  <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Current month\" />\r\n              </ListItem>\r\n              <ListItem button   onClick={()=>{this.SelectMenu('Last three months')}}>\r\n                <ListItemIcon>\r\n                  <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Last three months\" />\r\n              </ListItem>\r\n              <ListItem button   onClick={()=>{this.SelectMenu('Current year')}}>\r\n                <ListItemIcon>\r\n                  <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Current year\" />\r\n              </ListItem>\r\n                \r\n                \r\n                \r\n                </List>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n              </Drawer>\r\n  \r\n              <main className={this.props.classes.content}>\r\n                <div className={this.props.classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n  \r\n                <Grid item  xs >\r\n                <div className={this.props.classes.table}>\r\n                    <CurrentYear/>\r\n                </div>\r\n     \r\n                  </Grid>\r\n  \r\n                </Container>\r\n              </main>\r\n        \r\n            </div>\r\n          );\r\n              }\r\n\r\n             \r\n              \r\n\r\n              else if (this.state.menu==='Last three months'){\r\n\r\n                return (\r\n                  <div className={this.props.classes.root}>\r\n              \r\n                    <CssBaseline />\r\n                    <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n              \r\n                    <Toolbar className={this.props.classes.toolbar}>\r\n                  \r\n                    <IconButton\r\n                      edge=\"start\"\r\n                      color=\"inherit\"\r\n                      aria-label=\"open drawer\"\r\n                      onClick={this.handleDrawerOpen}\r\n                      className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n                    >\r\n          \r\n                      <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n                    Last three months\r\n                    </Typography>\r\n                    \r\n                   \r\n        \r\n                 \r\n        \r\n                      <Logout />\r\n                   \r\n                  \r\n                  \r\n               \r\n          \r\n                  </Toolbar>\r\n                    </AppBar>\r\n                    <Drawer\r\n                      variant=\"permanent\"\r\n                      classes={{\r\n                        paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n                      }}\r\n                      open={this.state.open}\r\n                    >\r\n                      <div className={this.props.classes.toolbarIcon}>\r\n                        <IconButton onClick={this.handleDrawerClose}>\r\n                          <ChevronLeftIcon />\r\n                        </IconButton>\r\n                      </div>\r\n                      <Divider />\r\n                      <List>\r\n              \r\n                      <ListItem button\r\n                      onClick={()=>{this.SelectMenu('Dashboard')}}\r\n                      >\r\n                      <ListItemIcon>\r\n                        <DashboardIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Dashboard\" />\r\n                    </ListItem>\r\n                    <ListItem button\r\n                    onClick={()=>{this.SelectMenu('Commands')}}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <SimCardIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Commands\" />\r\n                    </ListItem>\r\n                    <ListItem button\r\n                    onClick={()=>{this.SelectMenu('Team')}}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <PeopleIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Team\" />\r\n                    </ListItem>\r\n                  \r\n                  \r\n                      </List>\r\n                      <Divider />\r\n        \r\n                      <ListSubheader inset>Saved reports</ListSubheader>\r\n        \r\n                      <List>\r\n                      <ListItem button   onClick={()=>{this.SelectMenu('Current month')}}>\r\n                      <ListItemIcon>\r\n                        <AssignmentIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Current month\" />\r\n                    </ListItem>\r\n                    <ListItem button   onClick={()=>{this.SelectMenu('Last three months')}}>\r\n                      <ListItemIcon>\r\n                        <AssignmentIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Last three months\" />\r\n                    </ListItem>\r\n                    <ListItem button   onClick={()=>{this.SelectMenu('Current year')}}>\r\n                      <ListItemIcon>\r\n                        <AssignmentIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Current year\" />\r\n                    </ListItem>\r\n                      \r\n                      \r\n                      \r\n                      </List>\r\n        \r\n        \r\n        \r\n        \r\n        \r\n                    </Drawer>\r\n        \r\n                    <main className={this.props.classes.content}>\r\n                      <div className={this.props.classes.appBarSpacer} />\r\n                      <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n        \r\n                      <Grid item  xs >\r\n                      <div className={this.props.classes.table}>\r\n                          <LastThreeMonths/>\r\n                      </div>\r\n           \r\n                        </Grid>\r\n        \r\n                      </Container>\r\n                    </main>\r\n              \r\n                  </div>\r\n                );\r\n                    }\r\n                    \r\n              else if (this.state.menu==='Team'){\r\n\r\n                return (\r\n                  <div className={this.props.classes.root}>\r\n              \r\n                    <CssBaseline />\r\n                    <AppBar position=\"absolute\" className={clsx(this.props.classes.appBar, this.state.open && this.props.classes.appBarShift)}>\r\n              \r\n                    <Toolbar className={this.props.classes.toolbar}>\r\n                  \r\n                    <IconButton\r\n                      edge=\"start\"\r\n                      color=\"inherit\"\r\n                      aria-label=\"open drawer\"\r\n                      onClick={this.handleDrawerOpen}\r\n                      className={clsx(this.props.classes.menuButton, this.state.open && this.props.classes.menuButtonHidden)}\r\n                    >\r\n          \r\n                      <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n                    Team\r\n                    </Typography>\r\n                    \r\n                   \r\n        \r\n                     \r\n        \r\n                      <Logout />\r\n                   \r\n                  \r\n                  \r\n               \r\n          \r\n                  </Toolbar>\r\n                    </AppBar>\r\n                    <Drawer\r\n                      variant=\"permanent\"\r\n                      classes={{\r\n                        paper: clsx(this.props.classes.drawerPaper, !this.state.open && this.props.classes.drawerPaperClose),\r\n                      }}\r\n                      open={this.state.open}\r\n                    >\r\n                      <div className={this.props.classes.toolbarIcon}>\r\n                        <IconButton onClick={this.handleDrawerClose}>\r\n                          <ChevronLeftIcon />\r\n                        </IconButton>\r\n                      </div>\r\n                      <Divider />\r\n                      <List>\r\n              \r\n                      <ListItem button\r\n                      onClick={()=>{this.SelectMenu('Dashboard')}}\r\n                      >\r\n                      <ListItemIcon>\r\n                        <DashboardIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Dashboard\" />\r\n                    </ListItem>\r\n                    <ListItem button\r\n                    onClick={()=>{this.SelectMenu('Commands')}}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <SimCardIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Commands\" />\r\n                    </ListItem>\r\n                    <ListItem button\r\n                    onClick={()=>{this.SelectMenu('Team')}}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <PeopleIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Team\" />\r\n                    </ListItem>\r\n                   \r\n                      </List>\r\n                      <Divider />\r\n        \r\n                      <ListSubheader inset>Saved reports</ListSubheader>\r\n        \r\n                      <List>\r\n                      <ListItem button   onClick={()=>{this.SelectMenu('Current month')}}>\r\n                      <ListItemIcon>\r\n                        <AssignmentIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Current month\" />\r\n                    </ListItem>\r\n                    <ListItem button   onClick={()=>{this.SelectMenu('Last three months')}}>\r\n                      <ListItemIcon>\r\n                        <AssignmentIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Last three months\" />\r\n                    </ListItem>\r\n                    <ListItem button   onClick={()=>{this.SelectMenu('Current year')}}>\r\n                      <ListItemIcon>\r\n                        <AssignmentIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Current year\" />\r\n                    </ListItem>\r\n                      \r\n                      \r\n                      \r\n                      </List>\r\n        \r\n        \r\n        \r\n        \r\n        \r\n                    </Drawer>\r\n        \r\n                    <main className={this.props.classes.content}>\r\n                      <div className={this.props.classes.appBarSpacer} />\r\n                      <Container maxWidth=\"lg\" className={this.props.classes.container}>\r\n        \r\n                      <Grid item  xs >\r\n                      <div className={this.props.classes.table}>\r\n                          <Team/>\r\n                      </div>\r\n           \r\n                        </Grid>\r\n        \r\n                      </Container>\r\n                    </main>\r\n              \r\n                  </div>\r\n                );\r\n                    }\r\n              \r\n              \r\n}\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Dashboard);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass ForgotPassword extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.resetPass = this.resetPass.bind(this);\r\n    this.state = {\r\n      email: { value: null, error: false, helperText: null },\r\n      msg: null\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    reset_password: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n  \r\n\r\n  resetPass(event){\r\n    event.preventDefault();\r\n    if (this.emailInput.value === \"\") {\r\n      this.setState({\r\n        email: {\r\n          value: this.emailInput.value,\r\n          error: true,\r\n          helperText: \"Your email must be specified.\"\r\n        }\r\n      });\r\n      this.emailInput.focus();\r\n    }\r\n    else{\r\n    \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const email = this.emailInput.value\r\n        // Request body\r\n        const body = JSON.stringify({ email });\r\n    \r\n        axios.post('/forgot_password', body, config)\r\n        .then(res =>{\r\n            this.setState({ msg: res.message })\r\n            }\r\n          \r\n        )\r\n        .catch(err => {\r\n            this.setState({ msg: err.message })\r\n      \r\n        })\r\n        \r\n     }\r\n    \r\n    \r\n    }\r\n\r\n\r\n  render(){\r\n    const { classes } = this.props;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n             Enter Your Email Address\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={this.resetPass} >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              required\r\n              inputRef={input => (this.emailInput = input)}\r\n              error={this.state.email.error}\r\n              helperText={this.state.email.helperText}\r\n            />\r\n       <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n             Reset Password\r\n            </Button>\r\n\r\n            {this.state.msg  ? (\r\n            <Alert severity=\"error\">{this.state.msg}</Alert>\r\n              ) : (\r\n              null\r\n              )}\r\n             <Grid item xs>\r\n                <Link onClick={this.props.handler} variant=\"body2\">\r\n                  Back to login\r\n                </Link>\r\n              </Grid>\r\n          </form>\r\n        </div>\r\n       \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(\r\n)(withStyles(styles)(ForgotPassword))","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass ChangePasswordForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updatePass = this.updatePass.bind(this);\r\n    this.state = {\r\n      email: { value: null, error: false, helperText: null },\r\n      old_password1: { value: null, error: false, helperText: null },\r\n      old_password2: { value: null, error: false, helperText: null },\r\n      new_password: { value: null, error: false, helperText: null },\r\n      msg: null\r\n    };\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error } = this.props;\r\n    if (error !== prevProps.error) {\r\n      // Check for register error\r\n      if (error.id === 'Weak Password') {\r\n        this.setState({ msg: error.msg.msg });\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  updatePass(event){\r\n    event.preventDefault();\r\n    if (this.emailInput.value === \"\") {\r\n      this.setState({\r\n        email: {\r\n          value: this.emailInput.value,\r\n          error: true,\r\n          helperText: \"Your email must be specified.\"\r\n        }\r\n      });\r\n      this.emailInput.focus();\r\n    }\r\n    else{\r\n    \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n         const user = {\r\n              email: this.emailInput.value,\r\n              old_password1: this.old_password1.value,\r\n              old_password2: this.old_password2.value,\r\n              new_password: this.new_password.value,\r\n\r\n            };\r\n\r\n\r\n        // Request body\r\n        const body = JSON.stringify({ user });\r\n    \r\n        axios.post('/forgot_password', body, config)\r\n        .then(res =>{\r\n            this.setState({ msg: res.message })\r\n            }\r\n          \r\n        )\r\n        .catch(err => {\r\n            this.setState({ msg: err.message })\r\n      \r\n        })\r\n        \r\n     }\r\n  }\r\n\r\n\r\n  render(){\r\n    const { classes } = this.props;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Update Password\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={this.signIn} >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              required\r\n              inputRef={input => (this.emailInput = input)}\r\n              error={this.state.email.error}\r\n              helperText={this.state.email.helperText}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password1\"\r\n              label=\"Password1\"\r\n              type=\"password1\"\r\n              id=\"password1\"\r\n              autoComplete=\"current-password\"\r\n              inputRef={input => (this.passwordInput = input)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password2\"\r\n              label=\"Password2\"\r\n              type=\"password2\"\r\n              id=\"password2\"\r\n              autoComplete=\"current-password\"\r\n              inputRef={input => (this.passwordInput = input)}\r\n            />\r\n           \r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Update Password\r\n            </Button>\r\n\r\n            {this.state.msg  ? (\r\n            <Alert severity=\"error\">{this.state.msg}</Alert>\r\n              ) : (\r\n              null\r\n              )}\r\n              \r\n              <Grid item xs>\r\n                <Link onClick={this.props.handler} variant=\"body2\">\r\n                  Back to login\r\n                </Link>\r\n              </Grid>\r\n            \r\n          </form>\r\n        </div>\r\n        \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n)(withStyles(styles)(ChangePasswordForm))","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { login } from '../../actions/authActions';\r\nimport { clearErrors } from '../../actions/errorActions';\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { StoreTwoTone } from '@material-ui/icons';\r\nimport store from '../../store';\r\nimport { Route } from 'react-router-dom';\r\nimport ForgotPasswordForm from './ForgotPasswordForm';\r\nimport ChangePasswordForm from './ChangePasswordForm';\r\n\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.signIn = this.signIn.bind(this);\r\n    this.handler = this.handler.bind(this);\r\n    this.state = {\r\n      email: { value: null, error: false, helperText: null },\r\n      password: { value: null, error: false, helperText: null },\r\n      msg: null\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, isAuthenticated } = this.props;\r\n    if (error !== prevProps.error) {\r\n      // Check for register error\r\n      if (error.id === 'LOGIN_FAIL') {\r\n        this.setState({ msg: error.msg });\r\n        setTimeout(function(){\r\n          this.setState({msg:null});\r\n          }.bind(this),3000);  // clear error after 3 seconds\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n   handler(){\r\n     this.setState(\r\n      {screen: 'login'}\r\n     )\r\n   }\r\n  \r\n\r\n   signIn(event){\r\n    event.preventDefault();\r\n    if (this.emailInput.value === \"\") {\r\n      this.setState({\r\n        email: {\r\n          value: this.emailInput.value,\r\n          error: true,\r\n          helperText: \"Your email must be specified.\"\r\n        }\r\n      });\r\n      this.emailInput.focus();\r\n    }\r\n    else{\r\n      const user = {\r\n        email: this.emailInput.value,\r\n        password: this.passwordInput.value,\r\n       };\r\n  \r\n      const log = this.props.login(user);\r\n      console.log(log)\r\n      this.props.history.push('/'); \r\n    }\r\n\r\n  }\r\n  \r\n\r\n  render(){\r\n    if (this.state.screen === 'forgot')\r\n      return <ForgotPasswordForm handler={this.handler}/>\r\n    if (this.state.screen === 'change')\r\n      return <ChangePasswordForm handler={this.handler}/>\r\n\r\n    const { classes } = this.props;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={this.signIn} >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              required\r\n              inputRef={input => (this.emailInput = input)}\r\n              error={this.state.email.error}\r\n              helperText={this.state.email.helperText}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              inputRef={input => (this.passwordInput = input)}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n\r\n            {this.state.msg  ? (\r\n            <Alert severity=\"error\">{this.state.msg}</Alert>\r\n              ) : (\r\n              null\r\n              )}\r\n\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link onClick={() => this.setState({screen:'forgot'})} variant=\"body2\">\r\n                {\"Reset Your Password\"}\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link onClick={() => this.setState({screen:'change'})} variant=\"body2\">\r\n                  {\"Do you want to update your password?\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { login, clearErrors }\r\n)(withStyles(styles)(LoginForm))","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport * as authActions from '../../actions/authActions'\r\nimport Dashboard from '../../Dashboard';\r\nimport LoginForm from '../auth/LoginForm';\r\nimport ChangePasswordForm from '../auth/ChangePasswordForm';\r\nimport PropTypes from 'prop-types';\r\nimport ForgotPasswordForm from '../auth/ForgotPasswordForm';\r\n\r\nclass Routes extends Component {\r\n\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n    // Similar to componentDidMount and componentDidUpdate:\r\n  render() {\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <PrivateRoute exact path=\"/\" component={Dashboard} authed={this.props.auth.isAuthenticated} />\r\n          <Route exact path=\"/login\" component={LoginForm} />\r\n\r\n\r\n        </div>\r\n      </BrowserRouter>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, authed, ...rest }) => (\r\n  // console.log(\"private routhh\", authed),\r\n  <Route\r\n    {...rest}\r\n    render={props => (\r\n      authed\r\n        ? <Component {...props} />\r\n        : <LoginForm {...props}/>\r\n    )}\r\n  />\r\n);\r\n\r\n\r\nconst mapStateToProps = state => ({ auth: state.auth });\r\n\r\nexport default connect(mapStateToProps, authActions)(Routes);\r\n","import React, { Component } from 'react';\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './App.css';\r\nimport Routes from './Component/routers/Routes';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    // console.log(\"rendering\")\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(\"dispatchhhhh from App\")\r\n    //store.dispatch(loadUser());\r\n    //console.log(store.getState(),\"state from app\");\r\n\r\n\r\n  }\r\n\r\n\r\n  static propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n  };\r\n\r\n\r\n  render() {\r\n     return (\r\n      <Routes />\r\n     )\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Dashboard from './Dashboard';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore } from 'redux';\r\nimport appReducer from './reducers/index';\r\nimport {Provider} from 'react-redux';\r\nimport App from './App';\r\nimport store from './store';\r\n\r\n// const store = createStore(appReducer);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n   , document.getElementById('root'),\r\n  );\r\n\r\n\r\n// ReactDOM.render( <Provider store={store}>\r\n//    <Dashboard />\r\n// </Provider> , document.getElementById('root'));\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();"],"sourceRoot":""}