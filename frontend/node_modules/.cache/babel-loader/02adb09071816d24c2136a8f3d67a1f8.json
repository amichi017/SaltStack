{"ast":null,"code":"import _slicedToArray from \"C:\\\\react\\\\SaltStack\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\react\\\\SaltStack\\\\frontend\\\\src\\\\Component\\\\MinionDialog.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Switch from '@material-ui/core/Switch';\nimport store from '../store';\nimport { dialog } from '../actions/date';\nimport Table from './Table';\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content'\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1)\n  }\n}));\nexport default function MinionDialog(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(true),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const _React$useState3 = React.useState(true),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        fullWidth = _React$useState4[0],\n        setFullWidth = _React$useState4[1];\n\n  const _React$useState5 = React.useState('sm'),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        maxWidth = _React$useState6[0],\n        setMaxWidth = _React$useState6[1];\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    store.dispatch(dialog(false));\n    console.log(store.getState(), \"oooooooooooooooooo\");\n  };\n\n  const handleMaxWidthChange = event => {\n    setMaxWidth(event.target.value);\n  };\n\n  const handleFullWidthChange = event => {\n    setFullWidth(event.target.checked);\n  };\n\n  if (store.getState().saltReturns.open === false) {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Open max-width dialog\"), React.createElement(Dialog, {\n      fullWidth: fullWidth,\n      maxWidth: maxWidth,\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"max-width-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"max-width-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Optional sizes\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"You can set my maximum width and whether to adapt or not.\"), React.createElement(\"form\", {\n      className: classes.form,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"max-width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"maxWidth\"), React.createElement(Select, {\n      autoFocus: true,\n      value: maxWidth,\n      onChange: handleMaxWidthChange,\n      inputProps: {\n        name: 'max-width',\n        id: 'max-width'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"false\"), React.createElement(MenuItem, {\n      value: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"xs\"), React.createElement(MenuItem, {\n      value: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"sm\"), React.createElement(MenuItem, {\n      value: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"md\"), React.createElement(MenuItem, {\n      value: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"lg\"), React.createElement(MenuItem, {\n      value: \"xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"xl\"))), React.createElement(FormControlLabel, {\n      className: classes.formControlLabel,\n      control: React.createElement(Switch, {\n        checked: fullWidth,\n        onChange: handleFullWidthChange,\n        value: \"fullWidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }),\n      label: \"Full width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Close\"))));\n  } else {\n    return React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    });\n  }\n}","map":{"version":3,"sources":["C:/react/SaltStack/frontend/src/Component/MinionDialog.js"],"names":["React","makeStyles","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","FormControlLabel","InputLabel","MenuItem","Select","Switch","store","dialog","Table","useStyles","theme","form","display","flexDirection","margin","width","formControl","marginTop","spacing","minWidth","formControlLabel","MinionDialog","props","classes","useState","open","setOpen","fullWidth","setFullWidth","maxWidth","setMaxWidth","handleClickOpen","handleClose","dispatch","console","log","getState","handleMaxWidthChange","event","target","value","handleFullWidthChange","checked","saltReturns","name","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,SAAS,GAAGhB,UAAU,CAACiB,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,MAAM,EAAE,MAHJ;AAIJC,IAAAA,KAAK,EAAE;AAJH,GAD+B;AAOrCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,SAAS,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd,CADA;AAEXC,IAAAA,QAAQ,EAAE;AAFC,GAPwB;AAWrCC,EAAAA,gBAAgB,EAAE;AAChBH,IAAAA,SAAS,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd;AADK;AAXmB,CAAL,CAAN,CAA5B;AAgBA,eAAe,SAASG,YAAT,CAAsBC,KAAtB,EAA6B;AAC1C,QAAMC,OAAO,GAAGd,SAAS,EAAzB;;AAD0C,0BAElBjB,KAAK,CAACgC,QAAN,CAAe,IAAf,CAFkB;AAAA;AAAA,QAEnCC,IAFmC;AAAA,QAE7BC,OAF6B;;AAAA,2BAGRlC,KAAK,CAACgC,QAAN,CAAe,IAAf,CAHQ;AAAA;AAAA,QAGnCG,SAHmC;AAAA,QAGxBC,YAHwB;;AAAA,2BAIVpC,KAAK,CAACgC,QAAN,CAAe,IAAf,CAJU;AAAA;AAAA,QAInCK,QAJmC;AAAA,QAIzBC,WAJyB;;AAM1C,QAAMC,eAAe,GAAG,MAAM;AAC5BL,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMM,WAAW,GAAG,MAAM;AACxBN,IAAAA,OAAO,CAAC,KAAD,CAAP;AACApB,IAAAA,KAAK,CAAC2B,QAAN,CAAe1B,MAAM,CAAC,KAAD,CAArB;AACA2B,IAAAA,OAAO,CAACC,GAAR,CAAY7B,KAAK,CAAC8B,QAAN,EAAZ,EAA6B,oBAA7B;AACD,GAJD;;AAMA,QAAMC,oBAAoB,GAAGC,KAAK,IAAI;AACpCR,IAAAA,WAAW,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,GAFD;;AAIA,QAAMC,qBAAqB,GAAGH,KAAK,IAAI;AACrCV,IAAAA,YAAY,CAACU,KAAK,CAACC,MAAN,CAAaG,OAAd,CAAZ;AACD,GAFD;;AAGA,MAAGpC,KAAK,CAAC8B,QAAN,GAAiBO,WAAjB,CAA6BlB,IAA7B,KAAoC,KAAvC,EAA6C;AAC7C,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAA2B,MAAA,KAAK,EAAC,SAAjC;AAA2C,MAAA,OAAO,EAAEM,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAIE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAEJ,SADb;AAEE,MAAA,QAAQ,EAAEE,QAFZ;AAGE,MAAA,IAAI,EAAEJ,IAHR;AAIE,MAAA,OAAO,EAAEO,WAJX;AAKE,yBAAgB,wBALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,oBAAC,WAAD;AAAa,MAAA,EAAE,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,EAQE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEADF,EAIE;AAAM,MAAA,SAAS,EAAET,OAAO,CAACZ,IAAzB;AAA+B,MAAA,UAAU,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAEY,OAAO,CAACP,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,MAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,KAAK,EAAEa,QAFT;AAGE,MAAA,QAAQ,EAAEQ,oBAHZ;AAIE,MAAA,UAAU,EAAE;AACVO,QAAAA,IAAI,EAAE,WADI;AAEVC,QAAAA,EAAE,EAAE;AAFM,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATF,EAUE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,EAWE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,EAYE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,EAaE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,EAcE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF,CAFF,CADF,EAoBE,oBAAC,gBAAD;AACE,MAAA,SAAS,EAAEtB,OAAO,CAACH,gBADrB;AAEE,MAAA,OAAO,EACL,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAEO,SAAjB;AAA4B,QAAA,QAAQ,EAAEc,qBAAtC;AAA6D,QAAA,KAAK,EAAC,WAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ;AAKE,MAAA,KAAK,EAAC,YALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,CAJF,CARF,EAyCE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAET,WAAjB;AAA8B,MAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAzCF,CAJF,CADF;AAsDC,GAvDD,MAwDI;AACF,WAAQ,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AAED;AACF","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport store from '../store';\r\nimport { dialog } from '../actions/date';\r\nimport Table from './Table';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function MinionDialog(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('sm');\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    store.dispatch(dialog(false));\r\n    console.log(store.getState(),\"oooooooooooooooooo\");\r\n  };\r\n\r\n  const handleMaxWidthChange = event => {\r\n    setMaxWidth(event.target.value);\r\n  };\r\n\r\n  const handleFullWidthChange = event => {\r\n    setFullWidth(event.target.checked);\r\n  };\r\n  if(store.getState().saltReturns.open===false){\r\n  return (\r\n    <React.Fragment>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open max-width dialog\r\n      </Button>\r\n      <Dialog\r\n        fullWidth={fullWidth}\r\n        maxWidth={maxWidth}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            You can set my maximum width and whether to adapt or not.\r\n          </DialogContentText>\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\r\n              <Select\r\n                autoFocus\r\n                value={maxWidth}\r\n                onChange={handleMaxWidthChange}\r\n                inputProps={{\r\n                  name: 'max-width',\r\n                  id: 'max-width',\r\n                }}\r\n              >\r\n                <MenuItem value={false}>false</MenuItem>\r\n                <MenuItem value=\"xs\">xs</MenuItem>\r\n                <MenuItem value=\"sm\">sm</MenuItem>\r\n                <MenuItem value=\"md\">md</MenuItem>\r\n                <MenuItem value=\"lg\">lg</MenuItem>\r\n                <MenuItem value=\"xl\">xl</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControlLabel\r\n              className={classes.formControlLabel}\r\n              control={\r\n                <Switch checked={fullWidth} onChange={handleFullWidthChange} value=\"fullWidth\" />\r\n              }\r\n              label=\"Full width\"\r\n            />\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n  }\r\n  else{\r\n    return( <Table></Table>);\r\n   \r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}