{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Popover from '../Popover';\nimport MenuList from '../MenuList';\nimport ReactDOM from 'react-dom';\nimport { setRef } from '../utils/reactHelpers';\nimport useTheme from '../styles/useTheme';\nvar RTL_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'right'\n};\nvar LTR_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'left'\n};\nexport var styles = {\n  /* Styles applied to the `Paper` component. */\n  paper: {\n    // specZ: The maximum height of a simple menu should be one or more rows less than the view\n    // height. This ensures a tapable area outside of the simple menu with which to dismiss\n    // the menu.\n    maxHeight: 'calc(100% - 96px)',\n    // Add iOS momentum scrolling.\n    WebkitOverflowScrolling: 'touch'\n  },\n\n  /* Styles applied to the `List` component via `MenuList`. */\n  list: {\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0\n  }\n};\nvar Menu = React.forwardRef(function Menu(props, ref) {\n  var autoFocusProp = props.autoFocus,\n      children = props.children,\n      classes = props.classes,\n      _props$disableAutoFoc = props.disableAutoFocusItem,\n      disableAutoFocusItem = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$MenuListProps = props.MenuListProps,\n      MenuListProps = _props$MenuListProps === void 0 ? {} : _props$MenuListProps,\n      onClose = props.onClose,\n      onEntering = props.onEntering,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      PopoverClasses = props.PopoverClasses,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"children\", \"classes\", \"disableAutoFocusItem\", \"MenuListProps\", \"onClose\", \"onEntering\", \"open\", \"PaperProps\", \"PopoverClasses\", \"transitionDuration\", \"variant\"]);\n\n  var theme = useTheme();\n  var autoFocus = (autoFocusProp !== undefined ? autoFocusProp : !disableAutoFocusItem) && open;\n  var menuListActionsRef = React.useRef(null);\n  var firstValidItemRef = React.useRef(null);\n  var firstSelectedItemRef = React.useRef(null);\n\n  var getContentAnchorEl = function getContentAnchorEl() {\n    return firstSelectedItemRef.current || firstValidItemRef.current;\n  };\n\n  var handleEntering = function handleEntering(element, isAppearing) {\n    if (menuListActionsRef.current) {\n      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);\n    }\n\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n  };\n\n  var handleListKeyDown = function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n\n      if (onClose) {\n        onClose(event, 'tabKeyDown');\n      }\n    }\n  };\n\n  var firstValidElementIndex = null;\n  var firstSelectedIndex = null;\n  var items = React.Children.map(children, function (child, index) {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (child.type === React.Fragment) {\n        console.error([\"Material-UI: the Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    if (firstValidElementIndex === null) {\n      firstValidElementIndex = index;\n    }\n\n    var newChildProps = null;\n\n    if (variant !== \"menu\" && firstSelectedIndex === null && child.props.selected && !child.props.disabled) {\n      firstSelectedIndex = index;\n      newChildProps = {};\n\n      if (autoFocus) {\n        newChildProps.autoFocus = true;\n      }\n\n      if (child.props.tabIndex === undefined) {\n        newChildProps.tabIndex = 0;\n      }\n\n      newChildProps.ref = function (instance) {\n        // #StrictMode ready\n        firstSelectedItemRef.current = ReactDOM.findDOMNode(instance);\n        setRef(child.ref, instance);\n      };\n    } else if (index === firstValidElementIndex) {\n      newChildProps = {\n        ref: function ref(instance) {\n          // #StrictMode ready\n          firstValidItemRef.current = ReactDOM.findDOMNode(instance);\n          setRef(child.ref, instance);\n        }\n      };\n    }\n\n    if (newChildProps !== null) {\n      return React.cloneElement(child, newChildProps);\n    }\n\n    return child;\n  });\n  return React.createElement(Popover, _extends({\n    getContentAnchorEl: getContentAnchorEl,\n    classes: PopoverClasses,\n    onClose: onClose,\n    onEntering: handleEntering,\n    anchorOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\n    transformOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\n    PaperProps: _extends({}, PaperProps, {\n      classes: _extends({}, PaperProps.classes, {\n        root: classes.paper\n      })\n    }),\n    open: open,\n    ref: ref,\n    transitionDuration: transitionDuration\n  }, other), React.createElement(MenuList, _extends({\n    onKeyDown: handleListKeyDown,\n    actions: menuListActionsRef,\n    autoFocus: autoFocus && firstSelectedIndex === null\n  }, MenuListProps, {\n    className: clsx(classes.list, MenuListProps.className)\n  }), items));\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes = {\n  /**\r\n   * The DOM element used to set the position of the menu.\r\n   */\n  anchorEl: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n\n  /**\r\n   * If `true` (default), the menu list (possibly a particular item depending on the menu variant) will receive focus on open.\r\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\r\n   * Menu contents, normally `MenuItem`s.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\r\n   * Same as `autoFocus=false`.\r\n   * @deprecated Use `autoFocus` instead.\r\n   */\n  disableAutoFocusItem: PropTypes.bool,\n\n  /**\r\n   * Props applied to the [`MenuList`](/api/menu-list/) element.\r\n   */\n  MenuListProps: PropTypes.object,\n\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be:`\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\r\n   */\n  onClose: PropTypes.func,\n\n  /**\r\n   * Callback fired before the Menu enters.\r\n   */\n  onEnter: PropTypes.func,\n\n  /**\r\n   * Callback fired when the Menu has entered.\r\n   */\n  onEntered: PropTypes.func,\n\n  /**\r\n   * Callback fired when the Menu is entering.\r\n   */\n  onEntering: PropTypes.func,\n\n  /**\r\n   * Callback fired before the Menu exits.\r\n   */\n  onExit: PropTypes.func,\n\n  /**\r\n   * Callback fired when the Menu has exited.\r\n   */\n  onExited: PropTypes.func,\n\n  /**\r\n   * Callback fired when the Menu is exiting.\r\n   */\n  onExiting: PropTypes.func,\n\n  /**\r\n   * If `true`, the menu is visible.\r\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\r\n   * @ignore\r\n   */\n  PaperProps: PropTypes.object,\n\n  /**\r\n   * `classes` prop applied to the [`Popover`](/api/popover/) element.\r\n   */\n  PopoverClasses: PropTypes.object,\n\n  /**\r\n   * The length of the transition in `ms`, or 'auto'\r\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  }), PropTypes.oneOf(['auto'])]),\n\n  /**\r\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus\r\n   * and the vertical alignment relative to the anchor element.\r\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenu'\n})(Menu);","map":{"version":3,"sources":["C:/react/SaltStack/frontend/node_modules/@material-ui/core/esm/Menu/Menu.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","withStyles","Popover","MenuList","ReactDOM","setRef","useTheme","RTL_ORIGIN","vertical","horizontal","LTR_ORIGIN","styles","paper","maxHeight","WebkitOverflowScrolling","list","outline","Menu","forwardRef","props","ref","autoFocusProp","autoFocus","children","classes","_props$disableAutoFoc","disableAutoFocusItem","_props$MenuListProps","MenuListProps","onClose","onEntering","open","_props$PaperProps","PaperProps","PopoverClasses","_props$transitionDura","transitionDuration","_props$variant","variant","other","theme","undefined","menuListActionsRef","useRef","firstValidItemRef","firstSelectedItemRef","getContentAnchorEl","current","handleEntering","element","isAppearing","adjustStyleForScrollbar","handleListKeyDown","event","key","preventDefault","firstValidElementIndex","firstSelectedIndex","items","Children","map","child","index","isValidElement","process","env","NODE_ENV","type","Fragment","console","error","join","newChildProps","selected","disabled","tabIndex","instance","findDOMNode","cloneElement","createElement","anchorOrigin","direction","transformOrigin","root","onKeyDown","actions","className","propTypes","anchorEl","oneOfType","object","func","bool","node","isRequired","onEnter","onEntered","onExit","onExited","onExiting","number","shape","enter","exit","oneOf","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport withStyles from '../styles/withStyles';\r\nimport Popover from '../Popover';\r\nimport MenuList from '../MenuList';\r\nimport ReactDOM from 'react-dom';\r\nimport { setRef } from '../utils/reactHelpers';\r\nimport useTheme from '../styles/useTheme';\r\nvar RTL_ORIGIN = {\r\n  vertical: 'top',\r\n  horizontal: 'right'\r\n};\r\nvar LTR_ORIGIN = {\r\n  vertical: 'top',\r\n  horizontal: 'left'\r\n};\r\nexport var styles = {\r\n  /* Styles applied to the `Paper` component. */\r\n  paper: {\r\n    // specZ: The maximum height of a simple menu should be one or more rows less than the view\r\n    // height. This ensures a tapable area outside of the simple menu with which to dismiss\r\n    // the menu.\r\n    maxHeight: 'calc(100% - 96px)',\r\n    // Add iOS momentum scrolling.\r\n    WebkitOverflowScrolling: 'touch'\r\n  },\r\n\r\n  /* Styles applied to the `List` component via `MenuList`. */\r\n  list: {\r\n    // We disable the focus ring for mouse, touch and keyboard users.\r\n    outline: 0\r\n  }\r\n};\r\nvar Menu = React.forwardRef(function Menu(props, ref) {\r\n  var autoFocusProp = props.autoFocus,\r\n      children = props.children,\r\n      classes = props.classes,\r\n      _props$disableAutoFoc = props.disableAutoFocusItem,\r\n      disableAutoFocusItem = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\r\n      _props$MenuListProps = props.MenuListProps,\r\n      MenuListProps = _props$MenuListProps === void 0 ? {} : _props$MenuListProps,\r\n      onClose = props.onClose,\r\n      onEntering = props.onEntering,\r\n      open = props.open,\r\n      _props$PaperProps = props.PaperProps,\r\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\r\n      PopoverClasses = props.PopoverClasses,\r\n      _props$transitionDura = props.transitionDuration,\r\n      transitionDuration = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura,\r\n      _props$variant = props.variant,\r\n      variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant,\r\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"children\", \"classes\", \"disableAutoFocusItem\", \"MenuListProps\", \"onClose\", \"onEntering\", \"open\", \"PaperProps\", \"PopoverClasses\", \"transitionDuration\", \"variant\"]);\r\n\r\n  var theme = useTheme();\r\n  var autoFocus = (autoFocusProp !== undefined ? autoFocusProp : !disableAutoFocusItem) && open;\r\n  var menuListActionsRef = React.useRef(null);\r\n  var firstValidItemRef = React.useRef(null);\r\n  var firstSelectedItemRef = React.useRef(null);\r\n\r\n  var getContentAnchorEl = function getContentAnchorEl() {\r\n    return firstSelectedItemRef.current || firstValidItemRef.current;\r\n  };\r\n\r\n  var handleEntering = function handleEntering(element, isAppearing) {\r\n    if (menuListActionsRef.current) {\r\n      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);\r\n    }\r\n\r\n    if (onEntering) {\r\n      onEntering(element, isAppearing);\r\n    }\r\n  };\r\n\r\n  var handleListKeyDown = function handleListKeyDown(event) {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n\r\n      if (onClose) {\r\n        onClose(event, 'tabKeyDown');\r\n      }\r\n    }\r\n  };\r\n\r\n  var firstValidElementIndex = null;\r\n  var firstSelectedIndex = null;\r\n  var items = React.Children.map(children, function (child, index) {\r\n    if (!React.isValidElement(child)) {\r\n      return null;\r\n    }\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (child.type === React.Fragment) {\r\n        console.error([\"Material-UI: the Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\r\n      }\r\n    }\r\n\r\n    if (firstValidElementIndex === null) {\r\n      firstValidElementIndex = index;\r\n    }\r\n\r\n    var newChildProps = null;\r\n\r\n    if (variant !== \"menu\" && firstSelectedIndex === null && child.props.selected && !child.props.disabled) {\r\n      firstSelectedIndex = index;\r\n      newChildProps = {};\r\n\r\n      if (autoFocus) {\r\n        newChildProps.autoFocus = true;\r\n      }\r\n\r\n      if (child.props.tabIndex === undefined) {\r\n        newChildProps.tabIndex = 0;\r\n      }\r\n\r\n      newChildProps.ref = function (instance) {\r\n        // #StrictMode ready\r\n        firstSelectedItemRef.current = ReactDOM.findDOMNode(instance);\r\n        setRef(child.ref, instance);\r\n      };\r\n    } else if (index === firstValidElementIndex) {\r\n      newChildProps = {\r\n        ref: function ref(instance) {\r\n          // #StrictMode ready\r\n          firstValidItemRef.current = ReactDOM.findDOMNode(instance);\r\n          setRef(child.ref, instance);\r\n        }\r\n      };\r\n    }\r\n\r\n    if (newChildProps !== null) {\r\n      return React.cloneElement(child, newChildProps);\r\n    }\r\n\r\n    return child;\r\n  });\r\n  return React.createElement(Popover, _extends({\r\n    getContentAnchorEl: getContentAnchorEl,\r\n    classes: PopoverClasses,\r\n    onClose: onClose,\r\n    onEntering: handleEntering,\r\n    anchorOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\r\n    transformOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\r\n    PaperProps: _extends({}, PaperProps, {\r\n      classes: _extends({}, PaperProps.classes, {\r\n        root: classes.paper\r\n      })\r\n    }),\r\n    open: open,\r\n    ref: ref,\r\n    transitionDuration: transitionDuration\r\n  }, other), React.createElement(MenuList, _extends({\r\n    onKeyDown: handleListKeyDown,\r\n    actions: menuListActionsRef,\r\n    autoFocus: autoFocus && firstSelectedIndex === null\r\n  }, MenuListProps, {\r\n    className: clsx(classes.list, MenuListProps.className)\r\n  }), items));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes = {\r\n  /**\r\n   * The DOM element used to set the position of the menu.\r\n   */\r\n  anchorEl: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\r\n\r\n  /**\r\n   * If `true` (default), the menu list (possibly a particular item depending on the menu variant) will receive focus on open.\r\n   */\r\n  autoFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * Menu contents, normally `MenuItem`s.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  /**\r\n   * Same as `autoFocus=false`.\r\n   * @deprecated Use `autoFocus` instead.\r\n   */\r\n  disableAutoFocusItem: PropTypes.bool,\r\n\r\n  /**\r\n   * Props applied to the [`MenuList`](/api/menu-list/) element.\r\n   */\r\n  MenuListProps: PropTypes.object,\r\n\r\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be:`\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\r\n   */\r\n  onClose: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired before the Menu enters.\r\n   */\r\n  onEnter: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the Menu has entered.\r\n   */\r\n  onEntered: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the Menu is entering.\r\n   */\r\n  onEntering: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired before the Menu exits.\r\n   */\r\n  onExit: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the Menu has exited.\r\n   */\r\n  onExited: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the Menu is exiting.\r\n   */\r\n  onExiting: PropTypes.func,\r\n\r\n  /**\r\n   * If `true`, the menu is visible.\r\n   */\r\n  open: PropTypes.bool.isRequired,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  PaperProps: PropTypes.object,\r\n\r\n  /**\r\n   * `classes` prop applied to the [`Popover`](/api/popover/) element.\r\n   */\r\n  PopoverClasses: PropTypes.object,\r\n\r\n  /**\r\n   * The length of the transition in `ms`, or 'auto'\r\n   */\r\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\r\n    enter: PropTypes.number,\r\n    exit: PropTypes.number\r\n  }), PropTypes.oneOf(['auto'])]),\r\n\r\n  /**\r\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus\r\n   * and the vertical alignment relative to the anchor element.\r\n   */\r\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiMenu'\r\n})(Menu);"]},"metadata":{},"sourceType":"module"}