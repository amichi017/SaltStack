{"ast":null,"code":"/*!\r\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\r\n *\r\n * Copyright (c) 2014-2017, Jon Schlinkert.\r\n * Released under the MIT License.\r\n */\nimport isObject from 'isobject';\n\nfunction isObjectObject(o) {\n  return isObject(o) === true && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nexport default function isPlainObject(o) {\n  var ctor, prot;\n  if (isObjectObject(o) === false) return false; // If has modified constructor\n\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false; // If has modified prototype\n\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false; // If constructor does not have an Object-specific method\n\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n}\n;","map":{"version":3,"sources":["C:/react/SaltStack/frontend/node_modules/@material-ui/core/node_modules/is-plain-object/index.js"],"names":["isObject","isObjectObject","o","Object","prototype","toString","call","isPlainObject","ctor","prot","constructor","hasOwnProperty"],"mappings":"AAAA;;;;;;AAOA,OAAOA,QAAP,MAAqB,UAArB;;AAEA,SAASC,cAAT,CAAwBC,CAAxB,EAA2B;AACzB,SAAOF,QAAQ,CAACE,CAAD,CAAR,KAAgB,IAAhB,IACFC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,CAA/B,MAAsC,iBAD3C;AAED;;AAED,eAAe,SAASK,aAAT,CAAuBL,CAAvB,EAA0B;AACvC,MAAIM,IAAJ,EAASC,IAAT;AAEA,MAAIR,cAAc,CAACC,CAAD,CAAd,KAAsB,KAA1B,EAAiC,OAAO,KAAP,CAHM,CAKvC;;AACAM,EAAAA,IAAI,GAAGN,CAAC,CAACQ,WAAT;AACA,MAAI,OAAOF,IAAP,KAAgB,UAApB,EAAgC,OAAO,KAAP,CAPO,CASvC;;AACAC,EAAAA,IAAI,GAAGD,IAAI,CAACJ,SAAZ;AACA,MAAIH,cAAc,CAACQ,IAAD,CAAd,KAAyB,KAA7B,EAAoC,OAAO,KAAP,CAXG,CAavC;;AACA,MAAIA,IAAI,CAACE,cAAL,CAAoB,eAApB,MAAyC,KAA7C,EAAoD;AAClD,WAAO,KAAP;AACD,GAhBsC,CAkBvC;;;AACA,SAAO,IAAP;AACD;AAAA","sourcesContent":["/*!\r\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\r\n *\r\n * Copyright (c) 2014-2017, Jon Schlinkert.\r\n * Released under the MIT License.\r\n */\r\n\r\nimport isObject from 'isobject';\r\n\r\nfunction isObjectObject(o) {\r\n  return isObject(o) === true\r\n    && Object.prototype.toString.call(o) === '[object Object]';\r\n}\r\n\r\nexport default function isPlainObject(o) {\r\n  var ctor,prot;\r\n\r\n  if (isObjectObject(o) === false) return false;\r\n\r\n  // If has modified constructor\r\n  ctor = o.constructor;\r\n  if (typeof ctor !== 'function') return false;\r\n\r\n  // If has modified prototype\r\n  prot = ctor.prototype;\r\n  if (isObjectObject(prot) === false) return false;\r\n\r\n  // If constructor does not have an Object-specific method\r\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\r\n    return false;\r\n  }\r\n\r\n  // Most likely a plain Object\r\n  return true;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}