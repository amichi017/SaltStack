{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\SaltStack\\\\frontend\\\\src\\\\Component\\\\Graph.js\";\nimport React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { dateSelect } from '../actions/date';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer, Tooltip, Legend } from 'recharts';\nimport store from '../store';\nimport Title from './Title'; // import SaltData from'../demo/jsonPars.json';\n// Generate Sales Data\n\nconst time = str => {\n  const year = str.slice(0, 4);\n  const month = String(parseInt(str.slice(4, 6)) - 1);\n  const day = str.slice(6, 8);\n  const hower = str.slice(8, 10);\n  const minet = str.slice(10, 12);\n  return String(hower) + \":\" + String(minet);\n};\n\nfunction createData(time, Succeeded, Faile, amount) {\n  return {\n    time,\n    Succeeded,\n    Faile,\n    amount\n  };\n}\n\nconst data = [createData('00:00', 0, 0, 0), createData('03:00', 67, 89, 300), createData('06:00', 45, 67, 600), createData('09:00', 34, 56, 800), createData('12:00', 23, 45, 1500), createData('15:00', 89, 45, 2000), createData('18:00', 34, 56, 2400), createData('21:00', 23, 47, 2400), createData('24:00', 34, 56, 45)];\n\nconst demoOnClick = e => {// if(e){if(e.activeLabel){console.log(e.activeLabel);}}\n};\n\nclass Chart extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.createData = this.createData.bind(this);\n    this.state = {\n      start: new Date(),\n      end: new Date(),\n      returns: null,\n      amountFail: 0,\n      amountSuc: 0\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.date.start.toLocaleDateString() !== nextProps.date.start.toLocaleDateString() || this.props.date.end.toLocaleDateString() !== nextProps.date.end.toLocaleDateString()) {\n      this.setState({\n        start: nextProps.date.start,\n        end: nextProps.date.end\n      });\n      this.state.returns = nextProps.saltReturns.saltReturns; // console.log(\"props                             \",nextProps);\n\n      console.log(\"state                               \", this.state);\n      return true;\n    }\n\n    return false;\n  }\n\n  createData() {\n    if (this.state.saltReturns.saltReturns) {\n      const data = [{\n        time: \"00:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }, {\n        time: \"03:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }, {\n        time: \"06:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }, {\n        time: \"09:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }, {\n        time: \"12:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }, {\n        time: \"15:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }, {\n        time: \"18:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }, {\n        time: \"21:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }, {\n        time: \"24:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }];\n      this.state.saltReturns.saltReturns.forEach(item => {\n        switch (time(item.full_ret.jid)) {\n          case \"03:00\":\n          default:\n        }\n\n        item.full_ret.success === true ? this.state.amountSuc++ : this.state.amountFail++;\n      });\n    }\n\n    const data = [createData('00:00', 0, 0, 0), createData('03:00', 67, 89, 300), createData('06:00', 45, 67, 600), createData('09:00', 34, 56, 800), createData('12:00', 23, 45, 1500), createData('15:00', 89, 45, 2000), createData('18:00', 34, 56, 2400), createData('21:00', 23, 47, 2400), createData('24:00', 34, 56, 45)];\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.state.start.toLocaleDateString() === this.state.end.toLocaleDateString() ? this.state.start.toLocaleDateString() : this.state.start.toLocaleDateString() + ' - ' + this.state.end.toLocaleDateString()), React.createElement(ResponsiveContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(LineChart, {\n      onClick: demoOnClick,\n      data: data,\n      margin: {\n        top: 16,\n        right: 16,\n        bottom: 0,\n        left: 24\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(XAxis, {\n      dataKey: \"time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Label, {\n      angle: 270,\n      position: \"left\",\n      style: {\n        textAnchor: 'middle'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"(A/T)\")), React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"Faile\",\n      stroke: \"#ff6666\",\n      onClick: demoOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"Succeeded\",\n      stroke: \"#82ca9d\",\n      onClick: demoOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    saltReturns: state.saltReturns,\n    date: state.date\n  };\n};\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    dateSelect: dateSelect\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, matchDispatchToProps)(Chart);","map":{"version":3,"sources":["C:/react/SaltStack/frontend/src/Component/Graph.js"],"names":["React","bindActionCreators","connect","dateSelect","LineChart","Line","XAxis","YAxis","Label","ResponsiveContainer","Tooltip","Legend","store","Title","time","str","year","slice","month","String","parseInt","day","hower","minet","createData","Succeeded","Faile","amount","data","demoOnClick","e","Chart","PureComponent","constructor","props","bind","state","start","Date","end","returns","amountFail","amountSuc","componentWillReceiveProps","nextProps","date","toLocaleDateString","setState","saltReturns","console","log","forEach","item","full_ret","jid","success","render","top","right","bottom","left","textAnchor","mapStateToProps","matchDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {dateSelect} from '../actions/date';\r\nimport { LineChart,\r\n         Line,\r\n         XAxis,\r\n         YAxis,\r\n         Label,\r\n         ResponsiveContainer,\r\n         Tooltip,\r\n         Legend  \r\n} from 'recharts';\r\nimport store from '../store';\r\nimport Title from './Title';\r\n// import SaltData from'../demo/jsonPars.json';\r\n// Generate Sales Data\r\n\r\n\r\nconst time =(str)=>{\r\n  const year =str.slice(0,4);\r\n  const month =String(parseInt(str.slice(4,6))-1);\r\n  const day =str.slice(6,8);\r\n  const hower= str.slice(8,10);\r\n  \r\n  const minet=str.slice(10,12);\r\n  return String(hower)+\":\"+String(minet);\r\n\r\n}\r\nfunction createData(time,Succeeded,Faile, amount) {\r\n  return { time,Succeeded,Faile, amount };\r\n}\r\n\r\nconst data = [\r\n  createData('00:00',0,0, 0),\r\n  createData('03:00',67,89, 300),\r\n  createData('06:00',45,67, 600),\r\n  createData('09:00',34,56, 800),\r\n  createData('12:00',23,45, 1500),\r\n  createData('15:00',89,45, 2000),\r\n  createData('18:00',34,56, 2400),\r\n  createData('21:00',23,47, 2400),\r\n  createData('24:00',34,56, 45),\r\n];\r\nconst demoOnClick= (e)=>{\r\n  // if(e){if(e.activeLabel){console.log(e.activeLabel);}}\r\n}\r\n\r\n\r\n class Chart extends React.PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.createData=this.createData.bind(this);\r\n    this.state = {\r\n      start: new Date(),\r\n      end:new Date(),\r\n      returns:null,\r\n      amountFail:0,\r\n      amountSuc:0\r\n    };\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if((this.props.date.start.toLocaleDateString()!== nextProps.date.start.toLocaleDateString()) || this.props.date.end.toLocaleDateString()!== nextProps.date.end.toLocaleDateString() ){ \r\n      this.setState({start:nextProps.date.start,end:nextProps.date.end});\r\n      this.state.returns=nextProps.saltReturns.saltReturns;\r\n   \r\n        // console.log(\"props                             \",nextProps);\r\n       console.log(\"state                               \",this.state);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  createData(){\r\n    if(this.state.saltReturns.saltReturns){\r\n    const data=[{ time:\"00:00\",Succeeded:0,Faile:0, amount:0 },\r\n                { time:\"03:00\",Succeeded:0,Faile:0, amount:0 },\r\n                { time:\"06:00\",Succeeded:0,Faile:0, amount:0 },\r\n                { time:\"09:00\",Succeeded:0,Faile:0, amount:0 },\r\n                { time:\"12:00\",Succeeded:0,Faile:0, amount:0 },\r\n                { time:\"15:00\",Succeeded:0,Faile:0, amount:0 },\r\n                { time:\"18:00\",Succeeded:0,Faile:0, amount:0 },\r\n                { time:\"21:00\",Succeeded:0,Faile:0, amount:0 },\r\n                { time:\"24:00\",Succeeded:0,Faile:0, amount:0 },\r\n               ];\r\n    this.state.saltReturns.saltReturns.forEach(item => {\r\n      switch (time(item.full_ret.jid)) {\r\n        case \"03:00\":\r\n      \r\n        default:\r\n      }\r\n      item.full_ret.success === true ?(this.state.amountSuc++):(this.state.amountFail++)\r\n    });\r\n\r\n  }\r\n    const data = [\r\n      createData('00:00',0,0, 0),\r\n      createData('03:00',67,89, 300),\r\n      createData('06:00',45,67, 600),\r\n      createData('09:00',34,56, 800),\r\n      createData('12:00',23,45, 1500),\r\n      createData('15:00',89,45, 2000),\r\n      createData('18:00',34,56, 2400),\r\n      createData('21:00',23,47, 2400),\r\n      createData('24:00',34,56, 45),\r\n    ];\r\n\r\n\r\n  }\r\n  render(){\r\n  return (\r\n    <React.Fragment>\r\n      <Title>{(this.state.start.toLocaleDateString() === this.state.end.toLocaleDateString())?this.state.start.toLocaleDateString():this.state.start.toLocaleDateString() + ' - '+ this.state.end.toLocaleDateString()}</Title>\r\n      <ResponsiveContainer>\r\n        <LineChart\r\n          onClick={demoOnClick}\r\n          data={data}\r\n          margin={{\r\n            top: 16,\r\n            right: 16,\r\n            bottom: 0,\r\n            left: 24,\r\n          }}\r\n        >\r\n          <XAxis dataKey=\"time\">\r\n          </XAxis> \r\n          <YAxis>\r\n            <Label angle={270} position=\"left\" style={{ textAnchor: 'middle' }}>\r\n             (A/T)\r\n            </Label>\r\n          </YAxis>\r\n          <Line type=\"monotone\" dataKey=\"Faile\" stroke=\"#ff6666\" onClick={demoOnClick} />\r\n          <Line type=\"monotone\" dataKey=\"Succeeded\" stroke=\"#82ca9d\"  onClick={demoOnClick}/>\r\n          <Legend />\r\n          <Tooltip />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </React.Fragment>\r\n  );\r\n }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    saltReturns: state.saltReturns,\r\n    date: state.date \r\n  }\r\n}\r\n\r\nfunction matchDispatchToProps(dispatch){\r\n  return bindActionCreators({dateSelect: dateSelect}, dispatch);\r\n}\r\nexport default connect(mapStateToProps,matchDispatchToProps)(Chart);"]},"metadata":{},"sourceType":"module"}