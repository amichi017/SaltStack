{"ast":null,"code":"import axios from 'axios';\nimport store from '../store';\nimport { DATE_SELECT, SALT_RETURNS } from './types'; // Date is select\n\nexport const dateSelect = (start, end) => {\n  return {\n    type: DATE_SELECT,\n    payload: {\n      start,\n      end\n    }\n  }; // console.log(\"start \",start);\n  // console.log(\"end \",end);\n}; // Clear date\n\nexport const saltReturns = () => (dispatch, getState) => {\n  const time = new Date().toDateString();\n  let Month = String(parseInt(store.getState().date.start.getMonth() + 1));\n  let year = String(store.getState().date.start.getFullYear());\n  let strTime = year + '-' + Month + '-0';\n  let startYear = new Date(strTime);\n  let endYear = store.getState().date.end;\n  console.log(startYear, \"startYear\");\n\n  if (store.getState().auth.token !== null) {} // console.log(\"ppppppppppppppppp\");}\n\n\n  let data = [];\n\n  for (let index = startYear; index <= endYear; index.setFullYear(index.getFullYear() + 1)) {\n    console.log(\"pppppppppppppppppppppppppppppppppppppppp\");\n    axios.get('http://127.0.0.1:5000/api/saltReturns/apply/' + '${index.getFullYear()}', tokenConfig(getState)).then(res => {\n      data.concat(res.data);\n    }).catch(err => {\n      console.log(err, \"error in data\");\n    });\n  }\n\n  store.dispatch({\n    type: SALT_RETURNS,\n    payload: data\n  });\n  console.log(store.getState(), \"the store from date \");\n}; //  //Clear date\n//  export const saltReturns =  () => (dispatch, getState) => {\n//      const time =new Date().toDateString();\n//  // if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\n//      axios.get('http://127.0.0.1:5000/api/saltReturns', tokenConfig(getState))\n//     .then((res) => { \n//         // console.log(res,\"res\");\n//     store.dispatch({\n//         type: SALT_RETURNS,\n//         payload: res.data\n//     })})\n//     .catch(err => {\n//         console.log(err,\"error in data\");\n//        });\n//        console.log(store.getState(),\"the store \");\n// };\n// Setup config/headers and token\n\nexport const tokenConfig = getState => {\n  // Get token from localstorage\n  const token = getState().auth.access_token; // Headers\n\n  const config = {\n    headers: {\n      \"Content-type\": \"multipart/form-data\"\n    }\n  }; // If token, add to headers\n\n  if (token) {\n    config.headers[\"Authorization\"] = ` Bearer ${token} `;\n  }\n\n  return config;\n};","map":{"version":3,"sources":["C:/react/SaltStack/frontend/src/actions/date.js"],"names":["axios","store","DATE_SELECT","SALT_RETURNS","dateSelect","start","end","type","payload","saltReturns","dispatch","getState","time","Date","toDateString","Month","String","parseInt","date","getMonth","year","getFullYear","strTime","startYear","endYear","console","log","auth","token","data","index","setFullYear","get","tokenConfig","then","res","concat","catch","err","access_token","config","headers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACC,SAASC,WAAT,EAAsBC,YAAtB,QAAyC,SAAzC,C,CACA;;AACA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAD,EAASC,GAAT,KAAiB;AAEvC,SAAO;AACKC,IAAAA,IAAI,EAAEL,WADX;AAEKM,IAAAA,OAAO,EAAC;AAACH,MAAAA,KAAD;AAAOC,MAAAA;AAAP;AAFb,GAAP,CAFuC,CAMvC;AACA;AAEH,CATM,C,CAWP;;AACC,OAAO,MAAMG,WAAW,GAAI,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAExD,QAAMC,IAAI,GAAE,IAAIC,IAAJ,GAAWC,YAAX,EAAZ;AACA,MAAIC,KAAK,GAAEC,MAAM,CAACC,QAAQ,CAAChB,KAAK,CAACU,QAAN,GAAiBO,IAAjB,CAAsBb,KAAtB,CAA4Bc,QAA5B,KAAuC,CAAxC,CAAT,CAAjB;AACA,MAAIC,IAAI,GAACJ,MAAM,CAACf,KAAK,CAACU,QAAN,GAAiBO,IAAjB,CAAsBb,KAAtB,CAA4BgB,WAA5B,EAAD,CAAf;AAEA,MAAIC,OAAO,GAAEF,IAAI,GAAC,GAAL,GAASL,KAAT,GAAe,IAA5B;AACA,MAAIQ,SAAS,GAAC,IAAIV,IAAJ,CAASS,OAAT,CAAd;AACA,MAAIE,OAAO,GAACvB,KAAK,CAACU,QAAN,GAAiBO,IAAjB,CAAsBZ,GAAlC;AAEAmB,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ,EAAsB,WAAtB;;AAIH,MAAGtB,KAAK,CAACU,QAAN,GAAiBgB,IAAjB,CAAsBC,KAAtB,KAAgC,IAAnC,EAAwC,CAAK,CAdc,CAcZ;;;AAE7C,MAAIC,IAAI,GAAC,EAAT;;AAEF,OAAK,IAAIC,KAAK,GAAGP,SAAjB,EAA4BO,KAAK,IAAIN,OAArC,EAA8CM,KAAK,CAACC,WAAN,CAAkBD,KAAK,CAACT,WAAN,KAAsB,CAAxC,CAA9C,EAA0F;AACvFI,IAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACA1B,IAAAA,KAAK,CAACgC,GAAN,CAAU,iDAA+C,wBAAzD,EAAmFC,WAAW,CAACtB,QAAD,CAA9F,EACCuB,IADD,CACOC,GAAD,IAAS;AAEXN,MAAAA,IAAI,CAACO,MAAL,CAAYD,GAAG,CAACN,IAAhB;AAEH,KALD,EAMCQ,KAND,CAMOC,GAAG,IAAI;AACVb,MAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ,EAAgB,eAAhB;AAEA,KATJ;AAUF;;AACDrC,EAAAA,KAAK,CAACS,QAAN,CAAe;AACZH,IAAAA,IAAI,EAAEJ,YADM;AAEZK,IAAAA,OAAO,EAAEqB;AAFG,GAAf;AAIDJ,EAAAA,OAAO,CAACC,GAAR,CAAYzB,KAAK,CAACU,QAAN,EAAZ,EAA6B,sBAA7B;AACC,CApCQ,C,CAqCT;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAIA;;AACA,OAAO,MAAMsB,WAAW,GAAGtB,QAAQ,IAAI;AACnC;AACA,QAAMiB,KAAK,GAAGjB,QAAQ,GAAGgB,IAAX,CAAgBY,YAA9B,CAFmC,CAInC;;AACA,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf,CALmC,CAWnC;;AACA,MAAGb,KAAH,EAAU;AACPY,IAAAA,MAAM,CAACC,OAAP,CAAe,eAAf,IAAmC,WAAUb,KAAM,GAAnD;AACF;;AAEJ,SAAOY,MAAP;AACA,CAjBM","sourcesContent":["import axios from 'axios';\r\nimport store from '../store'\r\n import { DATE_SELECT, SALT_RETURNS} from './types';\r\n // Date is select\r\n export const dateSelect = (start , end) => {\r\n   \r\n     return {\r\n                 type: DATE_SELECT,\r\n                 payload:{start,end}\r\n              };\r\n     // console.log(\"start \",start);\r\n     // console.log(\"end \",end);\r\n     \r\n }\r\n \r\n // Clear date\r\n  export const saltReturns =  () => (dispatch, getState) => {\r\n     \r\n    const time =new Date().toDateString();\r\n    let Month= String(parseInt(store.getState().date.start.getMonth()+1));\r\n    let year=String(store.getState().date.start.getFullYear());\r\n\r\n    let strTime= year+'-'+Month+'-0';\r\n    let startYear=new Date(strTime);\r\n    let endYear=store.getState().date.end;\r\n    \r\n    console.log(startYear,\"startYear\");\r\n    \r\n\r\n\r\n if(store.getState().auth.token !== null){   }  // console.log(\"ppppppppppppppppp\");}\r\n\r\n   let data=[];\r\n\r\n for (let index = startYear; index <= endYear; index.setFullYear(index.getFullYear() + 1)) {\r\n    console.log(\"pppppppppppppppppppppppppppppppppppppppp\");\r\n    axios.get('http://127.0.0.1:5000/api/saltReturns/apply/'+'${index.getFullYear()}', tokenConfig(getState))\r\n    .then((res) => { \r\n        \r\n        data.concat(res.data);\r\n       \r\n    })\r\n    .catch(err => {\r\n        console.log(err,\"error in data\");\r\n       \r\n       });\r\n }\r\n store.dispatch({\r\n    type: SALT_RETURNS,\r\n    payload: data\r\n})\r\nconsole.log(store.getState(),\"the store from date \"); \r\n};\r\n//  //Clear date\r\n//  export const saltReturns =  () => (dispatch, getState) => {\r\n     \r\n//      const time =new Date().toDateString();\r\n\r\n//  // if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\r\n//      axios.get('http://127.0.0.1:5000/api/saltReturns', tokenConfig(getState))\r\n//     .then((res) => { \r\n        \r\n//         // console.log(res,\"res\");\r\n//     store.dispatch({\r\n//         type: SALT_RETURNS,\r\n//         payload: res.data\r\n//     })})\r\n//     .catch(err => {\r\n//         console.log(err,\"error in data\");\r\n       \r\n//        });\r\n\r\n//        console.log(store.getState(),\"the store \");\r\n// };\r\n\r\n\r\n\r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n    // Get token from localstorage\r\n    const token = getState().auth.access_token;\r\n  \r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"multipart/form-data\"\r\n        }\r\n    }\r\n\r\n    // If token, add to headers\r\n    if(token) {\r\n       config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n    }\r\n\r\n return config;\r\n}"]},"metadata":{},"sourceType":"module"}