{"ast":null,"code":"import axios from 'axios';\nimport store from '../store';\nimport { DATE_SELECT, SALT_RETURNS } from './types'; // Date is select\n\nexport const dateSelect = (start, end) => {\n  return {\n    type: DATE_SELECT,\n    payload: {\n      start,\n      end\n    }\n  }; // console.log(\"start \",start);\n  // console.log(\"end \",end);\n}; // Clear date\n\nexport const saltReturns = () => (dispatch, getState) => {\n  const time = new Date().toDateString();\n  axios.get('http://127.0.0.1:5000/api/saltReturns/apply', tokenConfig(getState)).then(res => {\n    console.log(res, \"res\");\n    store.dispatch({\n      type: SALT_RETURNS,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(err, \"error in data\");\n  });\n}; // Setup config/headers and token\n\nexport const tokenConfig = getState => {\n  // Get token from localstorage\n  const token = getState().auth.token; // Headers\n\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }; // If token, add to headers\n\n  if (token) {\n    config.headers[\"Authorization\"] = ` Bearer ${token} `;\n  }\n\n  return config;\n};","map":{"version":3,"sources":["C:/react/SaltStack/frontend/src/actions/date.js"],"names":["axios","store","DATE_SELECT","SALT_RETURNS","dateSelect","start","end","type","payload","saltReturns","dispatch","getState","time","Date","toDateString","get","tokenConfig","then","res","console","log","data","catch","err","token","auth","config","headers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACC,SAASC,WAAT,EAAsBC,YAAtB,QAAyC,SAAzC,C,CACA;;AACA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAD,EAASC,GAAT,KAAiB;AAEvC,SAAO;AACKC,IAAAA,IAAI,EAAEL,WADX;AAEKM,IAAAA,OAAO,EAAC;AAACH,MAAAA,KAAD;AAAOC,MAAAA;AAAP;AAFb,GAAP,CAFuC,CAMvC;AACA;AAEH,CATM,C,CAWP;;AACA,OAAO,MAAMG,WAAW,GAAI,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACtD,QAAMC,IAAI,GAAE,IAAIC,IAAJ,GAAWC,YAAX,EAAZ;AACAd,EAAAA,KAAK,CAACe,GAAN,CAAU,6CAAV,EAAyDC,WAAW,CAACL,QAAD,CAApE,EACAM,IADA,CACMC,GAAD,IAAS;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAgB,KAAhB;AACjBjB,IAAAA,KAAK,CAACS,QAAN,CAAe;AACXH,MAAAA,IAAI,EAAEJ,YADK;AAEXK,MAAAA,OAAO,EAAEU,GAAG,CAACG;AAFF,KAAf;AAGG,GALF,EAMAC,KANA,CAMMC,GAAG,IAAI;AACVJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ,EAAgB,eAAhB;AACA,GARH;AASJ,CAXO,C,CAeR;;AACA,OAAO,MAAMP,WAAW,GAAGL,QAAQ,IAAI;AACnC;AACA,QAAMa,KAAK,GAAGb,QAAQ,GAAGc,IAAX,CAAgBD,KAA9B,CAFmC,CAInC;;AACA,QAAME,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf,CALmC,CAWnC;;AACA,MAAGH,KAAH,EAAU;AACPE,IAAAA,MAAM,CAACC,OAAP,CAAe,eAAf,IAAmC,WAAUH,KAAM,GAAnD;AACF;;AAEJ,SAAOE,MAAP;AACA,CAjBM","sourcesContent":["import axios from 'axios';\r\nimport store from '../store'\r\n import { DATE_SELECT, SALT_RETURNS} from './types';\r\n // Date is select\r\n export const dateSelect = (start , end) => {\r\n   \r\n     return {\r\n                 type: DATE_SELECT,\r\n                 payload:{start,end}\r\n              };\r\n     // console.log(\"start \",start);\r\n     // console.log(\"end \",end);\r\n     \r\n }\r\n \r\n // Clear date\r\n export const saltReturns =  () => (dispatch, getState) => {\r\n     const time =new Date().toDateString();\r\n     axios.get('http://127.0.0.1:5000/api/saltReturns/apply', tokenConfig(getState))\r\n    .then((res) => { console.log(res,\"res\");\r\n    store.dispatch({\r\n        type: SALT_RETURNS,\r\n        payload: res.data\r\n    })})\r\n    .catch(err => {\r\n        console.log(err,\"error in data\");\r\n       });\r\n};\r\n\r\n\r\n\r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n    // Get token from localstorage\r\n    const token = getState().auth.token;\r\n  \r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\"\r\n        }\r\n    }\r\n\r\n    // If token, add to headers\r\n    if(token) {\r\n       config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n    }\r\n\r\n return config;\r\n}"]},"metadata":{},"sourceType":"module"}