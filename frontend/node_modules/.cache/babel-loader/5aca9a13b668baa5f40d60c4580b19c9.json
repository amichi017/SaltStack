{"ast":null,"code":"import _objectWithoutProperties from \"/home/avraham/SaltStack/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/avraham/SaltStack/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Dashboard from \"./Dashboard\";\nimport LoginForm from './Component/auth/LoginForm';\nimport RegisterForm from './Component/RegisterForm';\nimport { createStore } from 'redux';\nimport appReducer from './reducers/index';\nimport { Provider } from 'react-redux';\nimport { loadUser } from './actions/authActions';\nimport { Store } from '@material-ui/icons';\nimport store from './store';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types'; // This example has 3 pages: a public page, a protected\n// page, and a login screen. In order to see the protected\n// page, you must first login. Pretty standard stuff.\n//\n// First, visit the public page. Then, visit the protected\n// page. You're not yet logged in, so you are redirected\n// to the login page. After you login, you are redirected\n// back to the protected page.\n//\n// Notice the URL change each time. If you click the back\n// button at this point, would you expect to go back to the\n// login page? No! You're already logged in. Try it out,\n// and you'll see you go back to the page you visited\n// just *before* logging in, the public page.\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loggedIn: false // user is not logged in\n\n    };\n  }\n\n  componentDidMount() {\n    // store.dispatch(loadUser());\n    const store = createStore(appReducer);\n  }\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/register\",\n      component: RegisterForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      component: LoginForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      exact: true,\n      isLoggedIn: this.state.loggedIn,\n      path: \"/\",\n      component: Dashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"*\",\n      component: () => React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"404 NOT FOUND\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })));\n  }\n\n}\n\nApp.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  token: PropTypes.object.isRequired\n};\n\nconst PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      isLoggedIn = _ref.isLoggedIn,\n      props = _objectWithoutProperties(_ref, [\"component\", \"isLoggedIn\"]);\n\n  return React.createElement(Route, Object.assign({}, props, {\n    render: props => isLoggedIn === true ? React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: props.location\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {})(App);","map":{"version":3,"sources":["/home/avraham/SaltStack/frontend/src/App.js"],"names":["React","Component","BrowserRouter","Route","Switch","Redirect","Dashboard","LoginForm","RegisterForm","createStore","appReducer","Provider","loadUser","Store","store","connect","PropTypes","App","state","loggedIn","componentDidMount","render","propTypes","isAuthenticated","bool","token","object","isRequired","PrivateRoute","component","isLoggedIn","props","pathname","from","location","mapStateToProps","auth"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,aAAR,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCC,QAAtC,QAAsD,kBAAtD;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA,MAAMC,GAAN,SAAkBhB,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAO1BiB,KAP0B,GAOlB;AACNC,MAAAA,QAAQ,EAAE,KADJ,CACU;;AADV,KAPkB;AAAA;;AAC1BC,EAAAA,iBAAiB,GAAE;AACjB;AACD,UAAMN,KAAK,GAAGL,WAAW,CAACC,UAAD,CAAzB;AAEA;;AAYDW,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,SAAS,EAAGb,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAGD,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,YAAD;AAAc,MAAA,KAAK,MAAnB;AAAoB,MAAA,UAAU,EAAG,KAAKW,KAAL,CAAWC,QAA5C;AAAuD,MAAA,IAAI,EAAC,GAA5D;AAAgE,MAAA,SAAS,EAAEb,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAE,MACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,CADF;AAeD;;AAjCyB;;AAAtBW,G,CAWGK,S,GAAY;AACjBC,EAAAA,eAAe,EAAEP,SAAS,CAACQ,IADV;AAEjBC,EAAAA,KAAK,EAAET,SAAS,CAACU,MAAV,CAAiBC;AAFP,C;;AA2BrB,MAAMC,YAAY,GAAG,UACrB;AAAA,MADmC3B,SACnC,QADwB4B,SACxB;AAAA,MAD6CC,UAC7C,QAD6CA,UAC7C;AAAA,MAD4DC,KAC5D;;AACE,SACE,oBAAC,KAAD,oBACMA,KADN;AAEE,IAAA,MAAM,EAAIA,KAAD,IAAWD,UAAU,KAAK,IAAf,GAChB,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADgB,GAEhB,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAACC,QAAAA,QAAQ,EAAE,QAAX;AAAqBd,QAAAA,KAAK,EAAE;AAACe,UAAAA,IAAI,EAAEF,KAAK,CAACG;AAAb;AAA5B,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAQD,CAVD;;AAaA,MAAMC,eAAe,GAAGjB,KAAK,KAAK;AAChCkB,EAAAA,IAAI,EAAElB,KAAK,CAACkB;AADoB,CAAL,CAA7B;;AAIA,eAAerB,OAAO,CACpBoB,eADoB,EAEpB,EAFoB,CAAP,CAGblB,GAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Dashboard from \"./Dashboard\";\nimport LoginForm from './Component/auth/LoginForm';\nimport RegisterForm from './Component/RegisterForm';\nimport { createStore } from 'redux';\nimport appReducer from './reducers/index';\nimport {Provider} from 'react-redux';\nimport { loadUser } from './actions/authActions';\nimport { Store } from '@material-ui/icons';\nimport store from './store';\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// This example has 3 pages: a public page, a protected\n// page, and a login screen. In order to see the protected\n// page, you must first login. Pretty standard stuff.\n//\n// First, visit the public page. Then, visit the protected\n// page. You're not yet logged in, so you are redirected\n// to the login page. After you login, you are redirected\n// back to the protected page.\n//\n// Notice the URL change each time. If you click the back\n// button at this point, would you expect to go back to the\n// login page? No! You're already logged in. Try it out,\n// and you'll see you go back to the page you visited\n// just *before* logging in, the public page.\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nclass App extends Component {\n  componentDidMount(){\n    // store.dispatch(loadUser());\n   const store = createStore(appReducer);\n\n  };\n  \n  state = {\n    loggedIn: false,// user is not logged in\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    token: PropTypes.object.isRequired\n  };\n \n \n  render() {\n    return (\n      <BrowserRouter>\n          <Switch>\n              <Route path=\"/register\" component={ RegisterForm}/>\n              <Route path=\"/login\" component={ LoginForm}/>\n              <PrivateRoute exact isLoggedIn={ this.state.loggedIn } path=\"/\" component={Dashboard} />\n              <Route path=\"*\" component={() => \n                <h1>\n                  404 NOT FOUND\n                  </h1>} />\n            </Switch>  \n      </BrowserRouter>\n      \n             \n    );\n  }\n}\n\n\n\nconst PrivateRoute = ({ component: Component,isLoggedIn, ...props }) => \n{\n  return (\n    <Route\n      {...props}\n      render= {(props) => isLoggedIn === true\n        ? <Component {...props} />\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\n    />\n  )\n}\n\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { }\n)(App)\n\n"]},"metadata":{},"sourceType":"module"}