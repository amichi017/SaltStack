{"ast":null,"code":"var _jsxFileName = \"/home/avraham/SaltStack/frontend/src/Component/Table.js\";\nimport React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { dateSelect } from '../actions/date';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer, Tooltip, Legend } from 'recharts';\nimport store from '../store';\nimport Title from './Title';\nimport { saltReturns } from '../actions/date';\nimport { Store } from '@material-ui/icons'; // import SaltData from'../demo/jsonPars.json';\n// Generate Sales Data\n\nconst time = str => {\n  const year = str.slice(0, 4);\n  const month = String(parseInt(str.slice(4, 6)) - 1);\n  const day = str.slice(6, 8);\n  const hower = str.slice(8, 10);\n  const minet = str.slice(10, 12);\n  return String(hower) + \":\" + String(minet);\n};\n\nfunction createData(time, Succeeded, Faile, amount) {\n  return {\n    time,\n    Succeeded,\n    Faile,\n    amount\n  };\n}\n\nconst INIT_DATA = [createData('00:00', 0, 0, 0), createData('03:00', 0, 0, 0), createData('06:00', 0, 0, 0), createData('09:00', 0, 0, 0), createData('12:00', 0, 0, 0), createData('15:00', 0, 0, 0), createData('18:00', 0, 0, 0), createData('21:00', 0, 0, 0), createData('24:00', 0, 0, 0)];\n\nconst demoOnClick = e => {// if(e){if(e.activeLabel){console.log(e.activeLabel);}}\n};\n\nconst parseNumber = str => {\n  let hower = parseInt(str.slice(8, 10));\n\n  if (hower <= 3) {\n    return \"03:00\";\n  }\n\n  ;\n\n  if (hower <= 6) {\n    return \"06:00\";\n  }\n\n  ;\n\n  if (hower <= 9) {\n    return \"09:00\";\n  }\n\n  ;\n\n  if (hower <= 12) {\n    return \"12:00\";\n  }\n\n  ;\n\n  if (hower <= 15) {\n    return \"15:00\";\n  }\n\n  ;\n\n  if (hower <= 18) {\n    return \"18:00\";\n  }\n\n  ;\n\n  if (hower <= 21) {\n    return \"21:00\";\n  }\n\n  ;\n\n  if (hower <= 24) {\n    return \"24:00\";\n  }\n\n  ;\n  return \"00:00\";\n};\n\nclass Chart extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      start: new Date(),\n      end: new Date(),\n      data: [{\n        time: \"00:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }, {\n        time: \"03:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }, {\n        time: \"06:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }, {\n        time: \"09:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }, {\n        time: \"12:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }, {\n        time: \"15:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }, {\n        time: \"18:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }, {\n        time: \"21:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }, {\n        time: \"24:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }]\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.date.start.toLocaleDateString() !== nextProps.date.start.toLocaleDateString() || this.props.date.end.toLocaleDateString() !== nextProps.date.end.toLocaleDateString()) {\n      this.setState({\n        start: nextProps.date.start,\n        end: nextProps.date.end\n      });\n      const start = store.getState().date.start;\n      const end = store.getState().date.end;\n      let temp = [{\n        time: \"00:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }, {\n        time: \"03:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }, {\n        time: \"06:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }, {\n        time: \"09:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }, {\n        time: \"12:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }, {\n        time: \"15:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }, {\n        time: \"18:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }, {\n        time: \"21:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }, {\n        time: \"24:00\",\n        Succeeded: 0,\n        Faile: 0,\n        amount: 0\n      }];\n      nextProps.saltReturns.saltReturns.filter(item => {\n        return item.full_ret.fun === \"state.apply\";\n      }).filter(item => {\n        let str = item.jid.slice(0, 4) + \"-\" + String(parseInt(item.jid.slice(4, 6)) - 1) + \"-\" + item.jid.slice(6, 8);\n        let time = new Date(str);\n\n        if (time >= start && time <= end) {\n          return item;\n        }\n      }).forEach(item => {\n        if (parseNumber(item.full_ret.jid) === \"03:00\") {\n          item.full_ret.success === true ? temp[1].Succeeded++ : temp[1].Faile++;\n        }\n\n        ;\n\n        if (parseNumber(item.full_ret.jid) === \"06:00\") {\n          item.full_ret.success === true ? temp[2].Succeeded++ : temp[2].Faile++;\n        }\n\n        ;\n\n        if (parseNumber(item.full_ret.jid) === \"09:00\") {\n          item.full_ret.success === true ? temp[3].Succeeded++ : temp[3].Faile++;\n        }\n\n        ;\n\n        if (parseNumber(item.full_ret.jid) === \"12:00\") {\n          item.full_ret.success === true ? temp[4].Succeeded++ : temp[4].Faile++;\n        }\n\n        ;\n\n        if (parseNumber(item.full_ret.jid) === \"15:00\") {\n          item.full_ret.success === true ? temp[5].Succeeded++ : temp[5].Faile++;\n        }\n\n        ;\n\n        if (parseNumber(item.full_ret.jid) === \"18:00\") {\n          item.full_ret.success === true ? temp[6].Succeeded++ : temp[6].Faile++;\n        }\n\n        ;\n\n        if (parseNumber(item.full_ret.jid) === \"21:00\") {\n          item.full_ret.success === true ? temp[7].Succeeded++ : temp[7].Faile++;\n        }\n\n        ;\n\n        if (parseNumber(item.full_ret.jid) === \"24:00\") {\n          item.full_ret.success === true ? temp[8].Succeeded++ : temp[8].Faile++;\n        }\n\n        ;\n      });\n      this.state.data = temp; //console.log(\"this.state.data                             \",this.state.data);\n      //  console.log(\"state                               \",store.getState());\n    }\n  }\n\n  componentWillUpdate() {\n    const start = store.getState().date.start;\n    const end = store.getState().date.end; //console.log(store.getState());\n    // while (store.getState().saltReturns.saltReturns === null) {  }\n\n    let temp = [{\n      time: \"00:00\",\n      Succeeded: 0,\n      Faile: 0,\n      amount: 0\n    }, {\n      time: \"03:00\",\n      Succeeded: 0,\n      Faile: 0,\n      amount: 0\n    }, {\n      time: \"06:00\",\n      Succeeded: 0,\n      Faile: 0,\n      amount: 0\n    }, {\n      time: \"09:00\",\n      Succeeded: 0,\n      Faile: 0,\n      amount: 0\n    }, {\n      time: \"12:00\",\n      Succeeded: 0,\n      Faile: 0,\n      amount: 0\n    }, {\n      time: \"15:00\",\n      Succeeded: 0,\n      Faile: 0,\n      amount: 0\n    }, {\n      time: \"18:00\",\n      Succeeded: 0,\n      Faile: 0,\n      amount: 0\n    }, {\n      time: \"21:00\",\n      Succeeded: 0,\n      Faile: 0,\n      amount: 0\n    }, {\n      time: \"24:00\",\n      Succeeded: 0,\n      Faile: 0,\n      amount: 0\n    }];\n    store.getState().saltReturns.saltReturns.filter(item => {\n      return item.full_ret.fun === \"state.apply\";\n    }).filter(item => {\n      let str = item.jid.slice(0, 4) + \"-\" + String(parseInt(item.jid.slice(4, 6)) - 1) + \"-\" + item.jid.slice(6, 8);\n      let time = new Date(str);\n\n      if (time >= start && time <= end) {\n        return item;\n      }\n    }).forEach(item => {\n      if (parseNumber(item.full_ret.jid) === \"03:00\") {\n        item.full_ret.success === true ? temp[1].Succeeded++ : temp[1].Faile++;\n      }\n\n      ;\n\n      if (parseNumber(item.full_ret.jid) === \"06:00\") {\n        item.full_ret.success === true ? temp[2].Succeeded++ : temp[2].Faile++;\n      }\n\n      ;\n\n      if (parseNumber(item.full_ret.jid) === \"09:00\") {\n        item.full_ret.success === true ? temp[3].Succeeded++ : temp[3].Faile++;\n      }\n\n      ;\n\n      if (parseNumber(item.full_ret.jid) === \"12:00\") {\n        item.full_ret.success === true ? temp[4].Succeeded++ : temp[4].Faile++;\n      }\n\n      ;\n\n      if (parseNumber(item.full_ret.jid) === \"15:00\") {\n        item.full_ret.success === true ? temp[5].Succeeded++ : temp[5].Faile++;\n      }\n\n      ;\n\n      if (parseNumber(item.full_ret.jid) === \"18:00\") {\n        item.full_ret.success === true ? temp[6].Succeeded++ : temp[6].Faile++;\n      }\n\n      ;\n\n      if (parseNumber(item.full_ret.jid) === \"21:00\") {\n        item.full_ret.success === true ? temp[7].Succeeded++ : temp[7].Faile++;\n      }\n\n      ;\n\n      if (parseNumber(item.full_ret.jid) === \"24:00\") {\n        item.full_ret.success === true ? temp[8].Succeeded++ : temp[8].Faile++;\n      }\n\n      ;\n    });\n    this.state.data = temp;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      style: {\n        paddingLeft: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, this.state.start.toLocaleDateString() === this.state.end.toLocaleDateString() ? this.state.start.toLocaleDateString() : this.state.start.toLocaleDateString() + ' - ' + this.state.end.toLocaleDateString()), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LineChart, {\n      onClick: demoOnClick,\n      data: this.state.data,\n      margin: {\n        top: 16,\n        right: 16,\n        bottom: 0,\n        left: 24\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      angle: 270,\n      position: \"left\",\n      style: {\n        textAnchor: 'middle'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 29\n      }\n    }, \"(A/T)\")), /*#__PURE__*/React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"Faile\",\n      stroke: \"#ff6666\",\n      onClick: demoOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"Succeeded\",\n      stroke: \"#82ca9d\",\n      onClick: demoOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    saltReturns: state.saltReturns,\n    date: state.date\n  };\n};\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    dateSelect: dateSelect\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps)(Chart);","map":{"version":3,"sources":["/home/avraham/SaltStack/frontend/src/Component/Table.js"],"names":["React","bindActionCreators","connect","dateSelect","LineChart","Line","XAxis","YAxis","Label","ResponsiveContainer","Tooltip","Legend","store","Title","saltReturns","Store","time","str","year","slice","month","String","parseInt","day","hower","minet","createData","Succeeded","Faile","amount","INIT_DATA","demoOnClick","e","parseNumber","Chart","PureComponent","constructor","props","state","start","Date","end","data","componentWillReceiveProps","nextProps","date","toLocaleDateString","setState","getState","temp","filter","item","full_ret","fun","jid","forEach","success","componentWillUpdate","render","paddingLeft","top","right","bottom","left","textAnchor","mapStateToProps","matchDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {dateSelect} from '../actions/date';\nimport { LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    Label,\n    ResponsiveContainer,\n    Tooltip,\n    Legend\n} from 'recharts';\nimport store from '../store';\nimport Title from './Title';\nimport { saltReturns } from '../actions/date';\nimport { Store } from '@material-ui/icons';\n// import SaltData from'../demo/jsonPars.json';\n// Generate Sales Data\n\n\nconst time =(str)=>{\n    const year =str.slice(0,4);\n    const month =String(parseInt(str.slice(4,6))-1);\n    const day =str.slice(6,8);\n    const hower= str.slice(8,10);\n\n    const minet=str.slice(10,12);\n    return String(hower)+\":\"+String(minet);\n\n}\nfunction createData(time,Succeeded,Faile, amount) {\n    return { time,Succeeded,Faile, amount };\n}\n\nconst INIT_DATA = [\n    createData('00:00',0,0, 0),\n    createData('03:00',0,0, 0),\n    createData('06:00',0,0, 0),\n    createData('09:00',0,0, 0),\n    createData('12:00',0,0, 0),\n    createData('15:00',0,0, 0),\n    createData('18:00',0,0, 0),\n    createData('21:00',0,0, 0),\n    createData('24:00',0,0, 0),\n];\nconst demoOnClick= (e)=>{\n    // if(e){if(e.activeLabel){console.log(e.activeLabel);}}\n};\nconst parseNumber= (str)=>{\n    let hower= parseInt(str.slice(8,10));\n    if(hower<=3){return \"03:00\"};\n    if(hower<=6){return \"06:00\"};\n    if(hower<=9){return \"09:00\"};\n    if(hower<=12){return \"12:00\"};\n    if(hower<=15){return \"15:00\"};\n    if(hower<=18){return \"18:00\"};\n    if(hower<=21){return \"21:00\"};\n    if(hower<=24){return \"24:00\"};\n    return \"00:00\";\n\n};\n\n\n\nclass Chart extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            start: new Date(),\n            end:new Date(),\n            data:  [{ time:\"00:00\",Succeeded:0,Faile:0, amount:0 },\n                { time:\"03:00\",Succeeded:0,Faile:0, amount:0 },\n                { time:\"06:00\",Succeeded:0,Faile:0, amount:0 },\n                { time:\"09:00\",Succeeded:0,Faile:0, amount:0 },\n                { time:\"12:00\",Succeeded:0,Faile:0, amount:0 },\n                { time:\"15:00\",Succeeded:0,Faile:0, amount:0 },\n                { time:\"18:00\",Succeeded:0,Faile:0, amount:0 },\n                { time:\"21:00\",Succeeded:0,Faile:0, amount:0 },\n                { time:\"24:00\",Succeeded:0,Faile:0, amount:0 },]\n        };\n    }\n    componentWillReceiveProps(nextProps) {\n        if( (((this.props.date.start.toLocaleDateString()!== nextProps.date.start.toLocaleDateString()) || (this.props.date.end.toLocaleDateString()!== nextProps.date.end.toLocaleDateString() )))){\n            this.setState({start:nextProps.date.start,end:nextProps.date.end});\n            const start=store.getState().date.start;\n            const end=store.getState().date.end;\n            let temp=[\n                { time:\"00:00\",Succeeded:0,Faile:0, amount:0 },\n                { time:\"03:00\",Succeeded:0,Faile:0, amount:0 },\n                { time:\"06:00\",Succeeded:0,Faile:0, amount:0 },\n                { time:\"09:00\",Succeeded:0,Faile:0, amount:0 },\n                { time:\"12:00\",Succeeded:0,Faile:0, amount:0 },\n                { time:\"15:00\",Succeeded:0,Faile:0, amount:0 },\n                { time:\"18:00\",Succeeded:0,Faile:0, amount:0 },\n                { time:\"21:00\",Succeeded:0,Faile:0, amount:0 },\n                { time:\"24:00\",Succeeded:0,Faile:0, amount:0 },\n            ];\n            nextProps.saltReturns.saltReturns.filter((item)=>{return item.full_ret.fun === \"state.apply\"}).filter((item)=>{\n                let str=item.jid.slice(0,4)+\"-\"+String(parseInt(item.jid.slice(4,6))-1)+\"-\"+item.jid.slice(6,8);\n                let time=new Date(str);\n                if(time >= start && time<= end){return item;}\n            }).forEach(item => {\n                if(parseNumber(item.full_ret.jid)===\"03:00\")\n                { item.full_ret.success === true ?(temp[1].Succeeded++):(temp[1].Faile++)};\n                if(parseNumber(item.full_ret.jid)===\"06:00\")\n                { item.full_ret.success === true ?(temp[2].Succeeded++):(temp[2].Faile++)};\n                if(parseNumber(item.full_ret.jid)===\"09:00\")\n                { item.full_ret.success === true ?(temp[3].Succeeded++):(temp[3].Faile++)};\n                if(parseNumber(item.full_ret.jid)===\"12:00\")\n                { item.full_ret.success === true ?(temp[4].Succeeded++):(temp[4].Faile++)};\n                if(parseNumber(item.full_ret.jid)===\"15:00\")\n                { item.full_ret.success === true ?(temp[5].Succeeded++):(temp[5].Faile++)};\n                if(parseNumber(item.full_ret.jid)===\"18:00\")\n                { item.full_ret.success === true ?(temp[6].Succeeded++):(temp[6].Faile++)};\n                if(parseNumber(item.full_ret.jid)===\"21:00\")\n                { item.full_ret.success === true ?(temp[7].Succeeded++):(temp[7].Faile++)};\n                if(parseNumber(item.full_ret.jid)===\"24:00\")\n                { item.full_ret.success === true ?(temp[8].Succeeded++):(temp[8].Faile++)};\n\n\n            });\n            this.state.data=temp;\n            //console.log(\"this.state.data                             \",this.state.data);\n            //  console.log(\"state                               \",store.getState());\n        }\n    }\n    componentWillUpdate() {\n        const start=store.getState().date.start;\n        const end=store.getState().date.end;\n        //console.log(store.getState());\n        // while (store.getState().saltReturns.saltReturns === null) {  }\n        let temp=\n            [{ time:\"00:00\",Succeeded:0,Faile:0, amount:0 },\n                { time:\"03:00\",Succeeded:0,Faile:0, amount:0 },\n                { time:\"06:00\",Succeeded:0,Faile:0, amount:0 },\n                { time:\"09:00\",Succeeded:0,Faile:0, amount:0 },\n                { time:\"12:00\",Succeeded:0,Faile:0, amount:0 },\n                { time:\"15:00\",Succeeded:0,Faile:0, amount:0 },\n                { time:\"18:00\",Succeeded:0,Faile:0, amount:0 },\n                { time:\"21:00\",Succeeded:0,Faile:0, amount:0 },\n                { time:\"24:00\",Succeeded:0,Faile:0, amount:0 },];\n        store.getState().saltReturns.saltReturns.filter((item)=>{return item.full_ret.fun === \"state.apply\"}).filter((item)=>{\n            let str=item.jid.slice(0,4)+\"-\"+String(parseInt(item.jid.slice(4,6))-1)+\"-\"+item.jid.slice(6,8);\n            let time=new Date(str);\n            if(time >= start && time<= end){return item;}\n        }).forEach(item => {\n            if(parseNumber(item.full_ret.jid)===\"03:00\")\n            { item.full_ret.success === true ?(temp[1].Succeeded++):(temp[1].Faile++)};\n            if(parseNumber(item.full_ret.jid)===\"06:00\")\n            { item.full_ret.success === true ?(temp[2].Succeeded++):(temp[2].Faile++)};\n            if(parseNumber(item.full_ret.jid)===\"09:00\")\n            { item.full_ret.success === true ?(temp[3].Succeeded++):(temp[3].Faile++)};\n            if(parseNumber(item.full_ret.jid)===\"12:00\")\n            { item.full_ret.success === true ?(temp[4].Succeeded++):(temp[4].Faile++)};\n            if(parseNumber(item.full_ret.jid)===\"15:00\")\n            { item.full_ret.success === true ?(temp[5].Succeeded++):(temp[5].Faile++)};\n            if(parseNumber(item.full_ret.jid)===\"18:00\")\n            { item.full_ret.success === true ?(temp[6].Succeeded++):(temp[6].Faile++)};\n            if(parseNumber(item.full_ret.jid)===\"21:00\")\n            { item.full_ret.success === true ?(temp[7].Succeeded++):(temp[7].Faile++)};\n            if(parseNumber(item.full_ret.jid)===\"24:00\")\n            { item.full_ret.success === true ?(temp[8].Succeeded++):(temp[8].Faile++)};\n        });\n        this.state.data= temp;\n\n    }\n    render(){\n        return (\n            <React.Fragment>\n                <Title style={{paddingLeft:5}}>{(this.state.start.toLocaleDateString() === this.state.end.toLocaleDateString())?this.state.start.toLocaleDateString():this.state.start.toLocaleDateString() + ' - '+ this.state.end.toLocaleDateString()}</Title>\n                <ResponsiveContainer>\n                    <LineChart\n                        onClick={demoOnClick}\n                        data={this.state.data}\n                        margin={{\n                            top: 16,\n                            right: 16,\n                            bottom: 0,\n                            left: 24,\n                        }}\n                    >\n                        <XAxis dataKey=\"time\">\n                        </XAxis>\n                        <YAxis>\n                            <Label angle={270} position=\"left\" style={{ textAnchor: 'middle' }}>\n                                (A/T)\n                            </Label>\n                        </YAxis>\n                        <Line type=\"monotone\" dataKey=\"Faile\" stroke=\"#ff6666\" onClick={demoOnClick} />\n                        <Line type=\"monotone\" dataKey=\"Succeeded\" stroke=\"#82ca9d\"  onClick={demoOnClick}/>\n                        <Legend />\n                        <Tooltip />\n                    </LineChart>\n                </ResponsiveContainer>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        saltReturns: state.saltReturns,\n        date: state.date\n    }\n}\n\nfunction matchDispatchToProps(dispatch){\n    return bindActionCreators({dateSelect: dateSelect}, dispatch);\n}\nexport default connect(mapStateToProps)(Chart);\n"]},"metadata":{},"sourceType":"module"}