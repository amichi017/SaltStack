{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\SaltStack\\\\frontend\\\\src\\\\Component\\\\SearchTime.js\";\nimport React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { DATE_SELECT } from \"../actions/types\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Typography, Button, Grid } from '@material-ui/core';\nimport Title from './Title';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount'; //import DateTime from 'react-datetime';\n\nimport { dateSelect } from '../actions/date.js';\nimport store from '../store'; // <DatePicker\n// disableFuture\n// openTo=\"year\"\n// id=\"date-picker-dialog\"\n// margin=\"normal\"\n// format=\"dd/MM/yyyy\"\n// label=\"Start\"\n// views={[\"year\", \"month\", \"date\"]}\n// KeyboardButtonProps={{\n//   'aria-label': 'change date',\n// }}\n// />\n\nclass Deposits extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDateChangeStart = this.handleDateChangeStart.bind(this);\n    this.handleDateChangeEnd = this.handleDateChangeEnd.bind(this);\n    this.dateIsChanged = this.dateIsChanged.bind(this);\n    this.state = {\n      start: this.props.date.start,\n      end: this.props.date.end,\n      date: null\n    };\n  } //   shouldComponentUpdate(nextProps, nextState) {\n  //   return this.state.value != nextState.value;\n  // }\n\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.date.start.toLocaleDateString() !== nextProps.date.start.toLocaleDateString() || this.props.date.end.toLocaleDateString() !== nextProps.date.end.toLocaleDateString()) {\n      this.setState({\n        start: this.props.date.start,\n        end: this.props.date.end,\n        date: null\n      }); // console.log(\"props                             \",this.props);\n      // console.log(\"state                               \",this.state);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  handleDateChangeStart(date) {\n    this.setState({\n      booleanStart: true,\n      start: date\n    });\n  }\n\n  handleDateChangeEnd(date) {\n    this.setState({\n      booleanEnd: true,\n      end: date\n    });\n  }\n\n  dateIsChanged() {\n    let start = this.state.start;\n    let end = this.state.end;\n    store.dispatch({\n      type: DATE_SELECT,\n      payload: {\n        start: start,\n        end: end\n      }\n    });\n    console.log(\"dateIsChanged\", store.getState().date);\n  } //onChange = date => this.setState({ date })\n\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"p\",\n      variant: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"space-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(KeyboardDatePicker, {\n      margin: \"normal\",\n      id: \"date-picker-dialog\",\n      label: \"Start Date\",\n      format: \"dd/MM/yyyy\",\n      value: this.state.start,\n      onChange: date => {\n        this.handleDateChangeStart(date);\n      },\n      KeyboardButtonProps: {\n        'aria-label': 'change date'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(KeyboardDatePicker, {\n      margin: \"normal\",\n      id: \"date-picker-dialog\",\n      label: \"End Date\",\n      format: \"dd/MM/yyyy\",\n      value: this.state.end,\n      onChange: date => {\n        this.handleDateChangeEnd(date);\n      },\n      KeyboardButtonProps: {\n        'aria-label': 'change date'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      style: {\n        flex: 1,\n        paddingTop: 25\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: this.dateIsChanged,\n      endIcon: React.createElement(SearchIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Search\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Search\"))))));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    date: state.date\n  };\n};\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    dateSelect: dateSelect\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps)(Deposits);","map":{"version":3,"sources":["C:/react/SaltStack/frontend/src/Component/SearchTime.js"],"names":["React","Link","DATE_SELECT","SearchIcon","Typography","Button","Grid","Title","DateFnsUtils","KeyboardDatePicker","MuiPickersUtilsProvider","DatePicker","bindActionCreators","connect","SupervisorAccountIcon","dateSelect","store","Deposits","Component","constructor","props","handleDateChangeStart","bind","handleDateChangeEnd","dateIsChanged","state","start","date","end","componentWillReceiveProps","nextProps","toLocaleDateString","setState","booleanStart","booleanEnd","dispatch","type","payload","console","log","getState","render","flex","paddingTop","mapStateToProps","ownProps","matchDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport {DATE_SELECT} from \"../actions/types\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {Typography,Button,Grid} from '@material-ui/core';\r\nimport Title from './Title';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {KeyboardDatePicker,MuiPickersUtilsProvider,DatePicker} from \"@material-ui/pickers\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\n//import DateTime from 'react-datetime';\r\nimport {dateSelect} from '../actions/date.js';\r\nimport store from '../store';\r\n// <DatePicker\r\n// disableFuture\r\n// openTo=\"year\"\r\n// id=\"date-picker-dialog\"\r\n// margin=\"normal\"\r\n// format=\"dd/MM/yyyy\"\r\n// label=\"Start\"\r\n// views={[\"year\", \"month\", \"date\"]}\r\n// KeyboardButtonProps={{\r\n//   'aria-label': 'change date',\r\n// }}\r\n\r\n// />\r\n\r\n\r\n\r\n\r\n\r\n class Deposits extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDateChangeStart = this.handleDateChangeStart.bind(this);\r\n    this.handleDateChangeEnd = this.handleDateChangeEnd.bind(this);\r\n    this.dateIsChanged = this.dateIsChanged.bind(this);\r\n  \r\n    this.state={start:this.props.date.start , end:this.props.date.end ,date:null};\r\n  \r\n  }\r\n//   shouldComponentUpdate(nextProps, nextState) {\r\n//   return this.state.value != nextState.value;\r\n// }\r\ncomponentWillReceiveProps(nextProps) {\r\n  if((this.props.date.start.toLocaleDateString()!== nextProps.date.start.toLocaleDateString()) || this.props.date.end.toLocaleDateString()!== nextProps.date.end.toLocaleDateString() ){ \r\n    this.setState({start:this.props.date.start , end:this.props.date.end ,date:null});\r\n  \r\n    // console.log(\"props                             \",this.props);\r\n    // console.log(\"state                               \",this.state);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n  handleDateChangeStart(date){\r\n    this.setState({booleanStart:true,start:date});\r\n  }\r\n    \r\n  \r\n  handleDateChangeEnd (date){\r\n   this.setState({booleanEnd:true,end:date});\r\n  }\r\n \r\n  dateIsChanged(){\r\n      let start=this.state.start;\r\n      let end=this.state.end;\r\n     \r\n      store.dispatch({\r\n        type: DATE_SELECT,\r\n        payload: {start:start,end:end}\r\n       } );\r\n       console.log(\"dateIsChanged\", store.getState().date);\r\n  }\r\n \r\n  //onChange = date => this.setState({ date })\r\n \r\n  render () {\r\n    return (\r\n      <React.Fragment>\r\n        <Typography component=\"p\" variant=\"h4\">\r\n\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid container justify=\"space-around\">\r\n            <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Start Date\"\r\n            format=\"dd/MM/yyyy\"\r\n            value={this.state.start}\r\n            onChange={(date)=>{this.handleDateChangeStart(date)}}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n\r\n          <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"End Date\"\r\n          format=\"dd/MM/yyyy\"\r\n          value={this.state.end}\r\n          onChange={(date)=>{this.handleDateChangeEnd(date)}}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n      \r\n      <Typography style={{flex: 1,paddingTop:25}}>\r\n      \r\n       \r\n       \r\n        <Button\r\n        variant=\"outlined\" color=\"primary\"\r\n        onClick={this.dateIsChanged}\r\n        endIcon={ <SearchIcon>Search</SearchIcon>}\r\n      >\r\n      Search\r\n      </Button>\r\n      </Typography>\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n\r\n        </Typography>\r\n       \r\n      </React.Fragment>\r\n    );\r\n  }\r\n    \r\n}\r\n\r\n const mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    date: state.date\r\n  }\r\n}\r\nfunction matchDispatchToProps(dispatch){\r\n  return bindActionCreators({dateSelect: dateSelect}, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps)(Deposits);"]},"metadata":{},"sourceType":"module"}