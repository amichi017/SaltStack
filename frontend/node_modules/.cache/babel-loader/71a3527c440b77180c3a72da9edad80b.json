{"ast":null,"code":"import axios from 'axios';\nimport { DATE_SELECT, SALT_RETURNS } from './types'; // Date is select\n\nexport const dateSelect = (start, end) => {\n  return {\n    type: DATE_SELECT,\n    payload: {\n      start,\n      end\n    }\n  }; // console.log(\"start \",start);\n  // console.log(\"end \",end);\n}; // Clear date\n\nexport const saltReturns = () => {\n  axios.get('\"http://127.0.0.1:5000/api/saltReturns\"').then(res => store.dispatch({\n    type: SALT_RETURNS,\n    payload: {\n      saltReturns: res.data\n    }\n  })); // .catch(err => {\n  //     dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\n  //     dispatch({\n  //         type: REGISTER_FAIL\n  //     })\n  //    })\n};","map":{"version":3,"sources":["C:/react/SaltStack/frontend/src/actions/date.js"],"names":["axios","DATE_SELECT","SALT_RETURNS","dateSelect","start","end","type","payload","saltReturns","get","then","res","store","dispatch","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEC,SAASC,WAAT,EAAsBC,YAAtB,QAAyC,SAAzC,C,CACA;;AACA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAD,EAASC,GAAT,KAAiB;AAEvC,SAAO;AACKC,IAAAA,IAAI,EAAEL,WADX;AAEKM,IAAAA,OAAO,EAAC;AAACH,MAAAA,KAAD;AAAOC,MAAAA;AAAP;AAFb,GAAP,CAFuC,CAMvC;AACA;AAEH,CATM,C,CAWP;;AACA,OAAO,MAAMG,WAAW,GAAI,MAAO;AAC/BR,EAAAA,KAAK,CAACS,GAAN,CAAU,yCAAV,EACAC,IADA,CACKC,GAAG,IAAIC,KAAK,CAACC,QAAN,CAAe;AACxBP,IAAAA,IAAI,EAAEJ,YADkB;AAExBK,IAAAA,OAAO,EAAE;AAACC,MAAAA,WAAW,EAACG,GAAG,CAACG;AAAjB;AAFe,GAAf,CADZ,EAD+B,CAMhC;AACA;AACA;AACA;AACA;AACA;AACH,CAZO","sourcesContent":["import axios from 'axios';\r\n\r\n import { DATE_SELECT, SALT_RETURNS} from './types';\r\n // Date is select\r\n export const dateSelect = (start , end) => {\r\n   \r\n     return {\r\n                 type: DATE_SELECT,\r\n                 payload:{start,end}\r\n              };\r\n     // console.log(\"start \",start);\r\n     // console.log(\"end \",end);\r\n     \r\n }\r\n \r\n // Clear date\r\n export const saltReturns =  ()  => {\r\n     axios.get('\"http://127.0.0.1:5000/api/saltReturns\"')\r\n    .then(res => store.dispatch({\r\n        type: SALT_RETURNS,\r\n        payload: {saltReturns:res.data}\r\n    }))\r\n    // .catch(err => {\r\n    //     dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\r\n    //     dispatch({\r\n    //         type: REGISTER_FAIL\r\n    //     })\r\n    //    })\r\n};"]},"metadata":{},"sourceType":"module"}