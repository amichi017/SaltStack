{"ast":null,"code":"import _objectWithoutProperties from \"/home/avraham/SaltStack/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/avraham/SaltStack/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Dashboard from \"./Dashboard\";\nimport LoginForm from './Component/auth/LoginForm';\nimport RegisterForm from './Component/auth/RegisterForm';\nimport { createStore } from 'redux';\nimport appReducer from './reducers/index';\nimport { Provider } from 'react-redux';\nimport { loadUser } from './actions/authActions';\nimport { Store, ExitToApp } from '@material-ui/icons';\nimport store from './store';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport Landing from './Landing';\n\nclass App extends Component {\n  componentDidMount() {\n    store.dispatch(loadUser());\n  }\n\n  render() {\n    const _this$props$auth = this.props.auth,\n          isAuthenticated = _this$props$auth.isAuthenticated,\n          user = _this$props$auth.user;\n    console.log(isAuthenticated, user);\n    if (!isAuthenticated) setTimeout({}, 10000);\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/\",\n      isLoggedIn: isAuthenticated,\n      component: Dashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      component: LoginForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"*\",\n      component: () => React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"404 NOT FOUND\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })));\n  }\n\n}\n\nApp.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nfunction PrivateRoute(_ref) {\n  let children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: ({\n      location\n    }) => store.auth.isAuthenticated ? children : React.createElement(Redirect, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          from: location\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, null)(App);","map":{"version":3,"sources":["/home/avraham/SaltStack/frontend/src/App.js"],"names":["React","Component","BrowserRouter","Route","Switch","Redirect","Dashboard","LoginForm","RegisterForm","createStore","appReducer","Provider","loadUser","Store","ExitToApp","store","connect","PropTypes","Landing","App","componentDidMount","dispatch","render","props","auth","isAuthenticated","user","console","log","setTimeout","propTypes","object","isRequired","PrivateRoute","children","rest","location","pathname","state","from","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,aAAR,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCC,QAAtC,QAAsD,kBAAtD;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,oBAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,GAAN,SAAkBlB,SAAlB,CAA4B;AAC1BmB,EAAAA,iBAAiB,GAAG;AAClBL,IAAAA,KAAK,CAACM,QAAN,CAAeT,QAAQ,EAAvB;AAED;;AAODU,EAAAA,MAAM,GAAG;AAAA,6BAE0B,KAAKC,KAAL,CAAWC,IAFrC;AAAA,UAECC,eAFD,oBAECA,eAFD;AAAA,UAEiBC,IAFjB,oBAEiBA,IAFjB;AAGPC,IAAAA,OAAO,CAACC,GAAR,CAAYH,eAAZ,EAA4BC,IAA5B;AACA,QAAG,CAACD,eAAJ,EACEI,UAAU,CAAC,EAAD,EAAI,KAAJ,CAAV;AACF,WACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAe,MAAA,KAAK,MAApB;AAAqB,MAAA,IAAI,EAAC,GAA1B;AAA8B,MAAA,UAAU,EAAGJ,eAA3C;AAA6D,MAAA,SAAS,EAAEnB,SAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAII,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAGC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAE,MACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADL,CADD;AAgBD;;AAjCyB;;AAAtBY,G,CAMGW,S,GAAY;AACjBN,EAAAA,IAAI,EAAEP,SAAS,CAACc,MAAV,CAAiBC;AADN,C;;AAgCrB,SAASC,YAAT,OAA6C;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAARC,IAAQ;;AAC3C,SACE,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KACNrB,KAAK,CAACS,IAAN,CAAWC,eAAX,GACES,QADF,GAGE,oBAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFG,QAAAA,QAAQ,EAAE,QADR;AAEFC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH;AAAR;AAFL,OADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAiBD;;AAED,MAAMI,eAAe,GAAGF,KAAK,KAAK;AAChCd,EAAAA,IAAI,EAAEc,KAAK,CAACd;AADoB,CAAL,CAA7B;;AAIA,eAAeR,OAAO,CACpBwB,eADoB,EAEpB,IAFoB,CAAP,CAGbrB,GAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Dashboard from \"./Dashboard\";\nimport LoginForm from './Component/auth/LoginForm';\nimport RegisterForm from './Component/auth/RegisterForm';\nimport { createStore } from 'redux';\nimport appReducer from './reducers/index';\nimport {Provider} from 'react-redux';\nimport { loadUser } from './actions/authActions';\nimport { Store, ExitToApp } from '@material-ui/icons';\nimport store from './store';\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport './App.css';\nimport Landing from './Landing';\n\nclass App extends Component {\n  componentDidMount() {\n    store.dispatch(loadUser());\n\n  }\n  \n  static propTypes = {\n    auth: PropTypes.object.isRequired\n  };\n\n\n  render() {\n    \n    const { isAuthenticated,user } = this.props.auth;\n    console.log(isAuthenticated,user);\n    if(!isAuthenticated)\n      setTimeout({},10000);\n    return (\n     <BrowserRouter>\n          <Switch>\n              <PrivateRoute  exact path=\"/\" isLoggedIn={ isAuthenticated } component={Dashboard} />\n\n              {/* <Route path=\"/register\" component={ RegisterForm}/> */}\n              <Route path=\"/login\" component={ LoginForm} />\n              <Route path=\"*\" component={() => \n                <h1>\n                  404 NOT FOUND\n                  </h1>} />\n            </Switch>  \n      </BrowserRouter>\n      \n             \n    );\n  }\n}\n\n\n\nfunction PrivateRoute({ children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        store.auth.isAuthenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(App);\n"]},"metadata":{},"sourceType":"module"}