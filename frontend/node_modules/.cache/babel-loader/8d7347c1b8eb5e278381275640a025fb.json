{"ast":null,"code":"import _objectWithoutProperties from \"/home/avraham/SaltStack/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/avraham/SaltStack/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Dashboard from \"./Dashboard\";\nimport LoginForm from './Component/LoginForm';\nimport RegisterForm from './Component/RegisterForm';\nimport { createStore } from 'redux';\nimport appReducer from './reducers/index';\nimport { Provider } from 'react-redux'; // This example has 3 pages: a public page, a protected\n// page, and a login screen. In order to see the protected\n// page, you must first login. Pretty standard stuff.\n//\n// First, visit the public page. Then, visit the protected\n// page. You're not yet logged in, so you are redirected\n// to the login page. After you login, you are redirected\n// back to the protected page.\n//\n// Notice the URL change each time. If you click the back\n// button at this point, would you expect to go back to the\n// login page? No! You're already logged in. Try it out,\n// and you'll see you go back to the page you visited\n// just *before* logging in, the public page.\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loggedIn: false // user is not logged in\n\n    };\n  }\n\n  render() {\n    return React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/protected\",\n      component: Protected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;\n\nconst PrivateRoute = (_ref) => {\n  let isLoggedIn = _ref.isLoggedIn,\n      props = _objectWithoutProperties(_ref, [\"isLoggedIn\"]);\n\n  isLoggedIn ? React.createElement(Route, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })) : React.createElement(Redirect, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  });\n};\n\nfunction PublicPage() {\n  return React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Public\");\n}\n\nfunction ProtectedPage() {\n  const store = createStore(appReducer);\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Dashboard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/avraham/SaltStack/frontend/src/App.js"],"names":["React","Component","Route","Switch","Redirect","Dashboard","LoginForm","RegisterForm","createStore","appReducer","Provider","App","state","loggedIn","render","Protected","Login","PrivateRoute","isLoggedIn","props","PublicPage","ProtectedPage","store"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAAQC,QAAR,QAAuB,aAAvB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BW,KAF0B,GAElB;AACNC,MAAAA,QAAQ,EAAE,KADJ,CACU;;AADV,KAFkB;AAAA;;AAM1BC,EAAAA,MAAM,GAAG;AAEP,WACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAyB,MAAA,SAAS,EAAEC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADJ;AAMD;;AAdyB;;AAkB5B,eAAeL,GAAf;;AAGA,MAAMM,YAAY,GAAG,UACrB;AAAA,MADwBC,UACxB,QADwBA,UACxB;AAAA,MADuCC,KACvC;;AACED,EAAAA,UAAU,GACN,oBAAC,KAAD,oBAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADM,GAEN,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAGD,CALD;;AAOA,SAASC,UAAT,GAAsB;AACpB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,SAASC,aAAT,GAAyB;AACvB,QAAMC,KAAK,GAAGd,WAAW,CAACC,UAAD,CAAzB;AAEA,SAAS,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEa,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAAT;AAGD","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Dashboard from \"./Dashboard\";\nimport LoginForm from './Component/LoginForm';\nimport RegisterForm from './Component/RegisterForm';\nimport { createStore } from 'redux';\nimport appReducer from './reducers/index';\nimport {Provider} from 'react-redux';\n\n\n// This example has 3 pages: a public page, a protected\n// page, and a login screen. In order to see the protected\n// page, you must first login. Pretty standard stuff.\n//\n// First, visit the public page. Then, visit the protected\n// page. You're not yet logged in, so you are redirected\n// to the login page. After you login, you are redirected\n// back to the protected page.\n//\n// Notice the URL change each time. If you click the back\n// button at this point, would you expect to go back to the\n// login page? No! You're already logged in. Try it out,\n// and you'll see you go back to the page you visited\n// just *before* logging in, the public page.\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nclass App extends Component {\n\n  state = {\n    loggedIn: false // user is not logged in\n  };\n\n  render() {\n\n    return (\n        <Switch>\n          <Route path=\"/protected\" component={Protected}/>\n          <Route path=\"/login\" component={Login}/>\n        </Switch>\n    );\n  }\n}\n\n\nexport default App;\n\n\nconst PrivateRoute = ({ isLoggedIn, ...props }) =>\n{\n  isLoggedIn \n    ? <Route { ...props } />\n    : <Redirect to=\"/login\" />\n}\n\nfunction PublicPage() {\n  return <h3>Public</h3>;\n}\n\nfunction ProtectedPage() {\n  const store = createStore(appReducer);\n\n  return ( <Provider store={store}>\n           <Dashboard />\n           </Provider> );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}