{"ast":null,"code":"import _slicedToArray from \"C:\\\\react\\\\SaltStack\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\react\\\\SaltStack\\\\frontend\\\\src\\\\Component\\\\Table.js\";\nimport axios from 'axios';\nimport React, { Component } from \"react\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport { SALT_RETURNS } from \"../actions/types\";\nimport store from '../store';\nimport { saltReturns } from '../actions/date';\nimport { forwardRef } from 'react'; // import MinionDialog from './MinionDialog';\n\nimport { AddBox, ArrowDownward, Check, ChevronLeft, ChevronRight, Clear, DeleteOutline, Edit, FilterList, FirstPage, LastPage, Remove, SaveAlt, Search, ViewColumn } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Switch from '@material-ui/core/Switch';\n\nconst time = str => {\n  const year = str.slice(0, 4);\n  const month = String(parseInt(str.slice(4, 6)) - 1);\n  const day = str.slice(6, 8);\n  const hower = str.slice(8, 10);\n  const minet = str.slice(10, 12);\n  return String(hower) + \":\" + String(minet);\n};\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => React.createElement(AddBox, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))),\n  Check: forwardRef((props, ref) => React.createElement(Check, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))),\n  Clear: forwardRef((props, ref) => React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }))),\n  Delete: forwardRef((props, ref) => React.createElement(Edit, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }))),\n  DetailPanel: forwardRef((props, ref) => React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))),\n  Edit: forwardRef((props, ref) => React.createElement(Edit, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }))),\n  Export: forwardRef((props, ref) => React.createElement(SaveAlt, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }))),\n  Filter: forwardRef((props, ref) => React.createElement(FilterList, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))),\n  FirstPage: forwardRef((props, ref) => React.createElement(FirstPage, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }))),\n  LastPage: forwardRef((props, ref) => React.createElement(LastPage, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }))),\n  NextPage: forwardRef((props, ref) => React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }))),\n  PreviousPage: forwardRef((props, ref) => React.createElement(ChevronLeft, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))),\n  ResetSearch: forwardRef((props, ref) => React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))),\n  Search: forwardRef((props, ref) => React.createElement(Search, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))),\n  SortArrow: forwardRef((props, ref) => React.createElement(ArrowDownward, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => React.createElement(Remove, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }))),\n  ViewColumn: forwardRef((props, ref) => React.createElement(ViewColumn, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })))\n};\nconst dataColumns = [{\n  title: 'status',\n  field: 'status',\n  //type: 'boolean'\n  cellStyle: x => ({\n    color: x === 'Succeeded' ? '#208000' : '#ff0000'\n  })\n}, {\n  title: 'Name',\n  field: 'name'\n}, {\n  title: 'ID',\n  field: 'id'\n}, {\n  title: 'Time',\n  field: 'time' //type: 'time'\n\n}];\nconst dataTable = [{\n  status: 'Faile',\n  name: 'sm-stud.jce.ac.il',\n  id: '5de92a636ff1ca1a1bcf3382',\n  time: time('20191205040346780161')\n}];\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content'\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nfunction MinionDialog() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const _React$useState3 = React.useState(true),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        fullWidth = _React$useState4[0],\n        setFullWidth = _React$useState4[1];\n\n  const _React$useState5 = React.useState('sm'),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        maxWidth = _React$useState6[0],\n        setMaxWidth = _React$useState6[1];\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleMaxWidthChange = event => {\n    setMaxWidth(event.target.value);\n  };\n\n  const handleFullWidthChange = event => {\n    setFullWidth(event.target.checked);\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Open max-width dialog\"), React.createElement(Dialog, {\n    fullWidth: fullWidth,\n    maxWidth: maxWidth,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"max-width-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"max-width-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Optional sizes\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"You can set my maximum width and whether to adapt or not.\"), React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"max-width\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"maxWidth\"), React.createElement(Select, {\n    autoFocus: true,\n    value: maxWidth,\n    onChange: handleMaxWidthChange,\n    inputProps: {\n      name: 'max-width',\n      id: 'max-width'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"false\"), React.createElement(MenuItem, {\n    value: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"xs\"), React.createElement(MenuItem, {\n    value: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"sm\"), React.createElement(MenuItem, {\n    value: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"md\"), React.createElement(MenuItem, {\n    value: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"lg\"), React.createElement(MenuItem, {\n    value: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"xl\"))), React.createElement(FormControlLabel, {\n    className: classes.formControlLabel,\n    control: React.createElement(Switch, {\n      checked: fullWidth,\n      onChange: handleFullWidthChange,\n      value: \"fullWidth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }),\n    label: \"Full width\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Close\"))));\n}\n\nclass Orders extends React.Component {\n  constructor(props) {\n    super(props);\n    this.selectedMiniom = this.selectedMiniom.bind(this);\n    store.dispatch(saltReturns());\n    this.state = {\n      saltReturns: dataTable,\n      Returns: null,\n      dialog: false\n    };\n  }\n\n  selectedMiniom(isExists, x) {\n    if (isExists === true && x === 1) {\n      return React.createElement(MinionDialog, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \" isopen=\", true, \">\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps, nextState) {\n    const start = store.getState().date.start;\n    const end = store.getState().date.end;\n\n    if (nextProps.saltReturns !== this.props.saltReturns || this.props.date.start.toLocaleDateString() !== nextProps.date.start.toLocaleDateString() || this.props.date.end.toLocaleDateString() !== nextProps.date.end.toLocaleDateString()) {\n      this.state.saltReturns = nextProps.saltReturns.saltReturns.filter(item => {\n        let str = item.jid.slice(0, 4) + \"-\" + String(parseInt(item.jid.slice(4, 6)) - 1) + \"-\" + item.jid.slice(6, 8);\n        let time = new Date(str);\n\n        if (time >= start && time <= end) {\n          return item;\n        }\n      }).map(item => {\n        return {\n          status: item.full_ret.success === true ? 'Succeeded' : 'Faile',\n          name: item.minion,\n          id: item._id,\n          // id:item.full_ret.id,\n          time: time(item.full_ret.jid) // return:item.return\n\n        };\n      });\n      this.state.Returns = nextProps.saltReturns.saltReturns.map(item => {\n        return {\n          Returns: item.full_ret.return\n        };\n      }); // this.setState({saltReturns:nextProps.saltReturns});\n      // console.log(this.state.Returns,\"kkkkkkkkkkkkkkkk\")\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(MaterialTable, {\n      title: \"minion_table\",\n      columns: dataColumns,\n      data: this.state.saltReturns,\n      icons: tableIcons,\n      options: {\n        exportButton: true,\n        filtering: true //rowStyle: rowData => ({\n        // color: (rowData.name==='su') ? '#daa9d9' : '#ff1a1a'})\n\n      },\n      actions: [{\n        icon: forwardRef((props, ref) => React.createElement(Edit, Object.assign({}, props, {\n          ref: ref,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }))),\n        tooltip: 'Save User',\n        onClick: (event, rowData) => {\n          React.createElement(MinionDialog, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 279\n            },\n            __self: this\n          });\n        }\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }), this.state.dialog === false ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    saltReturns: state.saltReturns,\n    date: state.date\n  };\n};\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    saltReturns: saltReturns\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps)(Orders);","map":{"version":3,"sources":["C:/react/SaltStack/frontend/src/Component/Table.js"],"names":["axios","React","Component","bindActionCreators","connect","MaterialTable","SALT_RETURNS","store","saltReturns","forwardRef","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","makeStyles","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","FormControlLabel","InputLabel","MenuItem","Select","Switch","time","str","year","slice","month","String","parseInt","day","hower","minet","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","dataColumns","title","field","cellStyle","x","color","dataTable","status","name","id","useStyles","theme","form","display","flexDirection","margin","width","formControl","marginTop","spacing","minWidth","formControlLabel","MinionDialog","classes","useState","open","setOpen","fullWidth","setFullWidth","maxWidth","setMaxWidth","handleClickOpen","handleClose","handleMaxWidthChange","event","target","value","handleFullWidthChange","checked","Orders","constructor","selectedMiniom","bind","dispatch","state","Returns","dialog","isExists","componentWillReceiveProps","nextProps","nextState","start","getState","date","end","toLocaleDateString","filter","item","jid","Date","map","full_ret","success","minion","_id","return","render","exportButton","filtering","icon","tooltip","onClick","rowData","mapStateToProps","ownProps","matchDispatchToProps"],"mappings":"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","sourcesContent":["\t\r\nimport axios from 'axios';\r\nimport React, { Component } from \"react\";\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport MaterialTable from 'material-table';\r\nimport {SALT_RETURNS} from \"../actions/types\";\r\nimport store from '../store';\r\nimport { saltReturns } from '../actions/date';\r\nimport { forwardRef } from 'react';\r\n// import MinionDialog from './MinionDialog';\r\n\r\nimport {\r\n  AddBox,\r\n  ArrowDownward,\r\n  Check,\r\n  ChevronLeft,\r\n  ChevronRight,\r\n  Clear,\r\n  DeleteOutline,\r\n  Edit,\r\n  FilterList,\r\n  FirstPage,\r\n  LastPage,\r\n  Remove,\r\n  SaveAlt,\r\n  Search,\r\n  ViewColumn\r\n}from '@material-ui/icons';\r\n\r\n\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n\r\nconst time =(str)=>{\r\n  const year =str.slice(0,4);\r\n  const month =String(parseInt(str.slice(4,6))-1);\r\n  const day =str.slice(6,8);\r\n  const hower= str.slice(8,10);\r\n  \r\n  const minet=str.slice(10,12);\r\n  return String(hower)+\":\"+String(minet);\r\n\r\n}\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) =>  <Edit {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\nconst dataColumns =[\r\n  { title: 'status', field: 'status', \r\n  //type: 'boolean'\r\n  cellStyle: x=>({\r\n    color:(x==='Succeeded')?'#208000':'#ff0000'})\r\n\r\n  },\r\n  { title: 'Name', field: 'name',\r\n  },\r\n  { title: 'ID', field: 'id' },\r\n  { title: 'Time', field: 'time', \r\n  //type: 'time'\r\n },\r\n  \r\n \r\n \r\n]\r\n\r\nconst dataTable=[\r\n  { \r\n    status: 'Faile',\r\n    name: 'sm-stud.jce.ac.il',\r\n    id: '5de92a636ff1ca1a1bcf3382',\r\n    time: time('20191205040346780161'),\r\n  },\r\n]\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\nfunction MinionDialog() {\r\n \r\n \r\n  \r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n \r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('sm');\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleMaxWidthChange = event => {\r\n    setMaxWidth(event.target.value);\r\n  };\r\n\r\n  const handleFullWidthChange = event => {\r\n    setFullWidth(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open max-width dialog\r\n      </Button>\r\n      <Dialog\r\n        fullWidth={fullWidth}\r\n        maxWidth={maxWidth}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            You can set my maximum width and whether to adapt or not.\r\n          </DialogContentText>\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\r\n              <Select\r\n                autoFocus\r\n                value={maxWidth}\r\n                onChange={handleMaxWidthChange}\r\n                inputProps={{\r\n                  name: 'max-width',\r\n                  id: 'max-width',\r\n                }}\r\n              >\r\n                <MenuItem value={false}>false</MenuItem>\r\n                <MenuItem value=\"xs\">xs</MenuItem>\r\n                <MenuItem value=\"sm\">sm</MenuItem>\r\n                <MenuItem value=\"md\">md</MenuItem>\r\n                <MenuItem value=\"lg\">lg</MenuItem>\r\n                <MenuItem value=\"xl\">xl</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControlLabel\r\n              className={classes.formControlLabel}\r\n              control={\r\n                <Switch checked={fullWidth} onChange={handleFullWidthChange} value=\"fullWidth\" />\r\n              }\r\n              label=\"Full width\"\r\n            />\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    \r\n    </React.Fragment>\r\n  );\r\n}\r\n class Orders extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.selectedMiniom = this.selectedMiniom.bind(this);\r\n    store.dispatch(saltReturns());\r\n    this.state = {\r\n      saltReturns: dataTable,\r\n      Returns:null,\r\n      dialog:false,\r\n    }\r\n  }\r\n  selectedMiniom(isExists,x){\r\n    if(isExists === true && x ===1){ return (<MinionDialog> isopen={true}></MinionDialog>) }\r\n   \r\n  \r\n  };\r\n  \r\n  componentWillReceiveProps(nextProps,nextState) {\r\n  \r\n    const start=store.getState().date.start;\r\n    const end=store.getState().date.end;\r\n    if(nextProps.saltReturns!==this.props.saltReturns || (((this.props.date.start.toLocaleDateString()!== nextProps.date.start.toLocaleDateString()) || (this.props.date.end.toLocaleDateString()!== nextProps.date.end.toLocaleDateString() )))){\r\n      this.state.saltReturns=nextProps.saltReturns.saltReturns.filter((item)=>{\r\n        let str=item.jid.slice(0,4)+\"-\"+String(parseInt(item.jid.slice(4,6))-1)+\"-\"+item.jid.slice(6,8);\r\n        let time=new Date(str);\r\n        if(time >= start && time<= end){return item;}\r\n      }).map((item)=>{\r\n        return {\r\n                status:(item.full_ret.success === true)?'Succeeded':'Faile',\r\n                name:item.minion,\r\n                id:item._id,\r\n                // id:item.full_ret.id,\r\n                time: time(item.full_ret.jid),\r\n                \r\n                // return:item.return\r\n               };}\r\n          )\r\n          this.state.Returns=nextProps.saltReturns.saltReturns.map((item)=>{\r\n            return{Returns:item.full_ret.return}\r\n          })\r\n\r\n         \r\n      // this.setState({saltReturns:nextProps.saltReturns});\r\n      // console.log(this.state.Returns,\"kkkkkkkkkkkkkkkk\")\r\n   \r\n    }\r\n  }\r\n\r\nrender(){\r\n\r\n  return (\r\n    <div>\r\n    <MaterialTable\r\n    title=\"minion_table\"\r\n    columns={dataColumns}\r\n    data={ this.state.saltReturns}\r\n    icons={tableIcons}\r\n   \r\n   \r\n   \r\n      options={{\r\n        exportButton: true,\r\n        filtering: true,\r\n \r\n        //rowStyle: rowData => ({\r\n         // color: (rowData.name==='su') ? '#daa9d9' : '#ff1a1a'})\r\n        \r\n      }}\r\n      actions={[\r\n        {\r\n\r\n          icon: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n          tooltip: 'Save User',\r\n          onClick: (event, rowData) => {<MinionDialog></MinionDialog>} \r\n        \r\n        }\r\n      ]\r\n      }\r\n    />\r\n    \r\n    {this.state.dialog === false  ? (<div/>) :\r\n      (<div/>)}\r\n      \r\n      </div>\r\n      \r\n  );\r\n \r\n}\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    saltReturns: state.saltReturns,\r\n    date: state.date \r\n  }\r\n}\r\nfunction matchDispatchToProps(dispatch){\r\n  return bindActionCreators({saltReturns: saltReturns}, dispatch);\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Orders);"]},"metadata":{},"sourceType":"module"}