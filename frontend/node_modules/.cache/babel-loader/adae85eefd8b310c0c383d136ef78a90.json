{"ast":null,"code":"var _jsxFileName = \"/home/avraham/SaltStack/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Dashboard from \"./Dashboard\";\nimport LoginForm from './Component/auth/LoginForm';\nimport RegisterForm from './Component/auth/RegisterForm';\nimport { createStore } from 'redux';\nimport appReducer from './reducers/index';\nimport { Provider } from 'react-redux';\nimport { loadUser } from './actions/authActions';\nimport { Store, ExitToApp } from '@material-ui/icons';\nimport store from './store';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport Landing from './Landing';\n\nclass App extends Component {\n  componentDidMount() {\n    store.dispatch(loadUser());\n  } // static propTypes = {\n  //   auth: PropTypes.object.isRequired\n  // };\n\n\n  render() {\n    // const { isAuthenticated, user } = this.props.auth;\n    return React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Landing, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n} // const PrivateRoute = ({ component: Component,isLoggedIn, ...props }) => \n// {\n//   console.log(isLoggedIn)\n//   console.log(\"routingg\")\n//   return (\n//     <Route\n//       {...props}\n//       render = {(props) => isLoggedIn\n//         ? <Component {...props} />\n//         : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\n//     />\n//   )\n// }\n// const mapStateToProps = state => ({\n//   auth: state.auth\n// });\n// export default connect(\n//   mapStateToProps,\n//   null\n// )(App);\n\n\nexport default App;","map":{"version":3,"sources":["/home/avraham/SaltStack/frontend/src/App.js"],"names":["React","Component","BrowserRouter","Route","Switch","Redirect","Dashboard","LoginForm","RegisterForm","createStore","appReducer","Provider","loadUser","Store","ExitToApp","store","connect","PropTypes","Landing","App","componentDidMount","dispatch","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,aAAR,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCC,QAAtC,QAAsD,kBAAtD;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,oBAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,GAAN,SAAkBlB,SAAlB,CAA4B;AAC1BmB,EAAAA,iBAAiB,GAAG;AAClBL,IAAAA,KAAK,CAACM,QAAN,CAAeT,QAAQ,EAAvB;AACD,GAHyB,CAK1B;AACA;AACA;;;AAGAU,EAAAA,MAAM,GAAG;AACP;AACA,WACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEP,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF;AAOD;;AAnByB,C,CAyB5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport {BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Dashboard from \"./Dashboard\";\nimport LoginForm from './Component/auth/LoginForm';\nimport RegisterForm from './Component/auth/RegisterForm';\nimport { createStore } from 'redux';\nimport appReducer from './reducers/index';\nimport {Provider} from 'react-redux';\nimport { loadUser } from './actions/authActions';\nimport { Store, ExitToApp } from '@material-ui/icons';\nimport store from './store';\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport './App.css';\nimport Landing from './Landing';\n\nclass App extends Component {\n  componentDidMount() {\n    store.dispatch(loadUser());\n  }\n  \n  // static propTypes = {\n  //   auth: PropTypes.object.isRequired\n  // };\n\n\n  render() {\n    // const { isAuthenticated, user } = this.props.auth;\n    return (\n      <Provider store={store} >\n      <Landing />\n      </Provider>\n      \n             \n    );\n  }\n}\n\n\n\n\n// const PrivateRoute = ({ component: Component,isLoggedIn, ...props }) => \n// {\n//   console.log(isLoggedIn)\n//   console.log(\"routingg\")\n//   return (\n//     <Route\n//       {...props}\n//       render = {(props) => isLoggedIn\n//         ? <Component {...props} />\n//         : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\n//     />\n//   )\n// }\n\n// const mapStateToProps = state => ({\n//   auth: state.auth\n// });\n\n// export default connect(\n//   mapStateToProps,\n//   null\n// )(App);\n\nexport default App"]},"metadata":{},"sourceType":"module"}