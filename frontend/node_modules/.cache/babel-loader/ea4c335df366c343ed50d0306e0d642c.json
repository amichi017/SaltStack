{"ast":null,"code":"import axios from 'axios';\nimport store from '../store';\nimport { DATE_SELECT, SALT_RETURNS } from './types'; // Date is select\n\nexport const dateSelect = (start, end) => {\n  return {\n    type: DATE_SELECT,\n    payload: {\n      start,\n      end\n    }\n  }; // console.log(\"start \",start);\n  // console.log(\"end \",end);\n};\n\nconst date = str => {\n  const year = str.slice(0, 4);\n  const month = String(parseInt(str.slice(4, 6)) - 1);\n  const day = str.slice(6, 8);\n  return String(day) + \"/\" + String(month) + \"/\" + String(year);\n}; //  const year=(str)=>{\n//     return str.slice(0,4);\n//  }\n//  const month=(str)=>{\n//     return String(parseInt(str.slice(4,6))-1)\n//  }\n//  const day=(str)=>{\n//     return str.slice(6,8);\n// }\n// Clear date\n//   export const saltReturns =  () => (dispatch, getState) => {\n//     const time =new Date().toDateString();\n//     let startYear=store.getState().date.start.getFullYear(),startMonth=store.getState().date.start.getMonth();\n//     let endYear=store.getState().date.end.getFullYear(),endMonth=store.getState().date.end.getMonth();\n//     console.log(startYear,\"startYear \");\n//     console.log(endYear,\"endYear\");\n//     console.log(store.getState(),\"the store \");\n//  if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\n// let data=[];\n//  for (let index = startYear; index < endYear; index.setDate(index.getFullYear() + 1)) {\n//     axios.get('http://127.0.0.1:5000/api/saltReturns/apply/'+'${index.getFullYear()}', tokenConfig(getState))\n//     .then((res) => { \n//         data.push(res.data);\n//         // console.log(res,\"res\");\n//     })\n//     .catch(err => {\n//         console.log(err,\"error in data\");\n//        });\n//  }\n//  store.dispatch({\n//     type: SALT_RETURNS,\n//     payload: data\n// })\n// };\n//Clear date\n\n\nexport const saltReturns = () => (dispatch, getState) => {\n  const time = new Date().toDateString(); // if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\n\n  axios.get('http://127.0.0.1:5000/api/saltReturns', tokenConfig(getState)).then(res => {\n    // console.log(res,\"res\");\n    store.dispatch({\n      type: SALT_RETURNS,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(err, \"error in data\");\n  });\n  console.log(store.getState(), \"the store \");\n}; // Setup config/headers and token\n\nexport const tokenConfig = getState => {\n  // Get token from localstorage\n  const token = getState().auth.access_token; // Headers\n\n  const config = {\n    headers: {\n      \"Content-type\": \"multipart/form-data\"\n    }\n  }; // If token, add to headers\n\n  if (token) {\n    config.headers[\"Authorization\"] = ` Bearer ${token} `;\n  }\n\n  return config;\n};","map":{"version":3,"sources":["C:/react/SaltStack/frontend/src/actions/date.js"],"names":["axios","store","DATE_SELECT","SALT_RETURNS","dateSelect","start","end","type","payload","date","str","year","slice","month","String","parseInt","day","saltReturns","dispatch","getState","time","Date","toDateString","get","tokenConfig","then","res","data","catch","err","console","log","token","auth","access_token","config","headers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACC,SAASC,WAAT,EAAsBC,YAAtB,QAAyC,SAAzC,C,CACA;;AACA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAD,EAASC,GAAT,KAAiB;AAEvC,SAAO;AACKC,IAAAA,IAAI,EAAEL,WADX;AAEKM,IAAAA,OAAO,EAAC;AAACH,MAAAA,KAAD;AAAOC,MAAAA;AAAP;AAFb,GAAP,CAFuC,CAMvC;AACA;AAEH,CATM;;AAWP,MAAOG,IAAI,GAAEC,GAAD,IAAO;AAChB,QAAMC,IAAI,GAAED,GAAG,CAACE,KAAJ,CAAU,CAAV,EAAY,CAAZ,CAAZ;AACA,QAAMC,KAAK,GAAEC,MAAM,CAACC,QAAQ,CAACL,GAAG,CAACE,KAAJ,CAAU,CAAV,EAAY,CAAZ,CAAD,CAAR,GAAyB,CAA1B,CAAnB;AACA,QAAMI,GAAG,GAAEN,GAAG,CAACE,KAAJ,CAAU,CAAV,EAAY,CAAZ,CAAX;AACA,SAAOE,MAAM,CAACE,GAAD,CAAN,GAAY,GAAZ,GAAgBF,MAAM,CAACD,KAAD,CAAtB,GAA8B,GAA9B,GAAkCC,MAAM,CAACH,IAAD,CAA/C;AAED,CANF,C,CAOD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACF;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACC;;;AACA,OAAO,MAAMM,WAAW,GAAI,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAEtD,QAAMC,IAAI,GAAE,IAAIC,IAAJ,GAAWC,YAAX,EAAZ,CAFsD,CAI1D;;AACItB,EAAAA,KAAK,CAACuB,GAAN,CAAU,uCAAV,EAAmDC,WAAW,CAACL,QAAD,CAA9D,EACAM,IADA,CACMC,GAAD,IAAS;AAEX;AACJzB,IAAAA,KAAK,CAACiB,QAAN,CAAe;AACXX,MAAAA,IAAI,EAAEJ,YADK;AAEXK,MAAAA,OAAO,EAAEkB,GAAG,CAACC;AAFF,KAAf;AAGG,GAPF,EAQAC,KARA,CAQMC,GAAG,IAAI;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAgB,eAAhB;AAEA,GAXH;AAaEC,EAAAA,OAAO,CAACC,GAAR,CAAY9B,KAAK,CAACkB,QAAN,EAAZ,EAA6B,YAA7B;AACN,CAnBO,C,CAuBR;;AACA,OAAO,MAAMK,WAAW,GAAGL,QAAQ,IAAI;AACnC;AACA,QAAMa,KAAK,GAAGb,QAAQ,GAAGc,IAAX,CAAgBC,YAA9B,CAFmC,CAInC;;AACA,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf,CALmC,CAWnC;;AACA,MAAGJ,KAAH,EAAU;AACPG,IAAAA,MAAM,CAACC,OAAP,CAAe,eAAf,IAAmC,WAAUJ,KAAM,GAAnD;AACF;;AAEJ,SAAOG,MAAP;AACA,CAjBM","sourcesContent":["import axios from 'axios';\r\nimport store from '../store'\r\n import { DATE_SELECT, SALT_RETURNS} from './types';\r\n // Date is select\r\n export const dateSelect = (start , end) => {\r\n   \r\n     return {\r\n                 type: DATE_SELECT,\r\n                 payload:{start,end}\r\n              };\r\n     // console.log(\"start \",start);\r\n     // console.log(\"end \",end);\r\n     \r\n }\r\n \r\n const  date=(str)=>{\r\n    const year =str.slice(0,4);\r\n    const month =String(parseInt(str.slice(4,6))-1);\r\n    const day =str.slice(6,8);\r\n    return String(day)+\"/\"+String(month)+\"/\"+String(year);\r\n  \r\n  }\r\n//  const year=(str)=>{\r\n//     return str.slice(0,4);\r\n//  }\r\n//  const month=(str)=>{\r\n//     return String(parseInt(str.slice(4,6))-1)\r\n//  }\r\n//  const day=(str)=>{\r\n//     return str.slice(6,8);\r\n// }\r\n  // Clear date\r\n//   export const saltReturns =  () => (dispatch, getState) => {\r\n     \r\n//     const time =new Date().toDateString();\r\n//     let startYear=store.getState().date.start.getFullYear(),startMonth=store.getState().date.start.getMonth();\r\n//     let endYear=store.getState().date.end.getFullYear(),endMonth=store.getState().date.end.getMonth();\r\n    \r\n//     console.log(startYear,\"startYear \");\r\n//     console.log(endYear,\"endYear\");\r\n//     console.log(store.getState(),\"the store \");\r\n//  if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\r\n// let data=[];\r\n//  for (let index = startYear; index < endYear; index.setDate(index.getFullYear() + 1)) {\r\n     \r\n//     axios.get('http://127.0.0.1:5000/api/saltReturns/apply/'+'${index.getFullYear()}', tokenConfig(getState))\r\n//     .then((res) => { \r\n//         data.push(res.data);\r\n//         // console.log(res,\"res\");\r\n//     })\r\n//     .catch(err => {\r\n//         console.log(err,\"error in data\");\r\n       \r\n//        });\r\n//  }\r\n//  store.dispatch({\r\n//     type: SALT_RETURNS,\r\n//     payload: data\r\n// })\r\n   \r\n// };\r\n //Clear date\r\n export const saltReturns =  () => (dispatch, getState) => {\r\n     \r\n     const time =new Date().toDateString();\r\n\r\n // if(getState().auth.token !== null){      console.log(\"ppppppppppppppppp\");}\r\n     axios.get('http://127.0.0.1:5000/api/saltReturns', tokenConfig(getState))\r\n    .then((res) => { \r\n        \r\n        // console.log(res,\"res\");\r\n    store.dispatch({\r\n        type: SALT_RETURNS,\r\n        payload: res.data\r\n    })})\r\n    .catch(err => {\r\n        console.log(err,\"error in data\");\r\n       \r\n       });\r\n\r\n       console.log(store.getState(),\"the store \");\r\n};\r\n\r\n\r\n\r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n    // Get token from localstorage\r\n    const token = getState().auth.access_token;\r\n  \r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"multipart/form-data\"\r\n        }\r\n    }\r\n\r\n    // If token, add to headers\r\n    if(token) {\r\n       config.headers[\"Authorization\"] = ` Bearer ${token} `;\r\n    }\r\n\r\n return config;\r\n}"]},"metadata":{},"sourceType":"module"}