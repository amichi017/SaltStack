{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\SaltStack\\\\frontend\\\\src\\\\Component\\\\routers\\\\Routes.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport * as authActions from '../../actions/authActions';\nimport Dashboard from '../../Dashboard';\nimport LoginForm from '../auth/LoginForm';\nimport RegisterForm from '../auth/RegisterForm';\nimport ChangePasswordForm from '../auth/ChangePasswordForm';\nimport PropTypes from 'prop-types';\n\nclass Routes extends Component {\n  // Similar to componentDidMount and componentDidUpdate:\n  render() {\n    return /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/\",\n      component: Dashboard,\n      authed: this.props.auth.isAuthenticated,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      component: LoginForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/register\",\n      component: RegisterForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/changePass\",\n      component: ChangePasswordForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nRoutes.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst PrivateRoute = ({\n  component: Component,\n  authed,\n  ...rest\n}) =>\n/*#__PURE__*/\n// console.log(\"private routhh\", authed),\nReact.createElement(Route, Object.assign({}, rest, {\n  render: props => authed ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(LoginForm, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  })),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }\n}));\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, authActions)(Routes);","map":{"version":3,"sources":["C:/react/SaltStack/frontend/src/Component/routers/Routes.js"],"names":["React","Component","connect","BrowserRouter","Route","authActions","Dashboard","LoginForm","RegisterForm","ChangePasswordForm","PropTypes","Routes","render","props","auth","isAuthenticated","propTypes","bool","error","object","isRequired","login","func","clearErrors","PrivateRoute","component","authed","rest","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,kBAArC;AACA,OAAO,KAAKC,WAAZ,MAA6B,2BAA7B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;AAEA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAN,SAAqBV,SAArB,CAA+B;AAU3B;AACFW,EAAAA,MAAM,GAAG;AAEP,wBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,KAAK,MAAnB;AAAoB,MAAA,IAAI,EAAC,GAAzB;AAA6B,MAAA,SAAS,EAAEN,SAAxC;AAAmD,MAAA,MAAM,EAAE,KAAKO,KAAL,CAAWC,IAAX,CAAgBC,eAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAA2B,MAAA,SAAS,EAAER,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAEC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,aAAlB;AAAgC,MAAA,SAAS,EAAEC,kBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,CADF;AAYD;;AAzB4B;;AAAzBE,M,CAGGK,S,GAAY;AACjBD,EAAAA,eAAe,EAAEL,SAAS,CAACO,IADV;AAEjBC,EAAAA,KAAK,EAAER,SAAS,CAACS,MAAV,CAAiBC,UAFP;AAGjBC,EAAAA,KAAK,EAAEX,SAAS,CAACY,IAAV,CAAeF,UAHL;AAIjBG,EAAAA,WAAW,EAAEb,SAAS,CAACY,IAAV,CAAeF;AAJX,C;;AAyBrB,MAAMI,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAExB,SAAb;AAAwByB,EAAAA,MAAxB;AAAgC,KAAGC;AAAnC,CAAD;AAAA;AACnB;AACA,oBAAC,KAAD,oBACMA,IADN;AAEE,EAAA,MAAM,EAAEd,KAAK,IACXa,MAAM,gBACF,oBAAC,SAAD,oBAAeb,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADE,gBAEF,oBAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFF;;AAaA,MAAMe,eAAe,GAAGC,KAAK,KAAK;AAAEf,EAAAA,IAAI,EAAEe,KAAK,CAACf;AAAd,CAAL,CAA7B;;AAEA,eAAeZ,OAAO,CAAC0B,eAAD,EAAkBvB,WAAlB,CAAP,CAAsCM,MAAtC,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport * as authActions from '../../actions/authActions'\r\nimport Dashboard from '../../Dashboard';\r\nimport LoginForm from '../auth/LoginForm';\r\nimport RegisterForm from '../auth/RegisterForm';\r\nimport ChangePasswordForm from '../auth/ChangePasswordForm';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Routes extends Component {\r\n\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n    // Similar to componentDidMount and componentDidUpdate:\r\n  render() {\r\n    \r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <PrivateRoute exact path=\"/\" component={Dashboard} authed={this.props.auth.isAuthenticated} />\r\n          <Route exact path=\"/login\" component={LoginForm} />\r\n          <Route exact path=\"/register\" component={RegisterForm} />\r\n          <Route exact path=\"/changePass\" component={ChangePasswordForm} />\r\n        \r\n        </div>\r\n      </BrowserRouter>  \r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, authed, ...rest }) => (\r\n  // console.log(\"private routhh\", authed),\r\n  <Route\r\n    {...rest}\r\n    render={props => (\r\n      authed\r\n        ? <Component {...props} />\r\n        : <LoginForm {...props}/>\r\n    )}\r\n  />\r\n);\r\n\r\n\r\nconst mapStateToProps = state => ({ auth: state.auth });\r\n\r\nexport default connect(mapStateToProps, authActions)(Routes);"]},"metadata":{},"sourceType":"module"}